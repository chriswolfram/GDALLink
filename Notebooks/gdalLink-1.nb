(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1297482,      23967]
NotebookOptionsPosition[   1279674,      23655]
NotebookOutlinePosition[   1280069,      23671]
CellTagsIndexPosition[   1280026,      23668]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.924297122694993*^9, 3.924297123011696*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"e0f2d994-ad51-4345-950e-f8b730ac8c6c"],

Cell[CellGroupData[{

Cell["Load paclet", "Section",
 CellChangeTimes->{{3.924297114011228*^9, 
  3.9242971174175386`*^9}},ExpressionUUID->"b4d5b2ba-9cad-4d52-bb03-\
c444437b6b46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"ParentDirectory", "@", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.924297124157946*^9, 3.9242971437893667`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b4a018b4-ed72-45de-a14b-9d041d4fee83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletObject", "[", "\"\<ChristopherWolfram/GDALLink\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.924297144416246*^9, 3.924297175935409*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"87db8e1a-53d4-472e-9cd2-72c4dcef0aa7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ChristopherWolfram/GDALLink\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.0.0\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ChristopherWolfram/GDALLink\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.0.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/christopher/git/GDALLink\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"One-line description of the paclet\"", Short], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "ChristopherWolfram/GDALLink", "Description" -> 
    "One-line description of the paclet", "Creator" -> "Christopher Wolfram", 
    "Version" -> "1.0.0", "WolframVersion" -> "14+", "PublisherID" -> 
    "ChristopherWolfram", "License" -> "MIT", "PrimaryContext" -> 
    "ChristopherWolfram`GDALLink`", "DocumentationURL" -> 
    "https://resources.wolframcloud.com/PacletRepository/resources", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {"ChristopherWolfram`GDALLink`"}}, {
      "Documentation", "Root" -> "Documentation", "Language" -> "English"}}, 
    "Location" -> "/Users/christopher/git/GDALLink"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[2]=",ExpressionUUID->"1ceddbd8-7852-43e2-9eb8-329c2393b5c4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ChristopherWolfram`GDALLink`\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.924297178441412*^9, 3.924297184250284*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3d7a9d41-0890-49fa-bf3c-32831cc78b84"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiments", "Section",
 CellChangeTimes->{{3.924297118653763*^9, 
  3.9242971205639353`*^9}},ExpressionUUID->"3e0e8f6b-c516-4b7e-81e6-\
e703d5595225"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$HistoryLength", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.924297312554747*^9, 3.924297314569303*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"83440d1b-3cdd-4c7d-ab90-184273e9d883"],

Cell[BoxData[
 RowBox[{"GDALInitialize", "[", "]"}]], "Input",
 CellChangeTimes->{{3.9242971872550783`*^9, 3.924297188795718*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"9f70aa05-5ae3-4109-95a5-db9893bebdcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GDALDatasetImport", "[", "\"\<path/to/nowhere.shp\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.924297291441389*^9, 3.924297297182541*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"8d6d82ba-6360-44ac-8efa-9eb8ebfe19ff"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[5]=",ExpressionUUID->"e2ee0935-9584-4234-884c-c4458ecccca6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 1", "Subsection",ExpressionUUID->"c1255cd8-4fd2-4c10-8349-91f44801afab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "=", 
  RowBox[{
  "GDALDatasetImport", 
   "[", "\"\</Users/christopher/Library/CloudStorage/Dropbox/mathematica/\
languageMaps/rawData/gmi_geodata/lang/langa.shp\>\"", "]"}]}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"ea2eed04-90ae-4c46-a0b9-3da40e35ef36"],

Cell[BoxData[
 RowBox[{"GDALDataset", "[", 
  InterpretationBox[
   RowBox[{
    TagBox["ManagedObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GridBox[{{
                TagBox[
                 InterpretationBox[
                  RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                  OpaqueRawPointer[5701127968], Selectable -> False, Editable -> 
                  False, SelectWithContents -> True], "SummaryItem"]}, {
                RowBox[{
                  TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["True", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GridBox[{{
                TagBox[
                 InterpretationBox[
                  RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                  OpaqueRawPointer[5701127968], Selectable -> False, Editable -> 
                  False, SelectWithContents -> True], "SummaryItem"]}, {
                RowBox[{
                  TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["True", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Freeing function: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib\"\
", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", 
                    "GDALClose", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[5916628312], 
                    "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Base value: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5701127968], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                   "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ManagedObject[
    OpaqueRawPointer[5701127968], 
    OpaqueRawPointer[5701127968], 
    ForeignFunction[
    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", "GDALClose", 
     DataStructure[
     "RawForeignFunction", {
      "FunctionPointer" -> OpaqueRawPointer[5916628312], 
       "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "]"}]], "Output",
 CellLabel->"Out[5]=",ExpressionUUID->"05163049-92e5-4e8b-b4dc-d3526c51823b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "[", "\"\<LayerAssociation\>\"", "]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"21ee3eb0-a322-4e7f-b0bc-67211e8e1a5c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"langa\"\>", "\[Rule]", 
   RowBox[{"GDALLayer", "[", 
    RowBox[{
     RowBox[{"GDALDataset", "[", 
      InterpretationBox[
       RowBox[{
        TagBox["ManagedObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"131a04a00\"", "\"16\""], 
                    ShowStringCharacters -> False], 5127555584, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"131a04a00\"", "\"16\""], 
                    ShowStringCharacters -> False], 5127555584, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5127555584], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"131a04a00\"", "\"16\""], 
                    ShowStringCharacters -> False], 5127555584, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"131a04a00\"", "\"16\""], 
                    ShowStringCharacters -> False], 5127555584, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5127555584], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Freeing function: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib\"\
", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", 
                    "GDALClose", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[5445408088], 
                    "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base value: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"131a04a00\"", "\"16\""], 
                    ShowStringCharacters -> False], 5127555584, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"131a04a00\"", "\"16\""], 
                    ShowStringCharacters -> False], 5127555584, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5127555584], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       ManagedObject[
        OpaqueRawPointer[5127555584], 
        OpaqueRawPointer[5127555584], 
        ForeignFunction[
        "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", "GDALClose", 
         DataStructure[
         "RawForeignFunction", {
          "FunctionPointer" -> OpaqueRawPointer[5445408088], 
           "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "]"}], ",", 
     InterpretationBox[
      RowBox[{
       TagBox["OpaqueRawPointer",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                GridBox[{{
                   RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"131a05270\"", "\"16\""], 
                    ShowStringCharacters -> False], 5127557744, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                GridBox[{{
                   RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"131a05270\"", "\"16\""], 
                    ShowStringCharacters -> False], 5127557744, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      OpaqueRawPointer[5127557744],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[6]=",ExpressionUUID->"920f1337-f7a6-4c63-a09a-b82ce25b6824"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "[", "\"\<LayerCount\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924298181935129*^9, 3.924298189403249*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"b9c103fe-b55e-4ff3-8ceb-301362257120"],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[49]=",ExpressionUUID->"9a2643fd-627b-4cff-a8bb-a49687ce9910"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "=", 
  RowBox[{"dataset", "[", 
   RowBox[{"\"\<Layer\>\"", ",", "1"}], "]"}]}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"08fbebdc-0479-4ef1-8160-6e35325adc09"],

Cell[BoxData[
 RowBox[{"GDALLayer", "[", 
  RowBox[{
   RowBox[{"GDALDataset", "[", 
    InterpretationBox[
     RowBox[{
      TagBox["ManagedObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5701127968], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                   "SummaryItem"]}, {
                  RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5701127968], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                   "SummaryItem"]}, {
                  RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Freeing function: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib\"\
", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", 
                    "GDALClose", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[5916628312], 
                    "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Base value: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d04f20\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701127968, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5701127968], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     ManagedObject[
      OpaqueRawPointer[5701127968], 
      OpaqueRawPointer[5701127968], 
      ForeignFunction[
      "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", "GDALClose", 
       DataStructure[
       "RawForeignFunction", {
        "FunctionPointer" -> OpaqueRawPointer[5916628312], 
         "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "]"}], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 RowBox[{
                   TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d05620\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701129760, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 RowBox[{
                   TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"153d05620\"", "\"16\""], 
                    ShowStringCharacters -> False], 5701129760, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    OpaqueRawPointer[5701129760],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Output",
 CellLabel->"Out[6]=",ExpressionUUID->"e9fbcae0-4b5b-421d-8f63-d7c4bfddd6dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"layer", "[", "\"\<FieldName\>\"", "]"}], "//", "Length"}]], "Input",\

 CellLabel->"In[10]:=",ExpressionUUID->"b597d422-c8f3-4571-908f-43e3f5bbb14a"],

Cell[BoxData["16"], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"45859e04-6358-4d49-9b84-b6e1d0ebb264"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"layer", "[", "\"\<FieldTabular\>\"", "]"}]}], ";"}], "//", 
  "EchoTiming"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"a5c30808-a6b0-4bb5-9e57-95bc2d64e1f9"],

Cell[BoxData["3.146029`"], "EchoTiming",ExpressionUUID->"104a1ced-d7df-4f4d-b0c8-eec080d3fa81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["data"], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"dcc29899-af8b-4932-adb4-0f834f9f0974"],

Cell[BoxData[
 TemplateBox[<|
  "Summary" -> 
   TemplateBox[<|
     "RowCount" -> 7612, "ColumnCount" -> 16, "ColumnTypes" -> 
      Grid[{{"ID", "String"}, {"ID_ISO_A3", "String"}, {
         "ID_ISO_A2", "String"}, {"ID_FIPS", "String"}, {
         "NAM_LABEL", "String"}, {"NAME_PROP", "String"}, {
         "NAME2", "String"}, {"NAM_ANSI", "String"}, {"CNT", "String"}, {
         "C1", "String"}, {"POP", "String"}, {"LMP_POP1", "Integer64"}, {
         "G", "String"}, {"LMP_CLASS", "String"}, {"FAMILYPROP", "String"}, {
         "FAMILY", "String"}}, Alignment -> Left], "Backend" -> 
      "Tabular`Backend`WolframKernel", "UUID" -> 
      "Tabular-1c997fc6-99b2-431d-9795-673363c01d0b", "Form" -> StandardForm, 
      "Interpretable" -> True|>, "TabularSummary", 
     BaseStyle -> (DynamicUpdating -> True)], "Main" -> 
   TemplateBox[<|
     "State" -> "LiveTabularReference", "UUID" -> 
      "Tabular-1c997fc6-99b2-431d-9795-673363c01d0b", "CoreBox" -> 
      TableViewBox[
        Dynamic[
         FrontEnd`TabularReference[
         "Tabular-1c997fc6-99b2-431d-9795-673363c01d0b"]], Expression, 
        AppearanceElements -> {"RowHeaders", "ColumnHeaders", "ResizeArea"}, 
        DefaultBaseStyle -> "TabularTableview", HeaderSize -> {3, Automatic}, 
        ScrollPosition -> {0., 0.}, 
        TableViewBoxAlignment -> <|
         "ColumnsIndexed" -> {
           1 -> Left, 2 -> Left, 3 -> Left, 4 -> Left, 5 -> Left, 6 -> Left, 
            7 -> Left, 8 -> Left, 9 -> Left, 10 -> Left, 11 -> Left, 12 -> 
            Right, 13 -> Left, 14 -> Left, 15 -> Left, 16 -> Left}|>, 
        TableViewBoxFieldType -> <|
         "ColumnsIndexed" -> {
           1 -> String, 2 -> String, 3 -> String, 4 -> String, 5 -> String, 6 -> 
            String, 7 -> String, 8 -> String, 9 -> String, 10 -> String, 11 -> 
            String, 12 -> Number, 13 -> String, 14 -> String, 15 -> String, 
            16 -> String}|>, 
        TableViewBoxHeaders -> <|
         "ColumnsIndexed" -> {
           1 -> TemplateBox[{"\"ID\""}, "StringTabularHeader"], 2 -> 
            TemplateBox[{"\"ID_ISO_A3\""}, "StringTabularHeader"], 3 -> 
            TemplateBox[{"\"ID_ISO_A2\""}, "StringTabularHeader"], 4 -> 
            TemplateBox[{"\"ID_FIPS\""}, "StringTabularHeader"], 5 -> 
            TemplateBox[{"\"NAM_LABEL\""}, "StringTabularHeader"], 6 -> 
            TemplateBox[{"\"NAME_PROP\""}, "StringTabularHeader"], 7 -> 
            TemplateBox[{"\"NAME2\""}, "StringTabularHeader"], 8 -> 
            TemplateBox[{"\"NAM_ANSI\""}, "StringTabularHeader"], 9 -> 
            TemplateBox[{"\"CNT\""}, "StringTabularHeader"], 10 -> 
            TemplateBox[{"\"C1\""}, "StringTabularHeader"], 11 -> 
            TemplateBox[{"\"POP\""}, "StringTabularHeader"], 12 -> 
            TemplateBox[{"\"LMP_POP1\""}, "Integer64TabularHeader"], 13 -> 
            TemplateBox[{"\"G\""}, "StringTabularHeader"], 14 -> 
            TemplateBox[{"\"LMP_CLASS\""}, "StringTabularHeader"], 15 -> 
            TemplateBox[{"\"FAMILYPROP\""}, "StringTabularHeader"], 16 -> 
            TemplateBox[{"\"FAMILY\""}, "StringTabularHeader"]}|>, 
        TableViewBoxItemDisplayRules -> <|
         "Columns" -> {{{
             Blank[Missing] -> (MakeBoxes[#, TraditionalForm]& )}}}, 
          "ColumnsIndexed" -> {
           12 -> <|Blank[Real] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]], Blank[Integer] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]]|>}|>, 
        TableViewBoxItemSize -> <|
         "ColumnsIndexed" -> {
           1 -> 5, 2 -> 7, 3 -> 7, 4 -> 5, 5 -> 20, 6 -> 16, 7 -> 16, 8 -> 16,
             9 -> 6, 10 -> 21, 11 -> 20, 12 -> 8, 13 -> 24, 14 -> 7, 15 -> 11,
             16 -> 11}|>, ImageSize -> {{666., 681.}, {258., 273.}}], 
      "Snapshot" -> 
      Tabular[<|"RawSchema" -> <|
          "ColumnProperties" -> <|
            "ID" -> <|"ElementType" -> "String"|>, 
             "ID_ISO_A3" -> <|"ElementType" -> "String"|>, 
             "ID_ISO_A2" -> <|"ElementType" -> "String"|>, 
             "ID_FIPS" -> <|"ElementType" -> "String"|>, 
             "NAM_LABEL" -> <|"ElementType" -> "String"|>, 
             "NAME_PROP" -> <|"ElementType" -> "String"|>|>, "KeyColumns" -> 
           None, "Backend" -> "WolframKernel"|>, 
         "BackendData" -> <|"ColumnData" -> DataStructure["ColumnTable", {{
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 7, 14, 21, 28, 35, 42, 49, 56}, 
                    "PAE-ABWNLI-AFGPHV-AFGBRH-AFGPBT-AFGPRS-AFGHAZ-AFGMLG-\
AFG"}, {}, None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 7, 14, 21, 28, 35, 42, 49, 56}, 
                    "pap-ABWnli-AFGphv-AFGbrh-AFGpbt-AFGprs-AFGhaz-AFGmhj-\
AFG"}, {}, None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 6, 12, 18, 24, 30, 36, 42, 48}, 
                    "pap-awnli-afphv-afbrh-afpbt-afprs-afhaz-afmhj-af"}, {}, 
                   None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 6, 12, 18, 24, 30, 36, 42, 48}, 
                    "pap-AAnli-AFphv-AFbrh-AFpbt-AFprs-AFhaz-AFmhj-AF"}, {}, 
                   None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   2, {0, 10, 18, 27, 33, 48, 61, 69, 76}, 
                    "PapiamentuGrangaliPahlavaniBrahuiSouthern PashtoEastern \
FarsiHazaragiMogholi"}, {}, None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 10, 18, 27, 33, 49, 63, 71, 78}, 
                    "PapiamentuGrangaliPahlavaniBrahuiPashto, SouthernFarsi, \
EasternHazaragiMogholi"}, {}, None}, "ElementType" -> "String"|>]}}]|>|>], 
      "RegionSnapshot" -> {
        Span[1, 8], 
        Span[1, 6]}, "DimensionsSnapshot" -> {7612, 16}|>, 
     "TabularReferenceWrapper"], 
   "ItemSizeConstraints" -> <|
    "ColumnsIndexed" -> {
      1 -> {3, 5}, 2 -> {3, 7}, 3 -> {3, 7}, 4 -> {3, 5}, 5 -> {3, 25}, 
       6 -> {3, 24}, 7 -> {3, 24}, 8 -> {3, 26}, 9 -> {3, 6}, 10 -> {3, 21}, 
       11 -> {3, 51}, 12 -> {3, 8}, 13 -> {3, 140}, 14 -> {3, 7}, 
       15 -> {3, 13}, 16 -> {3, 13}}|>|>,
  "TabularRef"]], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"0e280fd9-1a44-446c-a6dc-31256db45168"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counts", "[", 
  RowBox[{"Length", "/@", "data"}], "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"fb1e6485-f814-4158-a858-1c90e20aa589"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"7612", "\[Rule]", "16"}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[12]=",ExpressionUUID->"bf59fe06-c4dd-4206-8428-97bfd3a68bd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"layer", "[", "\"\<FieldAssociation\>\"", "]"}]}], ";"}], "//", 
  "EchoTiming"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"61fdcc2e-4280-47b0-9e2a-c03c9b0f0ad7"],

Cell[BoxData["2.116114`"], "EchoTiming",ExpressionUUID->"819fa0c7-1ac3-4c94-85ee-ab69b542bcfa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", 
  RowBox[{"\"\<RawFieldType\>\"", ",", "11"}], "]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"3571b5dc-cb0a-473e-81d5-a7b2a0444855"],

Cell[BoxData["12"], "Output",
 CellLabel->"Out[6]=",ExpressionUUID->"94d1c795-fee4-4c92-aea3-a59b2eb1ea3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"layer", "[", 
    RowBox[{"\"\<RawFieldType\>\"", ",", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"433a7975-7235-48d0-9027-5bd56b4e19e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "$Failed", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
   "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "12", ",", "4", ",", "4",
    ",", "4", ",", "4", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", 
   "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", 
   ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", 
   "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", 
   ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", 
   "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", 
   ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", 
   "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", 
   ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", 
   "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", 
   ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", 
   "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", 
   ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", 
   "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", 
   ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", 
   "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", 
   ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", 
   "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", 
   ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed"}], 
  "}"}]], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"cd7cddf0-a859-4f2f-9f75-580f73e4e0f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", "\"\<Name\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924298603785317*^9, 3.9242986817513313`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"f4da7f87-d800-4d8c-9b30-e0c35eb66f5c"],

Cell[BoxData["\<\"langa\"\>"], "Output",
 CellLabel->"Out[50]=",ExpressionUUID->"f2012ebb-d36a-4b63-b698-02f38047dafe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", "[", 
   RowBox[{"\"\<Layer\>\"", ",", "\"\<langa\>\""}], "]"}], "===", 
  "layer"}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"7a3df81b-5f27-4568-bdfd-2654591712df"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[51]=",ExpressionUUID->"ef5d3de9-0c22-42e8-8075-91a8327861cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"layer", "[", "\"\<ResetReading\>\"", "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"5646de19-c233-46e8-a16b-6ce344ea9993"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", "\"\<NextFeature\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9242993096079206`*^9, 3.92429931299933*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"9474026b-c392-4ad8-94e4-9397735f5ab7"],

Cell[BoxData[
 RowBox[{"GDALFeature", "[", 
  RowBox[{
   RowBox[{"GDALLayer", "[", 
    RowBox[{
     RowBox[{"GDALDataset", "[", 
      InterpretationBox[
       RowBox[{
        TagBox["ManagedObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"151d05380\"", "\"16\""], 
                    ShowStringCharacters -> False], 5667574656, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"151d05380\"", "\"16\""], 
                    ShowStringCharacters -> False], 5667574656, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5667574656], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"151d05380\"", "\"16\""], 
                    ShowStringCharacters -> False], 5667574656, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"151d05380\"", "\"16\""], 
                    ShowStringCharacters -> False], 5667574656, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5667574656], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Freeing function: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib\"\
", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", 
                    "GDALClose", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[5730915672], 
                    "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base value: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"151d05380\"", "\"16\""], 
                    ShowStringCharacters -> False], 5667574656, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"151d05380\"", "\"16\""], 
                    ShowStringCharacters -> False], 5667574656, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5667574656], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       ManagedObject[
        OpaqueRawPointer[5667574656], 
        OpaqueRawPointer[5667574656], 
        ForeignFunction[
        "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", "GDALClose", 
         DataStructure[
         "RawForeignFunction", {
          "FunctionPointer" -> OpaqueRawPointer[5730915672], 
           "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "]"}], ",", 
     InterpretationBox[
      RowBox[{
       TagBox["OpaqueRawPointer",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                GridBox[{{
                   RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"151d05d60\"", "\"16\""], 
                    ShowStringCharacters -> False], 5667577184, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                GridBox[{{
                   RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"151d05d60\"", "\"16\""], 
                    ShowStringCharacters -> False], 5667577184, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      OpaqueRawPointer[5667577184],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["ManagedObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003479b80\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553171291008, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003479b80\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553171291008, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   OpaqueRawPointer[105553171291008], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}, {
                 RowBox[{
                   TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["True", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003479b80\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553171291008, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003479b80\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553171291008, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   OpaqueRawPointer[105553171291008], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}, {
                 RowBox[{
                   TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["True", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Freeing function: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OGR_F_Destroy\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"Void\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OGR_F_Destroy\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"Void\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib\"\
", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", 
                    "OGR_F_Destroy", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[5721364144], 
                    "Type" -> ({"OpaqueRawPointer"} -> "Void")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Base value: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003479b80\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553171291008, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003479b80\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553171291008, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[105553171291008], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ManagedObject[
     OpaqueRawPointer[105553171291008], 
     OpaqueRawPointer[105553171291008], 
     ForeignFunction[
     "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", "OGR_F_Destroy", 
      
      DataStructure[
      "RawForeignFunction", {
       "FunctionPointer" -> OpaqueRawPointer[5721364144], 
        "Type" -> ({"OpaqueRawPointer"} -> "Void")}]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Output",
 CellLabel->"Out[13]=",ExpressionUUID->"8852e89d-2456-4350-a1db-50469cb03a28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", "\"\<RawLayerDefinition\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9243004498897657`*^9, 3.92430045703281*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"c5a95d07-c3b6-476e-aa81-ab352817add1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"6000034700a0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553171251360, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"6000034700a0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553171251360, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  OpaqueRawPointer[105553171251360],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"de51948a-8a76-4deb-bc44-b0fd86a7f664"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", "\"\<FieldCount\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924300457729731*^9, 3.924300468110895*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"be0cf20d-c73f-4175-a477-1af52ca028dd"],

Cell[BoxData["16"], "Output",
 CellLabel->"Out[15]=",ExpressionUUID->"d1b714ce-a444-4223-8052-e1c43f74a2ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", 
  RowBox[{"\"\<RawFieldDefinition\>\"", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.92430069387363*^9, 3.9243007334745092`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"72af52e0-5aa3-48d1-b5b5-ddd10d6e6277"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003984080\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553176576128, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003984080\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553176576128, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  OpaqueRawPointer[105553176576128],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"bf974236-cd4c-4dd0-ad9a-48a5adaaf9db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", 
  RowBox[{"\"\<RawFieldType\>\"", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.924301605539912*^9, 3.9243016109853067`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"fc84ed1d-acc1-4add-81e3-2e2c93065557"],

Cell[BoxData["4"], "Output",
 CellLabel->"Out[17]=",ExpressionUUID->"4199c3fb-82fd-4e28-a31c-5c0ea5b2ff07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", 
  RowBox[{"\"\<RawFieldType\>\"", ",", 
   RowBox[{"-", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924301556667515*^9, 3.9243015628689613`*^9}, {
  3.924301603969302*^9, 3.9243016041480827`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"272d785e-362d-4191-9c68-5d70a1827bfe"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[18]=",ExpressionUUID->"9097708a-6426-4319-ace5-b8c78998858c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"feature", "=", 
  RowBox[{"layer", "[", "\"\<NextFeature\>\"", "]"}]}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"c4d22bce-3ef1-40fd-9d6c-109811b2ff96"],

Cell[BoxData[
 RowBox[{"GDALFeature", "[", 
  RowBox[{
   RowBox[{"GDALLayer", "[", 
    RowBox[{
     RowBox[{"GDALDataset", "[", 
      InterpretationBox[
       RowBox[{
        TagBox["ManagedObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d30a050\"", "\"16\""], 
                    ShowStringCharacters -> False], 5053128784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d30a050\"", "\"16\""], 
                    ShowStringCharacters -> False], 5053128784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5053128784], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d30a050\"", "\"16\""], 
                    ShowStringCharacters -> False], 5053128784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d30a050\"", "\"16\""], 
                    ShowStringCharacters -> False], 5053128784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5053128784], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Freeing function: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib\"\
", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", 
                    "GDALClose", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[5916628312], 
                    "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base value: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d30a050\"", "\"16\""], 
                    ShowStringCharacters -> False], 5053128784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d30a050\"", "\"16\""], 
                    ShowStringCharacters -> False], 5053128784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5053128784], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       ManagedObject[
        OpaqueRawPointer[5053128784], 
        OpaqueRawPointer[5053128784], 
        ForeignFunction[
        "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", "GDALClose", 
         DataStructure[
         "RawForeignFunction", {
          "FunctionPointer" -> OpaqueRawPointer[5916628312], 
           "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "]"}], ",", 
     InterpretationBox[
      RowBox[{
       TagBox["OpaqueRawPointer",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                GridBox[{{
                   RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d30a950\"", "\"16\""], 
                    ShowStringCharacters -> False], 5053131088, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                GridBox[{{
                   RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d30a950\"", "\"16\""], 
                    ShowStringCharacters -> False], 5053131088, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      OpaqueRawPointer[5053131088],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["ManagedObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003940eb0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553176301232, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003940eb0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553176301232, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   OpaqueRawPointer[105553176301232], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}, {
                 RowBox[{
                   TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["True", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003940eb0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553176301232, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003940eb0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553176301232, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   OpaqueRawPointer[105553176301232], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}, {
                 RowBox[{
                   TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["True", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Freeing function: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OGR_F_Destroy\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"Void\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OGR_F_Destroy\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"Void\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib\"\
", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", 
                    "OGR_F_Destroy", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[5907076784], 
                    "Type" -> ({"OpaqueRawPointer"} -> "Void")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Base value: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003940eb0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553176301232, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600003940eb0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553176301232, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[105553176301232], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ManagedObject[
     OpaqueRawPointer[105553176301232], 
     OpaqueRawPointer[105553176301232], 
     ForeignFunction[
     "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", "OGR_F_Destroy", 
      
      DataStructure[
      "RawForeignFunction", {
       "FunctionPointer" -> OpaqueRawPointer[5907076784], 
        "Type" -> ({"OpaqueRawPointer"} -> "Void")}]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"9240bdfb-1779-48c8-863c-4a0c00c11cc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VectorLessEqual", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"2634c0d2-06b5-421c-91a0-8abd563dd4af"],

Cell[BoxData[
 RowBox[{"a", "\[VectorLessEqual]", "b", "\[VectorLessEqual]", 
  "c"}]], "Output",
 CellLabel->"Out[12]=",ExpressionUUID->"c47c1640-e67b-4b00-bd28-a75f9d909556"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"feature", "[", 
  RowBox[{"\"\<Field\>\"", ",", "1"}], "]"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"584706c9-ff63-4c80-8628-1c23b372bea6"],

Cell[BoxData["\<\"PAE-ABW\"\>"], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"a296b3c2-793d-416c-ab0a-12c369d24063"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"feature", "[", "\"\<FieldList\>\"", "]"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"5013693d-c561-46bc-8c81-a1acb668096c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"PAE-ABW\"\>", ",", "\<\"pap-ABW\"\>", ",", "\<\"pap-aw\"\>", 
   ",", "\<\"pap-AA\"\>", ",", "\<\"Papiamentu\"\>", 
   ",", "\<\"Papiamentu\"\>", ",", "\<\"PAPIAMENTU\"\>", 
   ",", "\<\"Papiamentu\"\>", ",", "\<\"Americas\"\>", ",", "\<\"Aruba\"\>", 
   ",", "\<\"60,000 in Aruba (1999)\"\>", ",", "60000", 
   ",", "\<\"Creole, Iberian based\"\>", ",", "\<\"L\"\>", 
   ",", "\<\"Creole\"\>", ",", "\<\"CREOLE\"\>"}], "}"}]], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"bfe91c8c-092a-4554-9ea7-788ba793fc29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"feature", "[", "\"\<FieldAssociation\>\"", "]"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"5f278a34-6c12-44eb-b62e-06bef874b1f3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ID\"\>", "\[Rule]", "\<\"PAE-ABW\"\>"}], ",", 
   RowBox[{"\<\"ID_ISO_A3\"\>", "\[Rule]", "\<\"pap-ABW\"\>"}], ",", 
   RowBox[{"\<\"ID_ISO_A2\"\>", "\[Rule]", "\<\"pap-aw\"\>"}], ",", 
   RowBox[{"\<\"ID_FIPS\"\>", "\[Rule]", "\<\"pap-AA\"\>"}], ",", 
   RowBox[{"\<\"NAM_LABEL\"\>", "\[Rule]", "\<\"Papiamentu\"\>"}], ",", 
   RowBox[{"\<\"NAME_PROP\"\>", "\[Rule]", "\<\"Papiamentu\"\>"}], ",", 
   RowBox[{"\<\"NAME2\"\>", "\[Rule]", "\<\"PAPIAMENTU\"\>"}], ",", 
   RowBox[{"\<\"NAM_ANSI\"\>", "\[Rule]", "\<\"Papiamentu\"\>"}], ",", 
   RowBox[{"\<\"CNT\"\>", "\[Rule]", "\<\"Americas\"\>"}], ",", 
   RowBox[{"\<\"C1\"\>", "\[Rule]", "\<\"Aruba\"\>"}], ",", 
   RowBox[{"\<\"POP\"\>", "\[Rule]", "\<\"60,000 in Aruba (1999)\"\>"}], ",", 
   
   RowBox[{"\<\"LMP_POP1\"\>", "\[Rule]", "60000"}], ",", 
   RowBox[{"\<\"G\"\>", "\[Rule]", "\<\"Creole, Iberian based\"\>"}], ",", 
   RowBox[{"\<\"LMP_CLASS\"\>", "\[Rule]", "\<\"L\"\>"}], ",", 
   RowBox[{"\<\"FAMILYPROP\"\>", "\[Rule]", "\<\"Creole\"\>"}], ",", 
   RowBox[{"\<\"FAMILY\"\>", "\[Rule]", "\<\"CREOLE\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"04ae83f2-26f6-42d2-8ca9-81a45a7f6891"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"layer", "[", "\"\<ResetReading\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"feature", "=", 
   RowBox[{"layer", "[", "\"\<NextFeature\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.924299305496731*^9, 3.9242993090070133`*^9}, {
  3.9243018442155657`*^9, 3.9243018456289463`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"ceabc400-fd83-4e1d-ac6e-59d34d6c2dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"feature", "=", 
   RowBox[{"layer", "[", "\"\<NextFeature\>\"", "]"}]}], ";"}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"545f1ea7-0102-47ca-958c-b18ae4eb055a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"feature", "[", 
    RowBox[{"\"\<FieldString\>\"", ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"layer", "[", "\"\<FieldCount\>\"", "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.92430193241471*^9, 3.9243019451066217`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"f97be724-db63-4204-8535-15fd7942a8bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"PAE-ABW\"\>", ",", "\<\"pap-ABW\"\>", ",", "\<\"pap-aw\"\>", 
   ",", "\<\"pap-AA\"\>", ",", "\<\"Papiamentu\"\>", 
   ",", "\<\"Papiamentu\"\>", ",", "\<\"PAPIAMENTU\"\>", 
   ",", "\<\"Papiamentu\"\>", ",", "\<\"Americas\"\>", ",", "\<\"Aruba\"\>", 
   ",", "\<\"60,000 in Aruba (1999)\"\>", ",", "\<\"60000\"\>", 
   ",", "\<\"Creole, Iberian based\"\>", ",", "\<\"L\"\>", 
   ",", "\<\"Creole\"\>", ",", "\<\"CREOLE\"\>"}], "}"}]], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"190ff503-2146-474b-b546-451badd2edde"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"feature", "[", 
  RowBox[{"\"\<FieldString\>\"", ",", "0"}], "]"}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"1b37d2c3-c3c6-4a71-b8db-26e4204a1e59"],

Cell[BoxData["\<\"\"\>"], "Output",
 CellLabel->"Out[35]=",ExpressionUUID->"6f79c202-fbf2-44ca-a4a3-550dc654d875"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{
   RowBox[{"GeoPolygon", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"FromGEOS", "@", 
       RowBox[{"FromWKT", "@", 
        RowBox[{"feature", "[", "\"\<GeometryWKT\>\"", "]"}]}]}], "/.", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a_", "?", "NumberQ"}], ",", 
         RowBox[{"b_", "?", "NumberQ"}]}], "}"}], ":>", 
       RowBox[{"{", 
        RowBox[{"b", ",", "a"}], "}"}]}]}], ")"}]}], ";"}], "]"}]], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"3c7c1941-5e8d-43ba-874d-7534fb5a252b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001468712890625`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[96]=",ExpressionUUID->"474278ef-736d-4ae5-9b8e-2fac016e7866"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoArea", "[", 
  RowBox[{"GeoPolygon", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"FromGEOS", "@", 
      RowBox[{"FromWKT", "@", 
       RowBox[{"feature", "[", "\"\<GeometryWKT\>\"", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a_", "?", "NumberQ"}], ",", 
        RowBox[{"b_", "?", "NumberQ"}]}], "}"}], ":>", 
      RowBox[{"{", 
       RowBox[{"b", ",", "a"}], "}"}]}]}], ")"}]}], "]"}]], "Input",
 CellLabel->
  "In[103]:=",ExpressionUUID->"cfc98f80-735d-479d-b872-0b5b27570ec5"],

Cell[BoxData[
 TemplateBox[{"74577.27303684593`", 
   RowBox[{
     SuperscriptBox["\"mi\"", "2"]}], "miles squared", 
   SuperscriptBox["\"Miles\"", "2"]},
  "Quantity"]], "Output",
 CellLabel->
  "Out[103]=",ExpressionUUID->"5b54515d-3610-411e-b6fb-9d7eb0034351"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoGraphics", "[", 
  RowBox[{"GeoPolygon", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"FromGEOS", "@", 
      RowBox[{"FromWKT", "@", 
       RowBox[{"feature", "[", "\"\<GeometryWKT\>\"", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a_", "?", "NumberQ"}], ",", 
        RowBox[{"b_", "?", "NumberQ"}]}], "}"}], ":>", 
      RowBox[{"{", 
       RowBox[{"b", ",", "a"}], "}"}]}]}], ")"}]}], "]"}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"f2c252b6-a4dd-413e-ba20-314c2c1c3e2f"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzsvV1XG9m6LraT3OQyfyH/Ire5zO3JyA84Z2Rnj9ysJGvtHslee69e2+21
vIe7vX1Wd5bdp41RGzBgTEMbMCwDhjZIgEESBoQE6AsLgRDCwnyJL2tk5Jn1
wnS5qlSa9V2iPcZjhiyVSlWzqp75zvfjef/7//R//If/7b/+u7/7u9/9t/jz
H/7j//0//va3//Gf/uf/Dv/5X37zu//9H37z9//r//Sbf/z7f/j73/4P/+m/
wZsT/9Xf/d3/h3/sdfVsyzrOK+uALbvSwVm29WI3SK/LpexOIX1ymJVvcFEc
vyiHnT4MiwO1FB46LKcUb2pu6fnRaqJ8cPmisJk0uZPj1Pnmc1zN8+0R/ubh
3lv5DnH6uL7unNF0sLu7666VPeBcTpa/1hkrfbxffmDiRwMPb7QEboYmOro6
7gwOmNmDCC72wofZ/nIp4861cB8Yw77ee+7/7sXJ5lyhkD88nC8WF0slvMYL
AC/ovwRsxr+SWHy5OPhb/d2eZB7j4VL8SnyX7dDK0eJ5JMrlKOSTitfYgCDf
TP4O3wAEWDnM4MUnv1LJfDhYrmwMHK0+OI79vwcLXx9GvyLkV8b2Zv95a21E
zvnYmBH+bhA4TTV7fiPVBY4c5K8gdpo6+Zu+pX0OXDXFtGsCZ7mf5HcpdsjJ
H5fY9kGotcORkUBf733r53ISuy3yc+qj2l9pMfpzW7lo04Mvh4eaQfttLbcU
toSNAHWU421y/vEnTo/zGITZqV6MyVSwu7wTr/sVbD822oYJ1Ll5k7CxtzVf
LBT2ldzL6R0bAPz1u8Ot5VKBZgH+RTwdQz/929zwNzo/dF4YwUyteBN7w34U
v35SET14zvng6rpbYpvzw3XlOzJaYzhcJ9pPpxK57AregeWz/4bx/PvFu3gW
jvKj5+9X+U5gzMNEhGUI+wpGIx40vDhbfwLqwEeM+Yvjjl4+G1Heji9Hhz0/
DNPAVbDLIMd15Ou4qnR7Y89k/+OvjcdM04rmOgUP/oshG2yGk8S38lWMII62
grjVjX5rcrwTzE+TL0jPxoFSgE3Be4t40Jz7CR3ozGg499TqOG2wkZmF6Q4O
72j/GlezvfW2yCIOXyGsxZyljvQ7DQO+Ks2qoOUrg59xvmID8D998fCYGfwz
fV8c7CZq/cqH/TenqYf6RwLCp584Pqp/2KBostXrcr5RSHQ9BtoH+e++DcG8
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
jaNsuVXa29TcMpSMh8JjdUsPqAnjyAsDLbNh6r/ZGAHt42/Vcn2ZAnPxRZEy
IpgTvu3PxZnf5dwe8EBP97d9vffMfR2c6cIyihXprz8B5zMnz3FS3ODXAcVt
KXSLNQ61owJE7kxPoqU4NnPFZXSmJM7m57QxPrZmyOEo6fPEfnZq+TyM6rFw
ULM/LzhZsys65RWYCLCSBn52f1/eb7fW2LKu02I/AeYXpIu17WCiMEHWPlAo
L+JBPkl8a++oNj34spZEf1Xy80iTpk9pv1rJgtnotQuuntL2MrgOl49iJe1t
t03zmC0uCH2cF0bY4FTspyyctTkLhNTsnb5MCphmfk/6uZvD+eG6Tg5Mne8W
Rvyjz18LqcIm9/nIFfUpV4f8OdyUKm7MYzSYerZZx/5Vfy49Sx6TAo5kQVio
ijv89dcgOCPO+cBEuvdif54pb9i9NBsZ7a7VFzKR8Gsy5xXYTSvJEUgqkSZd
PfiujkVHZMXZ/knnnbGRFtxpFjnBUb8Ha9iU/tFQua5rcNnhQ6E9EwUpFn1E
LoN6nZv7Lmi/EvvmohT0/Cx0kM/MkVNF7oThjn3SRsulZnCt5yjWZjaXUtNd
r34zVipI/eILmI8EqaC/7z4xf89PNTVzCCB/8vOQq2cv+dQJqQ3Qu9rhsy8t
lGqJufkHPDXdtKsHDzjFu0HshLaWWzDmCfQOsT1uJ7ssQPsTXSrZi53xi90Q
U+NcfyIuzuM+XBZDMB1PKeSidik8uwBWGG7W5iewNi52tOJ1CDCteSo+JdVs
7RfoxWwmxVUx67ah0Qf2SY6juk86NhsLB0cmh2ZXjP0Wa4bVfKPuxcIBFMqL
icIEgHnZoVEF76VTnwRw8bBw2s+W5rC63ztYdfNCC4Lr85t29fBCKuyE9Vra
XqZQJshZ3X3DFlB+uPX9MB9+tu2yH2uuG2wP5jekyeYJsIZyM09MUV9m6Iu2
KDy7g+LGvNVRPUr6Oc+HF2Hx5lnk2I/FgovzrxT1WabXlXzn6jgyTTQUZSCB
ONN1YWT8i8/UzjVN6392H5C/8+E4w0dvczcK2vcz81tJ6YFJD3veTeuOeY8t
5BUTWK7OqntlvzbC5cR+E3FPKklb0FKi8Ccuk9UtL0j9Vtglp18pyYRZ16Df
YGLp5evx8NIUycuovyh/UxEX0AFYPVYqqet/q1clY7DzsQF/0/T8grsLzK8T
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
LQn9IHZkAsGxTkdpfzMfGwsHybdvItGd+Z8LIwt2eyBxyfg0hBc4yIHhThC1
vXM3dmhjbj/VNZv+OtZN7Y9vP2z649Ouu9pjYkHDbXDggY1p/E5Azvws0/Wh
dqYr3QDgq4Fn38tvBsd7wlaynjO/AuA00vPnCgP0DqlB2vIT5e04+XBA9eBP
TATiWT2Ytemo7DpfWl8wvQWpezKpn+G1uiU6Sdtx0ctGNPirEp841+8SUzNG
hmns1G5Wro8PB8uVZKuJ4SVnvjzMKk+wkX8Uz6cZ7ceCE9PD0/m8txW4NUeS
qtqtBTuwkyedd2ox/8VexFyQl/z84Rlft3/lzA+qMeG0B8846ss9f7/gh/Qe
QZBXx7qznXvvuVic0ccck5FdmaggK4odk5+KPFQks8DFFjD704xDmvmeXwgr
AJmYm8HrMiSWErDVrXtpjlYDdITsoiyOwu7FMSsqVfFRPjPHYwHsv2XWFZHo
nc8CpMDGkye5nwdzEzYLL4fDS1O2M7+ivaM5WK9oAJiUsao5FweTi5eKqY0C
nE/aNfaOm714u/h4oOP/ofJeo+ES8jw7/aR7ItppGrb0Ewc5zAZ7rGRMiYhh
CoIqbfWOVko38pX2gmnkUjNs7jZlScqz1tUguUgbHpZK5mSFeafB+eSYojQk
yvPElcJfshbovyT4Q69D4TGwOmaKUGhgLBykfB4u18MruYZe9vKkGrVsnXXI
276YhvV12cSrzrq5/afpwMW+mTYxr8Y7fW725+I/g/lxkEZzF13TEPObt6cu
fJLETo4F6/tpXL+NUYAhwSemQ+RUo6SwZjGJFHIRWkfYFZNlFaZSYxH19cWb
mLzkMxfWAiB/+SqGwkmhxalgNESZk5MxJuz/Yrz/bxMvRkIj8Xya5i/WSys0
Ui5plJJZBOwE0xMK3Y1WmB+/Th7+uuk9zOxPBzSL6eqiq+OOn4O84KjZZ//X
rPHGc7iX7FVcOd8cOMu2naYesgS2q3aQF+WwfxQ7BYHZEIaEt9qehI307MJ0
n8VpSC1sfl1htCxIDYXwJk2+uZVJPCwW9ywHq3CRuMgK+5X2NknMH/QOzv8l
vrCUz8/lMvLjp49st/lJUcecIB71UKMljLlfx0QcaGbNTUD7Iou7i1LwOPoH
1iXzvVBvRI6R4UDTgy/9vBDejz8w8S17o2AXuyEeTGFtWdafwNTHFOBtGZdp
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
Sf5xt/ldn0Itf7h8O0Y5V97PNFSA+e80khGAqV/IjdnRO9EpyFzck6OO+b9s
zznI9RsCDU1XjxmwMDdKs6qPAjaeHn+6XlCeBUEBCxV7PqzOBED+LMA9/Vz1
UZRiazMtcgpfdhcPV+4eZDsO8jejnGflgNJqKrcUA1cPAcwP7G/ntzY/aJoG
s+urKfwFtjY+4C9OBxDZlXgAt7qu0KqsTX97XLFecBk4rWnw6/F5dQpsvJoN
ogX5/k7uUyCLYha2WFcVtgD5s1RD2TRFFwc/RG7xTWC/iDqkxh4fNfIJaOor
nfXdhdBH6wcTY0FH/70hk359rf0b0D7+gtvB/ACmAL4BXoOixUPV2FL/dect
1UXA8STWrLz9NLvp3ykV4+0+lYWt9Q9gGPBM9LMEXQH8GUApPSxVQNbesEgB
VWLksFIwZ8X6F6EFi8MUr6VrdmLpdFyNUxjXEqu5sdXIV+8SwPmdHX/W7Pm8
IGM7A2sE7EdwV+pcCkfV2dqsddhav9bQOqHHI1VMNfB4xpphLLG1GZyamUTj
H/MvFl+hXz0zflkodrwrvP9oW6SvB9YprOf72GOHc8HlwkVLzI33PvUs9DE0
RHruJVn762JuHEGAV1ezb5mb6GvT2hLqmB8Gv80zmNczf9PVwzEdn7CUINYL
k9Msk1N5M2U9DrIdR2uDPqksgrMwxnM3VQDG88WGY8M6paGHilz6EhdKUcDM
ZNSZ/+efWsm3L5d7YeqD9s0uIzsoY/683tUzkS/yweCI+oE1XT0c0Zd/cQUQ
/rR91YBSHG8MHeY7j4p9X/Y83l1g/oAnLMFLKjgq5tW3ufLH1XHMjFq55V1D
3xx+lIYRgcjCkvlHPTU9JBaVO7yXL26C8x89/F6dm12Q0hUFeY8rE/sfTnJ7
ytUiX5waaB+vm64ejgRkjOshTSvGK0BxzKbNd+oBxjtYvg3qc1YhyC2+UReS
Vg1Qt2Uaz4ljp9iHmdHuu7RMm2a6Z8+3NuN3BczMn54bvHrlj/jraj8TY32d
HX/uvnlRLkVjn0/7flR6BQSZ34/NjxvpmIyH5dunrTfu4p3j8hBe7E/9kd1j
ZXaP9c8z5qdQtX4PoH0poY1kIOK9XF3BjnwigVoOkwL439LiJYAAg8l6UgTz
+pHsfOdvkaQnFgur2RGcPvh/a12y0asamfRrvfMc9HKt/RsQOPnVu25c6H3Q
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
Ueg2v9adQeGoBgc6YfAnL6p7FuxhPCAJjvASUmOPpTP/Yb6zVFwC+Z/4cms5
WY20AgaZ3/JaNzItOAolcGNenbeBdR+w6vYOLgqAjsD8zpLX4fr5LTW0JdaX
pacHOtq/TSRDzqV+TlhuqhnJay5pic6O822t5yTu8DDbfrSTB/lXl+7idUiS
mzJBhrQr/mf++bVBJuCpRQ1I8w17CLZqIG8ZwZSryW+J6mKP848eIvPbiQvJ
MvhJomEmoS6RRCbzGJDgSi49rrV/8/qlzPYQX3YXdxY71guToWuvSUX+pODr
a0JjjpdToWY9SLSZ8X9lgvvhg4dldZLSlE7Cr4tdznNcWMx/WqhrPH2MR8o1
2d/Jd924kBiJBgNyi28+r06FPgzVOAt+fvyUV6/8QXqHhep0S7hKy+rAoqjV
2d8cQVFKBDKAGbdWNr/chiyWqM41yNoNpZjLroPATvWjrPHc67l8p/tS8KcW
AMCHCVaz0QO0n/gJ7uefWsH8cvdZK4/X5v4a+qkpQz5GyvyW5bRgfqUHZUJw
81ectwlYtI2iHpa/GobBFyA+fXEDz9ph8Bu6LiYG0+NPE+/hJyzOvkhknYIe
/c/a5Tr5gWq6M8Ft2uIFFso0sZlqm58l9jTybgVZxouLsD//V7u4g+bez29l
urfH/wB4PkpqrO96x/k1qaUx0UFm/lUiJXosEcdYxmbZ3VTV+6BFrs2/tZne
W0qmkzOOsIxm7lQyeIrVFXOBSxuqnwXD/EfFvtrk7/c//I1lus59V5v+dm/s
3/fG/jte4N+DhZaNdDfeAeHvLXU1zLOCxWtnzy9nRkD7C7MvAvtlg8TW+ocz
4uchxLFgwS3zg/bl2vxMtG13MfTr0AQHeM/MaUT+VMwLSBTtxD4rZeucoq8G
oJL5seIAt4Pzwe2Gj8pP/wVXA4curaaK80+riz37U3/0eTgS3pebGh0dYP3O
/DwJdWGZkey2LPwcwfyjw/dl7fDLXmZnsSPxLrJ4gQnmm3wvICvifHL74IWs
JH/KjWwo2kYThIrzhZ2vkbnFztlB35wrT/4dhz7N4cxjjvB1OE14X7r+VURA
ndbP1BN9FlI6tzbTYH659SZ7K30w+3dKCc+JihfMFvjX3bjysly4PEnm6HO/
cxBcEfNjuqmlfmd+n5SCcMT1R/+8t/Lk5OhbE/tz3/lU6kik8D4BJzWX+hks
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
9eqm3fYTeVvm1wNLAJ6QSRHbuVWWpTOeZy8Anr35PH3ykefV8f5O7qyJ1ZgR
l/AuM+9HHjzq/b6z4/y19m9g4afGHkvJh6zOtTbM4TGDOfnlaXLqJxGclF3h
YRPOCMzaJ4TC/KZUn7zB4eOB9s0RhMGBTsGeLOYpwCDpT94eEfInyx9W/S8L
1pPF3VQBZj9o3+cD0mT+upbxGNl6IsrPedL3I9i+5R/f/M+2v/Q/a8/Mv5Lo
Ca+uvN5b8VK3eJg1+kL9wLC3UnEp9IsfbTCXjk5ehv1bXZ8PkvbrITF/3RTt
NTC/W1cP1pjmyQKP2J3uS3j0xPfjMAWw8MFoA4PfEPClcAConvD+o7ukTWfs
VDPN3rtzqZ8jGFJczY6A5CkhEy8evf6FVnnSD1SdbvHwLSbkWJRZ54696QOF
+EV8LtiTDc2lk9/a/IAXWxsf6N/ghxEW89e/pnfm6j+9eVy5eqjzu910iYn1
esf5d8MP3Y6NpoDeey0s3eJ0CgCxw/I38z9seDv3proKx63NZtf1aIV3sQD5
+adW8udQBj69f0O7YdwmbjUE01Je9RLjYCa6qXudTxjMfnqEm/xvBq4MOF//
b1gjYauM5e6wjs7Jn4lLnwaaxYNElqa+AfnFNyD/QnbM4y91ugrgGUGYTSrl
XJbV2LLa5LA6/B7t5GMX3JSO0Jkf9i0IHzzPS64M0zHX4pPr/d4pDu1lvDRk
P66OyzX4CYcrd835gZTIRwj3Z4oIQB0lCd215GAzN3AcXgseWOyc57nDR8TV
42zqGzA81APS9qnbTFPAne5L5AjCPkMXgg6d90JHWFcASzkcuvdBCxE+TH27
QDNlhWFVKPHoMPU9N8w9yAj1QnKL440hc10YWf4U1Gvm/NSDTd1xBn6UXxe7
wh0Dd/gT8zvoPOi/4nYh2XuvBXa7nItWyYy/7Y3CFNBk/oDb7+5UM6MjD6jG
tuvGd8/7O51rbLk6k7PyniscZDt+Xejy9l0pdbvWqOWctSDwXK/mIxqLDwzR
Yf711ZQ+FzcskJG/P//X48qEg21AJgQ28NCNHRY7yfhIHDYI/93wwzta6SX+
YjoIeAo4m8zPQyd4MfW299WLW6PD95U+U9g5jtJ96yIsfMrAFzwcT+J1FYam
eljDm192F6vTLQDmGs9BbbkpPQawxq+NppUz7vmPCPPjV9jNXlekye8WIP+j
z/37U380u3qI8PG+z9vm08oErPQFBZmQIHywAex/TAFYWaTG+oKRrj2bzA8S
3tpMk2QxKR4A4GQAdniPls2FbXBx8Iv7yfyhiC32STW2qbHHrgpUx09rQFy5
eqr5/vXJ/2DS+qvPWReVuVZga+S/4m+tmvajU8E8/CWLxosSATOyYff2s+z2
Ud1mRRBMk9+fWJ9EkMN/d+Rft1N/opAQuX2I8GVFiMDJDcu7/GC7nOZTAChI
VrWOHc4U8+NKgn47O84T5xPhg5ZxwWkD0DK4Gtf8eX/no97vYaLTxviL170P
WvqftY+OPPgw9xKml92MgPcXZ19QEj4XyfQwffCi7+dpd4UbTG+z1H+Q7dgp
DvFOWFIyV2UV7TpDJI5gJn+Htn1JwtZmENrLztAM/psRMfj5kCqTF3+daalk
+sj5L36VytViZVtoy2dPW/V6booAbnn98pbeXFQxBSSe+UHmJMWpZ3t6jUsq
sgf80LCfwd5YBcCAx3RMPwpfIGBGwEyBvXGRTLyPLcVFMs1H1PfZcUX7e8sP
Ps4rqc7DqIJhfpJubriZIT0jn02fhbVAMCKczoiUwc8B5q9Nf+u2R0ymVCxu
fBIMouERAPPf67kcTAUQuYj5FDAz9ZOs48ZFuMAbcK2o86AeuJKgcQ9z6PIa
M7zxl3e0x07A7dPjT7FPLBAwBWBdgMnav+Azp/0boy4Cu8fV8cNse3XprqJF
ol5XTTVEppjjtcFq+np17mp1sQecf0aCv6F7e7R+612RMvgJm7mB3ZF/dfUV
cD6sfXGbv65Fe4MkfwKIGrYl+RBANYuzL/wcfWv9A1grkbqIZKUT1ZNqMf5i
xvSzT0PlnSzFPDO4k+duyp21T04SdboHipI5LVDLHWjtNkAvsC2PKxP0vsY2
J+buYf76cXmI/sUG+8vdZ8HgJ5WGcMcAgz8YQX63wFLIuTkjAWwPqsdfvAbh
c85fWRbtDRQK+Z9cfE2qEasAmgI+zL10uweY+t6czx5wtMNu18z8q9TYY5jE
P//U2vughVzo19q/IS867HNYzjgRP5qTwNjwQ72Fz2U3fJ4pvv61sJIq2uch
XdC+K9OdYq/qtM4CiO3qQTb/YbYNbM/WGvnrB7nOw+XbB0tX6bVhUb+z2Bl6
aUwACKbBojPW82+OPgd3J7jC9vgf6oe/mfH4W9eonm/AOZ+/5rHgzzM3sX4U
PFCI5E/AFED9VSmSKOi6qaxLFm3A6X9enSJuB4HT39GRB7RCMbjEwfzgf2yD
0eJbpCCBd/ARtqEEG2yJzbCNKwsHw+Ccj4Pi4kg8R31Te0XuFG7t3xh1Xa5L
ujfq7F6lyZxm7C+0gOHFK4XFn9lYI3SDH/POdq4vsFYsblGd+FN+rZg/XY+D
24G51SJ5depfG/l4WED4mbV3r7IPaD7dmPzbr2P/z976CW84s3ro5E9YzY5Q
9qBzNSgBlOiWFZmC1noau52Z+ml4qIdpiGmebeJqstvxGqY7AHuenN4kKYxZ
wNWBMDaY7qwtmpb9Tnk1NBE4DxtjA+fjK9IvL9dP8NbyUgQ8gtDxzosrCcxM
Da1UjM2gnx8AjtYGXdHL2WH+cIUsQpRoazy27U+/Tv2/hpR+HiajWYBoH48J
PSnTxcHBpTtAqTL9/wOg5MNq
           "], {{0, 449.}, {510., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> False, 
           MetaInformation -> <|
            "Exif" -> <|
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com"|>, 
             "GeoMetaInformation" -> <|
              "GeoModel" -> "ITRF00", 
               "LonLatBox" -> {{60.874773749999996`, 72.06466125000003}, {
                29.441540635574807`, 37.64416065292916}}, 
               "PlotRange" -> {{60.8642578125, 72.0703125}, {30.82763671875, 
                40.693359375}}, "Projection" -> "Mercator", "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com", 
               "TileSources" -> {"Wolfram", "OSM"}|>|>], Selectable -> False],
          DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {510., 449.}, 
         PlotRange -> {{0, 510.}, {0, 449.}}]], 
       PolygonBox[{{60.874773749999996`, 30.829867910424923`}, {
        60.874773749999996`, 40.68720452437501}, {72.06466125000003, 
        40.68720452437501}, {72.06466125000003, 30.829867910424923`}, {
        60.874773749999996`, 30.829867910424923`}},
        VertexTextureCoordinates->{{0.0009384156862743964, 
         0.00022615592923758143`}, {0.0009384156862743964, 
         0.9993761378827037}, {0.999495696732029, 0.9993761378827037}, {
         0.999495696732029, 0.00022615592923758143`}, {0.0009384156862743964, 
         0.00022615592923758143`}}]}, {
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{
           InsetBox["\<\"Saidu Sharif\"\>", \
{72.35595703125, 37.09396362304687}, {Center, Bottom}], 
           InsetBox["\<\"Sadiqabad\"\>", \
{70.12847900390625, 29.536743164062493}, {Center, Bottom}], 
           InsetBox["\<\"Toktogul\"\>", \
{72.94509887695312, 46.192016601562486}, {Center, Bottom}], 
           InsetBox["\<\"Fasa\"\>", {53.6517333984375, 30.250854492187486}, {
            Center, Bottom}], 
           InsetBox["\<\"Andkhoy\"\>", {65.126953125, 39.81719970703125}, {
            Center, Bottom}], 
           InsetBox["\<\"Talas\"\>", {72.23785400390625, 47.06954956054687}, {
            Center, Bottom}]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.024642857142857143`]]},
        Annotation[#, {"symbol", "place_town", "place"}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{{InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {59.615936279296875, 40.31158447265625},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kaka\"\>", {59.615936279296875, 40.31158447265625}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {72.34222412109375, 32.96722412109372},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Jhang\"\>", {72.34222412109375, 32.96722412109372}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {59.60632324218751, 46.98165893554687},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Nukus\"\>", {59.60632324218751, 46.98165893554687}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {74.1961669921875, 31.640625000000007},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Abohar\"\>", \
{74.1961669921875, 31.640625000000007}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {60.62667846679687, 37.70233154296874},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Torbat-e Jam\"\>", \
{60.62667846679687, 37.70233154296874}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {75.65322875976562, 34.12490844726562},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Pathankot\"\>", \
{75.65322875976562, 34.12490844726562}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {58.4637451171875, 37.703704833984375},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kashmar\"\>", \
{58.4637451171875, 37.703704833984375}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {56.333770751953125, 25.968933105468732},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Fujairah\"\>", \
{56.333770751953125, 25.968933105468732}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {65.20660400390625, 40.93643188476565},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kerki\"\>", {65.20660400390625, 40.93643188476565}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {61.494598388671875, 32.666473388671875},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Zabol\"\>", \
{61.494598388671875, 32.666473388671875}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {73.32687377929688, 26.683044433593732},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Pali\"\>", {73.32687377929688, 26.683044433593732}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {66.46316528320312, 32.53601074218748},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Chaman\"\>", \
{66.46316528320312, 32.53601074218748}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {69.44732666015625, 33.03039550781247},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Zhob\"\>", {69.44732666015625, 33.03039550781247}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {74.6356201171875, 26.217498779296864},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bhilwara\"\>", \
{74.6356201171875, 26.217498779296864}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {70.6036376953125, 34.974975585937486},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bannu\"\>", {70.6036376953125, 34.974975585937486}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {63.05053710937499, 26.943969726562493},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Turbat\"\>", \
{63.05053710937499, 26.943969726562493}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {65.37277221679688, 43.846435546874986},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Navoiy\"\>", \
{65.37277221679688, 43.846435546874986}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {60.64727783203125, 26.15707397460938},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Chabahar\"\>", \
{60.64727783203125, 26.15707397460938}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {68.74832153320312, 38.84902954101562},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Baghlan\"\>", \
{68.74832153320312, 38.84902954101562}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {66.90673828125, 33.92852783203124},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Qalat\"\>", {66.90673828125, 33.92852783203124}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {69.22348022460938, 35.71105957031249},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Gardez\"\>", \
{69.22348022460938, 35.71105957031249}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {69.0106201171875, 26.415252685546886},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Mirpur Khas\"\>", \
{69.0106201171875, 26.415252685546886}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {74.31427001953125, 38.53591918945311},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Gilgit\"\>", \
{74.31427001953125, 38.53591918945311}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {62.11395263671875, 34.24850463867187},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Farah\"\>", {62.11395263671875, 34.24850463867187}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {71.54983520507812, 40.492858886718764},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Khorugh\"\>", \
{71.54983520507812, 40.492858886718764}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {58.51043701171875, 40.009460449218736},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Quchan\"\>", \
{58.51043701171875, 40.009460449218736}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {73.3172607421875, 29.204406738281243},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bikaner\"\>", \
{73.3172607421875, 29.204406738281243}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {64.78225708007812, 38.53454589843749},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Maymana\"\>", \
{64.78225708007812, 38.53454589843749}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {68.85955810546875, 28.84185791015625},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Sukkur\"\>", \
{68.85955810546875, 28.84185791015625}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {75.85784912109375, 26.025238037109368},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kota\"\>", {75.85784912109375, 26.025238037109368}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {66.83120727539062, 42.48825073242186},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Shahrisabz\"\>", \
{66.83120727539062, 42.48825073242186}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {57.68096923828126, 38.89709472656249},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Sabzevar\"\>", \
{57.68096923828126, 38.89709472656249}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {67.27615356445312, 40.16464233398439},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Termez\"\>", \
{67.27615356445312, 40.16464233398439}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {67.82272338867188, 43.88488769531249},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Jizzax\"\>", \
{67.82272338867188, 43.88488769531249}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {60.63079833984375, 45.760803222656236},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Urgench\"\>", \
{60.63079833984375, 45.760803222656236}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {54.353485107421875, 43.076019287109375},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Balkanabat\"\>", \
{54.353485107421875, 43.076019287109375}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {72.9986572265625, 44.93682861328127},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Jalalabat\"\>", \
{72.9986572265625, 44.93682861328127}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {67.83782958984375, 37.19009399414063},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bamian\"\>", \
{67.83782958984375, 37.19009399414063}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {75.85098266601562, 32.527770996093736},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Ludhiana\"\>", \
{75.85098266601562, 32.527770996093736}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {70.927734375, 44.41360473632812},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kokand\"\>", {70.927734375, 44.41360473632812}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {70.45944213867188, 36.712188720703125},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Jalalabad\"\>", \
{70.45944213867188, 36.712188720703125}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {63.58337402343751, 42.51022338867186},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Turkmenabat\"\>", \
{63.58337402343751, 42.51022338867186}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {59.21768188476563, 34.829406738281264},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Birjand\"\>", \
{59.21768188476563, 34.829406738281264}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {69.63958740234375, 44.08126831054689},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Khujand\"\>", \
{69.63958740234375, 44.08126831054689}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {56.2774658203125, 28.259582519531246},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bandar Abbas\"\>", \
{56.2774658203125, 28.259582519531246}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {61.83929443359375, 40.62332153320312},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Mary\"\>", {61.83929443359375, 40.62332153320312}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {74.82101440429688, 36.280975341796875},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Srinagar\"\>", \
{74.82101440429688, 36.280975341796875}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {58.35662841796875, 30.44586181640623},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bam\"\>", {58.35662841796875, 30.44586181640623}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {71.39190673828125, 47.57354736328125},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Taraz\"\>", {71.39190673828125, 47.57354736328125}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {69.58877563476562, 46.78665161132811},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Shymkent\"\>", \
{69.58877563476562, 46.78665161132811}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {54.4317626953125, 39.675750732421875},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Gorgan\"\>", \
{54.4317626953125, 39.675750732421875}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {60.85052490234375, 30.889434814453104},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Zahedan\"\>", \
{60.85052490234375, 30.889434814453104}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {62.21694946289062, 36.61605834960939},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Herat\"\>", {62.21694946289062, 36.61605834960939}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {57.064361572265625, 31.81091308593749},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kerman\"\>", \
{57.064361572265625, 31.81091308593749}, {Center, Bottom}]}},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.026785714285714288`],
          FontWeight->"Medium"]},
        Annotation[#, {
         "symbol", "place_city", "place", {"IconAllowOverlap" -> True}}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{{InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {75.82077026367188, 27.96432495117187},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Jaipur\"\>", \
{75.82077026367188, 27.96432495117187}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {59.60632324218751, 39.001464843750014},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Mashhad\"\>", \
{59.60632324218751, 39.001464843750014}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {74.31427001953125, 33.29544067382811},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Lahore\"\>", \
{74.31427001953125, 33.29544067382811}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {55.270843505859375, 26.059570312499982},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Dubai\"\>", \
{55.270843505859375, 26.059570312499982}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {67.03170776367188, 25.686035156249993},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Karachi\"\>", \
{67.03170776367188, 25.686035156249993}, {Center, Bottom}]}},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.02768382861971854],
          FontWeight->"Medium"]},
        Annotation[#, {
         "symbol", "place_city_large", "place", {"IconAllowOverlap" -> True}},
          "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{{InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {73.0645751953125, 35.82229614257814},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Islamabad\"\>", 
             Scaled[{0., 0.0023337467526422734}, \
{73.0645751953125, 35.82229614257814}], {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {69.17816162109375, 36.827545166015625},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Kabul\"\>", 
             Scaled[{0., 0.0023337467526422734}, \
{69.17816162109375, 36.827545166015625}], {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {74.60678100585938, 47.55020141601561},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Bishkek\"\>", 
             Scaled[{0., 0.0023337467526422734}, \
{74.60678100585938, 47.55020141601561}], {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {58.38272094726563, 41.06277465820314},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Ashgabat\"\>", 
             Scaled[{0., 0.0023337467526422734}, \
{58.38272094726563, 41.06277465820314}], {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {69.27841186523438, 45.440826416015646},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Tashkent\"\>", Scaled[{0., 0.0023337467526422734}, 
             {69.27841186523438, 45.440826416015646}], {Center, Bottom}]}, {
            InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {68.78677368164062, 41.87164306640625},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Dushanbe\"\>", 
             Scaled[{0., 0.0023337467526422734}, \
{68.78677368164062, 41.87164306640625}], {Center, Bottom}]}},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.02768382861971854],
          FontWeight->"Medium"]},
        Annotation[#, {
         "symbol", "place_city_capital", "place", {
          "IconAllowOverlap" -> True}}, "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
         0.40784313725490196`, 0.40784313725490196`, 0.40784313725490196`], 
         StyleBox[{
           InsetBox["\<\"Uzbekistan\"\>", {63.952789306640625, 45.45730590820312},
             Center], 
           InsetBox["\<\"Kyrgyzstan\"\>", {74.7235107421875, 45.70312499999998},
             Center], 
           InsetBox["\<\"Tajikistan\"\>", {70.81512451171875, 41.93893432617189},
             Center], 
           InsetBox["\<\"Turkmenistan\"\>", {59.39208984375, 42.901611328124986},
             Center], 
           InsetBox["\<\"Afghanistan\"\>", {66.23794555664062, 35.91156005859375},
             Center]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.03261851782965803],
          FontWeight->Bold]},
        Annotation[#, {
         "symbol", "place_country_2", "place", {"TextPadding" -> 5}}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
         0.40784313725490196`, 0.40784313725490196`, 0.40784313725490196`], 
         StyleBox[{
           InsetBox["\<\"Pakistan\"\>", {71.24771118164062, 31.85623168945311},
             Center], 
           InsetBox["\<\"Iran\"\>", {54.564971923828125, 34.572601318359375}, 
            Center]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.03261851782965803],
          FontWeight->Bold]},
        Annotation[#, {
         "symbol", "place_country_1", "place", {"TextPadding" -> 5}}, 
         "WolframGeoGraphics"]& ]}},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], RectangleBox[Scaled[{0.8, 0}], Scaled[{1, 0.2}]]},
       TagBox[
        GridBox[{{
           StyleBox["\"Geo data sources\"", Bold, StripOnInput -> False]}, {
           
           TemplateBox[{
            "\"Wolfram Knowledgebase\"", "\" (\"", 
             "\"https://www.wolfram.com/\"", "\")\""}, "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] MapTiler\"", "\" (\"", 
             "\"https://www.maptiler.com/copyright/\"", "\")\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] OpenStreetMap contributors\"", "\" (\"", 
             "\"https://www.openstreetmap.org/copyright\"", "\")\""}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
      Annotation[#, 
       Column[{
         Style["Geo data sources", Bold], 
         Row[{
          "Wolfram Knowledgebase", " (", "https://www.wolfram.com/", ")"}], 
         Row[{
          "\[Copyright] MapTiler", " (", 
           "https://www.maptiler.com/copyright/", ")"}], 
         Row[{
          "\[Copyright] OpenStreetMap contributors", " (", 
           "https://www.openstreetmap.org/copyright", ")"}]}], "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     {Opacity[0.2], 
      PolygonBox[{{{70.622058, 36.760811729229296`}, {70.564662, 
        36.705342717161535`}, {70.52648600000002, 36.71456887373752}, {
        70.517065, 36.77926650108522}, {70.536214, 36.807016254928904`}, {
        70.574443, 36.82552679491418}, {70.61262, 36.816289306043984`}, {
        70.622058, 36.760811729229296`}}, {{70.488546, 36.84400066347883}, {
        70.431255, 36.84398245378497}, {70.53636, 36.88103140201456}, {
        70.550991, 36.89519137365029}, {70.542007, 36.88500022026377}, {
        70.488546, 36.84400066347883}}, {{70.560738, 36.904628004349505`}, {
        70.550997, 36.89519744662619}, {70.559716, 36.90509080942286}, {
        70.560738, 36.904628004349505`}}, CompressedData["
1:eJxd23dcT2/4P/CUyEjKKhooK1KJlMb7Oierod6HQjtCWoqSoiXZEQ20rYgS
EtppyqjMiJYSIlQ2jd+r8f1+vo+ffzyej3Pe55z7vq/7vq/7Pqcp691WbhQU
EBD4LiQg0Pv/r/dnpzSd42h47a3q+x4sLclteBp7gaMrNjlt4j4s7ZVfnvjy
IkfzhUt0vwSztEO13PPqJY6854nG1B5iaVttRIfFFY6kFF9M2nKUpQShB+Lz
rnI04S7vytFIljql5ZQq4LPHm5JtIlgSkMvxcrzGkfUw17D4UJYeVP2deuY6
R29Wy/2sw/U+x27a7XWDo6vsvWX18Kt3pd+Db3HEnHucJBbC0vmGWW8NbnKU
yLs6hL+fpQYHK43R6Ryt/BrjphrIktGE9T+W4bjy9jecxy6W0gKH1WTd5khP
LFpkHo6fP3o0+XgmR4ceG3+cvI+lb+/cr/zM4Mj9T9rg0bj+te7KdXk4f965
62VuKI/Ig5ePyrM4erky20YlnCXn56nDHLM5klBIXOOO49630xY7wEevxvzr
fR6HJc8WJ+RwJNj17m/BHpZ+bW+IFc/vfb6H96fgfk9VfBcb3eHoiLG8JnOE
pVOvVg71yeNInjdR6zjqa550pQPlcuQWOnpawQmWPG8FPtqJ49X5gnFpsahv
TmnqoQKOem5MPuJ5hiWVjHdHu4s4Wqex6NesFJY+GAy+HHCPoxdv1pd+vob6
+eVmE1vJ0eyi7DS5NJaO+/9b5P6YI4cSy/lzcH6d54NR7VUcrTDYvyz/Kp6P
f+7YhmqOLAqePXh7iyWxGSpxVa85+vjVTGF8BksLDzJ2zXUc/Xs/JNQ7iyVL
2qzj28jRPZHN41RzWIp5f8D3JNzB+phfymZptvKfhE74Ulp9U1omS2M2veqO
bOLoWoCDxTxcb+77lVZmcHGYsMkD3M82QCJBC+d3Fbr9LL6J+h1m7Df5DUcy
K47be6WzJGE8wuZ7A67ndfpR5Q2WdluMlL0Am2wrm30R5ftosSvhMuwiEXjo
PsovXPOt0xGWqp99eT3KFyNzKe9bPa6nHPN7WipL2vvu+o+HVUYLJz6+gvZK
ZWx3onxt0wyKPVA/+7adtd5bg3ibVv5OJ5mlgu5PNemoD3l3GVmVyyx5SBjY
isBbC+wX/UliKe8VF3sO9Tc8oGXOkYssnbznrp3wkqPRhfIzKi6wNH/Uj+xr
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
OD5C1ToH5+uaq1rJ7EX/dc3xr8Jxhec7/Llgjl556BkvQv9aFlr/+nsQR1XF
R0pnoT9OeZvTE7ob9cGVfI2Bkb3VasFedd4RZ+HJZx/LFAciHuM2VPbIscS7
OJk3CT505VLbSPRvSbbiX08A6k/v+50POK4uM6hmDvxQ8Kx+OX7PL6t4/dIP
7SPpsMkRPt0jm+O1k6P6mEODLeDDR3xktvpwFBQUUFOK5yuQ6uxaD5frrov/
hfLs3bWx7jK81W7myu0TWMpoqfQ/D8eKuE6TR/3Fy3dYG8Cbpio5DkL9bv/w
PWeSN+73zyoyBv0vSDvb99MO9MeNJ8vHwaHJx60d4XnTYnOuIL4mOl7KkYGj
1+wS1EC8+lksCdgMq3SLRqqLYvx50hUbhOtFS+7een44S653n1lX435d+UFN
oUMxPibl26xDecwlN91TE0Y+Njwr9zy84VjZ1DeD0B+C6ibp7eIoS3HOwZc9
DCmkN1sd8kU+LKwW19rF0LbeAsORz4JGX+9k+vMv1JeL4rowDTj0UI/W2V6P
0K5t/sn0zw/+HKlmdk56+43pzy9Q36F3ggJ2tjH/2x7bShZeqP7KkIWDr60V
2uvTPP4/R/iS82e/y2jfj7MWL/v7hSFkF7a6iAenpru/JXE8/fI0mWbEz9HE
YwmPWhk6km5adxTx9WH1s8vjPzNkH1Ct44P4K7WL90uBh4tFW/+Ch+dmB5yB
5XrjBfE6ulVNLwy/T/xjbxGDeE5OXrvgQAtD9xZJWyfCUYlz40PeM1RppBLr
DHe8lP8d9ZahP8GtOUdg40Gb5k1qYshJzVjPFP1D26N1uW4jQ9L+C2vT4HNa
msufvWFo+5ClNlXwzd+FP1LgrfdrfOXRv3a9FMyXgJe82CsXCx+zSdYd0cDQ
OZmFnVtgueEZT7/XMqRhYBNnD0sc9xvvAr8VGxK/6zBHoqKDT7k+Z4jxexA7
F04b/GTU4ycMiQ2r/zcJZg1nhFpXMv3xCC8PLygKKmf6+zOuJ2ZzQLroAUOF
Y3Z26R/haFh83I6We2i/3d7W+XDLkzlPN5QxNOe5cM5DjA9Vf89vqrjL0JDq
NF9rjB9XJ75ZsgU+s7GWNx7jS5VS9O9DhQyV+fTIzYBnHJy7WQqWLbLnHYZ3
Ot1ldQsY2u8y2doF4xWbcKN0DLy9+YZ273j2baSRiNodhl72xiM8112haEEe
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
xxhfvL/Xv3LD7/XcrUof8Wn2v+BNwjj+aEOPtiisWITbwBErMguzK/m02nqm
jwquf/yJi+z+Cj6lPJX0efc/foj5p8VSZcw2oiuh+/OyH/Cpp2fd8Ftw+pVN
ce33MT5/u23X5TmwnwXbRM8Z54v67NuPvMunloiPvDnbB9YX8B4fQc9anP+X
LfPpKcH8Jf/Tvhj1Weps89wcfps0eOFpeK10RadTMZ++iu0TdoFXDfXROVXE
J12VDU3RcN/7Ivj231WfR+F6DjORERfyad6scbsM4DV6jbKG8O8h88vOwB69
LzAL+DQprejMIDxP3/tLeHzQ5vN/4DEj30/cBA99qThj0Y6B9Sl8qPVvkaL3
f9ffvTJgrw3ibUOEg82oov/iu+/7FHhJiv7GV+gPDXmjYtXgV2Psrqejv/R9
/4Xf77GY63oQ/enJ0Un+C+EH01uRiyOfzR0rOx/3W2s0R+QSbHfl1YIpdzDf
pEvVl8Ki6ttlx+XzqXyG4rmmgIH90Dw+Ga/2HvkK7tuPzuXTfrZiX2jAwHo2
h09OUrMOuQUMrL+z+RS3/3J4uf/A/lkmnyKDo9zt/YgC/evzfW7zKT08v8kW
z98yzkTnyS0+hUcq/clF+TRWJMi43+TT9++hJbGoj77vWdL55LtJ75MJ+tPH
YYbap2HJuW8OasD2vqdyXeBLe9euCED9jjJGRneDT55bZt/oQPz0fc8Hf/Xc
IxgJ970fgQ8KDT3/EvF37a3i+Pw0zF/xGufaEa+S1nXSqdcxv00ZMW87XEwv
8gKv8enTsuxad3i0wlfp+6n/9Ye+/Qj4ye7zxo3oD39yVwT8vILrn3lydYPb
QPvDpol3XO1dMH9kR2tvhCd23h8t7Uh0UvBJ91DYpdNFLtaBaPx+tfzoFD5F
Czpefr6B+r/nSubTv60NNtx6zDflq2064BuXeAmV67C+CgoJHI7zf/h2TlWz
I+LG+Onex/Erkr7qg22p//0wPOvPJVltK6K82jDpa5f5lHrkldNoS6xHxz48
FQRLBmf/DLTAeOoekbMIFh+u/m8i3NW7Pk9C/iN7YanZGlx/s/mv0It8Ksof
vWu6Kfq34/xMyUQ+ue5at8jOhGhW+MRXAuf5dKK1TuTOCiLlO7qLtp/jk15x
u4IL7JpSrD37LPIPk9cpF4yQb4q1/lY+g/j62HHSFq538bDfeZpPiwV/XBkO
6229G9MZz6dhTy++yzCk/u+14LEN2aqbDQfyoTg+vblaJdNtQHS093uKWDzv
Sf7b3bBH3FILRXj9iyu7l8GrZ4/xvxSF/nnZx+zFcszX3wvjRsAPXrp9XwCv
RLqeewrzTUK7y6JlWP9I3pM9A9fevNs6fCnRHMVGzzDYQTT655YlA+sr2HJT
w/WNizGefevmGcPOCoItJ/UQbxZYsJzE+FOydJY4qrv5+w/fcnjvJ0XDfTzk
Q/UGXi7wdleNtwu0qf99Pbxe/6T/MS2i3eWa3tPhooxv9EwT+d7eE9t7Ivkk
sZhb6KRC/d/LwJ9ecCXzlDHe7+SybWFu99u2DkXkB7NSTPnwU51Lapthp5qY
ehXYdJ54zqNZ1P89dQTircY/YcI0Is1ZD3fFwmeXtl4aMm0gHuB5Cj6VZ6ci
X5oZFfsqnE8/o89+3SeH5+19AQIrK67/uEOKqKJJ5VR+GJ8Mxj5O7xiPeFGt
qA+Gu86OEG4ci/jPMM9ZC0vvPC11agzRCV79+DnwzGLVSSskBvYbj2P8lyoT
+DSa+t+3wnPsr+v2iBF9+NUVMwHnX2jQPjUOPm53OeomXOwszdceifnDOV36
A+yxJ0KleRjyyQVD4kbj+XRPrjcYJIL85u2yzkOwLzfBvnMI0atmS7kquHy2
2NBcWKV3AY/yKj53LEkQRv1j+f0LlkptqFCB+74vQf1Fj/u4LUSIKLNphf9h
+MEyc58JAhivw47fuAYX/DwR5NvFo+dDZpy1PcGnkWNW7wr/w6N2w66cS/C2
G7dOJv7iUaR/YfUVmCRadwv95PW/z4aFzlX5K3/jkYX+7LwzuF7QIOaL6Wde
f34KqzTf/Xj+I4+EbkpqG8FHBdUunH7Po18Wj3bZw3daxtmNauTRWjkxvx3w
0ODhbvw3PHKJ+BFzEH6T6HL1YgOPSnRO6HrCa/eln/5Zw6OIX1vnL4PfjfV8
JfSC17+fgfLHjM8wPPOUR9+OzZILguVVVfkVD3hkue6vjR688XyTaccdHlXd
1auvRX1qxYV8jMrh9X+fA7u9KHyzN5NHOWFvM/PQPv5DRZsq0nmk/fPG2kPw
HKdvIrvTeOScUaZjDe+RaDu4/xqPerfvHeHwd0NfXkjm9b8Pg1V99LxPXeLR
eOMnnaqwhNOWrrFJPNIK0Q9QRrwoniktu3OW158vHMN8oCuxdHECr//7OLg8
cXFxRRSPsva8jGJD+TRV8Pz4r8d5/e9r4f2PPEbdDBmoP3jsU/m6tQd5/fkY
fn9iplBm3n4eGfyIs42Ar7hcyxdHhx4edPf2DjzPYlfnrRcD0L6jqno0UX7r
9Ay9ej8euR71iHGHe4KT5Jp9ef/b/34EqXuK+/DIbXau+iS0/8/QRU1LPHn9
32/DHoJRL/Zs5dHfqJ21UzEeXDUuev7Qnde//wF3p38sveDGIw7Lpyqc71Zz
qy7Phde/nw0Lr5SSM3Pi9ee7aF/P7puiH9fzaPeueJ4r7m+9M9RlrS2v/3tH
WHb4+b1L4D3jLlqMgPebJv7JseH15zd4/vUCk7P+WfPI0POEeW//rjJNsmxb
y6NDa8xfj4W3e49pYNbw+r9PRXts+zm2Rs6U1/8+C/U1UsRrlJsxj+w8fTwy
UL9VDnIxs1bw6Cc76HXBUeS/x5aPuGfI68//QrB+dEy/cEqfR48HH1pbfBj9
V+9ddukyXv/66RCfvjVnVlouRfnPZGX+Poj7qy6v2raE1/+++QCf7k19fy5a
j0fiR75M9tqPfHcO40Usj8ae8KbqYD4tTNSPtzZB/a4LbtschPZ8LCEaZ8Ej
b9vIEZGBuH/Z7cjajTyyEe90m+aP8dhNxeL0dtz/bZye1C6sV8RCxTbu5VGa
oambqDfiM7hay/UkjzQfp7L38XulsQtunLzII12ftUkLcP+PtqK6yVk8Ouas
V6KB8qTn/y1Y9JhHTzdvUx2C8t73vmUs/Pm/44LJQbqXO3lk3iW+b9A+Pk0b
Nv5dFsa/7KjHofuckS8VKxePnES0vHdBZoD5lTxciuSJzBeIeGTPxvw//SH/
turAftsojM/jTtW4MkSN3rpCH5tMyPfI2hEfMZ/KfGpUnxhvQh8GS7VcRH7A
FygpC/MwoSkVL0zKkG+ojV/hMMPVhKoLlV4v30h0w/u6ymK+CcWtkFIfhvxl
eOeb9/mzTKjYo3jErE3IZ4NvD50y3YSWTZ90qze/nmw1aO/OqSY0o3HTSkfk
f0UH/ARn4riC1IzPslhPXji//8xz/L6tQ0TtOdbD2XtTF5+eaUIWm9KZa1hf
B8eEKBbNNSHXBWEXF0cTCRcrWJVpmpD25lrlsPPIJ5Y1NrcYmKB/zJFrTCV6
uFh85W1bHL9wZUNANvKBb0c+xLuZkJv7C5EDRURxSYmZ4w6Y0MoRc/3qypEP
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
         "] -> {{{69.944275, 36.83457697844904}, {69.925215, 
          36.85307314103435}, {69.877474, 36.85305857197098}, {69.829677, 
          36.8252888986582}, {69.839064, 36.74207289724905}, {69.858036, 
          36.677402648298}, {69.944023, 36.7051426849618}, {69.963193, 
          36.74211170548575}, {69.963301, 36.797582668671176`}, {69.944275, 
          36.83457697844904}}, {{69.513652, 36.34531684471314}, {69.59, 
          36.32692858430891}, {69.666496, 36.38219635485588}, {69.657057, 
          36.43746868322636}, {69.62852, 36.49276495234721}, {69.542565, 
          36.48351537095003}, {69.513796, 36.4189949034658}, {69.513652, 
          36.34531684471314}}, {{68.985927, 35.03694732067011}, {69.023977, 
          34.9642549852888}, {69.08132, 34.99153257147328}, {69.12915, 
          35.036990264065395`}, {69.157955, 35.1188520075117}, {69.138968, 
          35.17344926749366}, {69.091227, 35.173431351126}, {69.033921, 
          35.164312317602274`}, {68.995654, 35.127899034767196`}, {68.985927, 
          35.03694732067011}}, {{68.832398, 34.65576459159653}, {68.90875, 
          34.63767607551978}, {68.975625, 34.655810945897734`}, {69.03302, 
          34.710191373530385`}, {69.033129, 34.764583089979595`}, {69.004519, 
          34.78271234283457}, {68.947265, 34.800833993880914`}, {68.90909, 
          34.80989181894909}, {68.842164, 34.764524790098505`}, {68.803882, 
          34.71918316315314}, {68.832398, 34.65576459159653}}, {{70.765678, 
          36.96443612012576}, {70.775318, 37.01076555879955}, {70.737177, 
          37.038557156024936`}, {70.708531, 37.03854620911042}, {70.689311, 
          36.9736750206499}, {70.717847, 36.918118246002194`}, {70.756023, 
          36.908869856248096`}, {70.765678, 
          36.96443612012576}}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3d+3emJsb4BD0fSW6o8MLg4HpS+tONAd4GD2Odrp
xW9nB+f/LOLaHQEO2RWMq6x+OTt0B+Sw+rYGOIg3mzZq/XV2MGLSknFsCnDg
zaiW3P/H2YFt1zfWL7UI/XbnTBJ/Vwc42B+NlzH66uzw7o02/6WSAIfMlNOV
8kC+2jLujb+KAhxMM7ksJr1xdrh1nKtOOjfAwejg9Pthj5wdZu6eNoE/K8Bh
8qPlv+0eODvMqizybUwJcHg6Z/+yE8+dHWaz5HssTgxwYFNbx7Huk7PDjrMh
He5A/vl7Mpdz/jk7ZJR7GDokBzg41gt+7OJ1cZCef/JfZVqAQ41/DYeZuIvD
bEuVrQHZAQ5f3y4S+y+F4L8razmbJe3iwBtqOLUOyHdacaHqGpDPzRN591Ux
gr93xd31TFUI9bUx0lrHgP6PvWa26YmEiwNDKTPrveYAh7sOMTvjxFwcFl2J
c7ndFeBwP+ese66wi8OSoDcZMj0BDjef3j27mcfF4bj4249OfcDwZXj2+DWH
iwN6/AAAG8W9nw==
        "]}]}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Mercator", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Mercator", "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoPolygon[{{{34.470795, 70.622058}, {34.425053, 70.564662}, {
          34.432663, 70.526486}, {34.486008, 70.517065}, {34.508878, 
          70.536214}, {34.52413, 70.574443}, {34.516519, 70.61262}, {
          34.470795, 70.622058}}, {{34.539349, 70.488546}, {34.539334, 
          70.431255}, {34.569847, 70.53636}, {34.581506, 70.550991}, {
          34.573115, 70.542007}, {34.539349, 70.488546}}, {{34.589275, 
          70.560738}, {34.581511, 70.550997}, {34.589656, 70.559716}, {
          34.589275, 70.560738}}, CompressedData["
1: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
FHJABf6l9WJjMBvGkjfkbhb8cY54IwuF/c271Tiwp4BGNeR1xWxjqTxKbt1Q
MNRb1YxtnL3CnzWOlaoVb2Up2Kgq0xzMnB7JjADfT7e4OgasYlbyrysEv68v
eDEdvzdU61Y5CdyspzHgI74nuldS8SqIJUdxggE+2qWet2Ezxnc323AP+rd7
zya1tZs4/0P/i4a1d3iApwW/jdPC/OwIXFp9Dlz8OUZXDvOX8+lJ8Amw/ROL
HyMwv8maP10swbcb5HV/Yf3Xf2zOGxEAvWM23TQMHGp6fcuXjSxNtPI/6CD2
j7RYF28xt5nrC2Gvw73P5qmBj+5xNjr5hyjIcVbI8o3cftZMpF3WkRiK9zUb
uO9tbiLyufvc5TW+t6z1mlzXD6K/ZwpdF2M809e/yzL9RmTT71r+CXBbjqFt
1BeiV6HVI8wDOb34Cf6Q/c45cgvsaR0Sio9E68QDBpt/mLYhAizRX0Gc/mxA
fyO7ZhwDj3q8yCDpLUn3h2CWzt8ZVH6nmqT6IoTzH/D/1uNZ1XrDhioiR68t
bs5buXgPPrvyW9A5rG/AlsCXR8FQF278UC6fqiDKPjdG7d0Obj8E78m2rY6G
femZBWSvrSTyDHnN2wT7U7eR27sc3E/xiEsLOMQrsHknnpfYC+z19gfrjK5X
RCdbPR0TIjh985Lo/nRVl5Pg+NjNwnfPiZ7M001cGcHpx2eIP2Ff8/aAk59N
evq9jGiFvrW5Lfyj1Pl07EGwqtgQwQVTfV+sB69HmlUO/m5eve53KdHaB5Vb
NOFfv3iaA4eDZ73coZEIdpj/UsnlCdFxNaP21eChR32mfSkhMrZ0TfIEx5ar
+JvdI2pQhDLczdLLN/9sh9whEgQ9TJwM3umw/IPBLcSfvjX/RoCL3vYceLaI
s0fwzZOeJfo3OH+O4vRSAeKd0uYOiz0sTQrtSl+Sj/XbFuBSCH6YLGv4IY9o
0oueeY8QHwxHq/SOB/d6nbnFJYazvxyE76VVjDLiy4O3+621wPc2dWmMAwee
KPLxuUqkfsuT2Q1+s3BuqwU4fNVIl1WIV9o/6pdHX8H8wCzF8cxLvtr+XTZn
j+AAj/LdqZlEbYnXXaYgXr6y/Dg54hLRmwdWnePAWk/dF3y4SBSsftz0137O
ftK57x3g8pc0tI/wyHsPjviiYu98jmhcdbfkbHDJnk99rcASfYLft+bPD/lz
luhqQm3CKfSPlzTRsu9posWnvrk5IJ46hnlMXH4M/Uv6btqE+ShTKy4ZfJRr
x3xpFgbvkgdL9D949jir9JYUzLd4gwPfefvo4vtkrv+Yf8fUuS1+4KJuOi5F
sI8VEXGl95KIEt/22hIM1up7c4gokei9+qCCFthb5Zubv2wSiOwslmgsgf36
PBhS/e4IkYJVD+Yc7D9s8Y19aWBkUdXdwPc0c2Iz8fxAW2Qe8BeTQK/sheA7
Bs/yrRFvS849eWG3j/NP+JujVTfvrlgizHri8q2cf8b+56/V+1Qz0sBKOptM
dcAHR0WvXwvWn3rPJQz+3rgaGcNeosKQX3XFiAdWmsv+bAJPPOm1OWILl+/F
EHklNQWtRbzZ+9qh2XoP9E+iUC0N8SjUb/aBP1FEzavsgi4gfhX8ebRPBu06
fd4FqYL1Df2zGLTL6xsk90G8e4G0whZceCW47ckG+PNIRCw8X5r5XaP/evgb
z3ldJb7Xs21mspYf4pHptowF6M9N5etBdutYUlZKiFmJ9u2sRdLWtSw1zFO6
khJN1L38nIsSeGtyL7l94JdFRdXFvixt2+9TqwBe81itYwp4bLcVK17j+xcz
aoNvrIb+6Dbp55fdXLwCm4oFEHhl+bCaoT4sueZHRingeaPhN5xGroK9DLmj
HBrF+fNKllZtFokiwZL8YgX0jnHTi2gwL2FhShrYYNtoZT1wyW4lt2/erLQO
Ay5bg4DixdKZW/2ubgF75XRL0VjK0ia/HLvASHxv7bpC8yXIRx0qBseEE2ne
+OSS5wF9ojsppGA70VfrjckB7tCPdYuGXgW7uW4N8gdbJ1b+EG0lWn6Rr97m
hvylfvWA9EAu/oHtBq6eei6ACFm+axB46PZw75p18KevqUHn3Tn7WIv5+n5R
vQU8r1pGv8aX6JibE9OxmKVjB9/b9QFL8jcPzj9WE93gPUkxBJ837Lo4HbxR
Z5RG82KufuEDexE0eT5y5/TMKqIjmhML5cDhtTlRCeDa8irTF+iPxZQVLWlg
Sf7pxuklcPudl8kOrly9ACypf7hA/9QMjT+3gqjroEz7AnDku4N25suJutX4
VBs7Iz5de2kRtBTx/fCcTndHluKO8J72W0KE3rhYObCU4HilfKgnZ69gPe1n
y9ctJtr3eUahNnhiUd2a925EQz3d1e6Cd0cpzL3pivVc+Es1Fu/rt2SDcr4L
9ID9w6TDToivi62fjgXvebKkyxTfn7HuhL6uM9HO/QYh88DzKwozyxyJxn+T
L9AFd+2zPXXIgeiMnZvLEPDb3h8W3F2E/RRyux3vy02zjy215/ZDcNTLvHNZ
dphPmKsDnv+0VetrxUKS5ltgE5hfnS36t6usuhZ88KnLIK8FRGMueDqvBW8+
Z74aYYacRg9NLML7uk8MV35tTTRPXDjEeBRerlAMtEL/r8a5JmC8yC5fhs3l
3r+IJWOdgFL72fh+cGdg40JWGhdmEc3/ezK42hb5i4WFojlYXzSsi78A8XyJ
rK3xTCLLmX+HCmxY6rZaeYqyGUnrCSy3nwqI9Pp/S1wGvmy459tl4tYHHL7C
MlNhBvKf4StDvIQsZeYrN1cbI38IXaAxF3wM8qfDAHpg6m1VWRHyk3/qv19O
gT4e37PKFb8fXlmunKxDNMR3iXor2Gtr/8ylY7AfHEnPawDP/syLezYa8dfv
hekccN+qMWvtVInuDpBRDQTn1tWdqRxOJKqvbt8JdnY4lvVIBfYU+Mf5FHin
qtOTAcpE+d2WFWwHDxUXFJSwvk/yVDeAFzwJFVX3J2n9CuPvNTlmmmZfxCfI
ByHYrY/Jj64uhtI25qgNx3wd31DYr7GDIbwtxRh8235GpF87I91PwBWGUaG1
rQz5NjUm98B8/1JrL+72l6Hg+3e264BH9R7zKLuJIcuSCF42eM2lY72eNTJ0
9euArgxwQjckCN8YEpvtAvHz/Iz6wq+MtN4GltjpF4Y8j3xyHYfvjfGPL3b4
xFBWqQlzG+MRy/X2Dwz9u6+iIV6vccuRSb1jpPUecKD15pq/dQw5jVmkWoL1
iO3n2V8AluTL4OL4iNEnqhmpHsf6zVHfNamskqGv+l5BD6yx3qKTyxTB++8s
V1sIfjKwdfLJN4x0PeazpMIffWomeITnuDxZcJfDr/oprxlpHWUe4u+7z3fH
gtf0vcGIeXyWYOywFwwJe2cmO4KnrPTYdvE5QzPq/9XZgJ8V5BZuBtfrv2aE
4FdNbiP7gL2jz7dPncf5exlDZy2dnOut8P3e8dEmTxhqGLIr+QB4UH6UR+5j
Rlp/Bgefvh91FSxxB/DuKn7ao0cMLfVZYDoZPONd6Z6MewzJiP9ZslRYfnL2
x7sMDduzxbXJAuO1un0n7yZDyzdUOcWC5ZzVV84GO5mfzd8Fvjpu7qqNhYzU
H+ciPu9u09qYx5D4mGEjOPS93/cNuQx1XnuWNA48aVKORmMO1jdKvurrHJbW
N8z1cgfrppxXuQDG6tMAsGb+maqL4D0YbsFl2BtzoqZgDjcf2Qw9MDjiHAUe
0j23ODaLIaPVeozRHM5ewCYeOvye4OjuM4uiLsF+r5tpTJqN/tn6yq8CJ7Yr
J4m5viv6jOj/cLL5sHMeF9B/1Q01erOQH9qU3Xp6jqGp3SeoCmayNLpzsVUM
+PbCpTVDwCf//g37eoahVU/jqzvNsB9PmlDnf4qhPY1/RsqC8z5OnKsPfuCD
QCBgKWWjp2DxCYa+a41u3w32unrw/pqjDB2/f1tlEdhEG0owBeM19XTLJLy/
YNK352ivKL7foQCG+vfcD5boG4YlS5ep0bFgRBu1dHBC59c5kWBJPgV2iGyY
uO0oZx//p10SH8C7byyquQGW7PfgrC/VkcVg8WnNMHH7nTc1r48x0vyCz1LP
6vun74J9y2uDFoLnqvSalAuW1J/Bh3NvvLsE3lC3Lq87uEhdafxj8Cg19Zt/
ecinEB6ajzPS/RSs9FLvQg7mQ6JvwEf6Nc3NA5tttEgcAs5d5V8iPMlI6+Om
/7WH2kaq7QGH1k9dvQIs2U/AH5eFHK1Mhr0+fcoUzYA9nTcY3zMJ/mxlqL4K
nG2q+L3kCEMO81bxL0yH/bo+2x56hBsPeMD9vZ5fDjNU+dpe/YQJS4/6vmlo
BE/tuTJx/v9hWZm7yTxw98Tq2//AjuLAbQw9PcNnTx+8T2nW3KoSI+jh69/M
/P73PLjpp/8FbbCkPmHIxQewv9w91x+GnH8cgv3OrEy0BAe4y7w1R/sdIQL+
NJael1X2Www2WP4xpRb8oNqmZGgC7E9cmAebjBk59i2+3xquwztiAL17+qGH
B9olehW8eXXqxIGJDM0UC1596J9QY8VxYEkdAex8P3oPgSX1VH0uX8F8vjy+
htcPPLj0YnoK1rP55FVm6FToKz90HOspqe+BR83w9cw6zdD6HrAUPc6e4B8/
1tu4HQRfP2K6dNpZhjYej2ndqsfZD/xpyuAMtShdlpzKWIVlaYy0XqbL7T/p
nL1MYalj8qrHdpmI11HjF9XrIH4hzb4Of5foL3Cu8QQj9ipDf2aZOZWAdzif
9RLcwPu8rV2XgA3jZi0eepuh/nIOVZ8nId9LrAgLBEvOq8A2iqUfFe4wtHlE
gtrZiSy97lP8pQ3t1v1+qXuBrWK3jNmL9ll56zu/abO0UueR2QzEy/Ppr9w2
gPfx048xiKd2yfRqPHjaoZ1vNRGv/Zqu8gRj0P/Bd7fZP4P9mmxur9bCftxX
+PE3eKHwvUYQ+FKbplwPPL8mU75ymyZLS9anfTiB+O7g0+m2fjS3fyCen7cb
224ziqUbo2zPvsb3gw3XVR1QR/yzG+eljf7N/72ks1SNJbE5DwNvEjsg+HvW
g3neGM8xj8TCvuDG4vNDzcEdr7SYOlWWbG07LD/cYqT6bgTiU/ZCiyVgXvJB
jRzwrAEf3sre5PY3PB+j+kkuCvMrqU/hff7f+n/cgf1AUq9V4+I52iXnl+jf
J/Ohz6/e4OKfBtY33XL0P7CkHgMOGGtgMamI2z8wXnEafhLtkvMGzI+DSOWA
943/5m+VOMEF79z7q5PB/G7S/HVPA/vPFrMN1XfQfs1b39oc+wlj11gxADxg
X895tVcYCGj5YTGYX52xhhovwXpjO/IHg+N3/7V+BJbUw/B9z+DVyx+AOw8L
triDdZfWbj14jZGeL2D+T/6+Klt7nZHmzyOxPpvWR3fLx/PZbJICWNcjRSYS
fGL4n0APjO/eYfww/7/5sBcHOnBup0uKCeYrzkLeR6aAkZ6PqnH2CJbU7zHf
8qLhKwaDP+oiwwKnpz53nYn5FiSo8j9hfd5m185yw/w9PlBeMwhcYrtrTh3Y
McRKpnM4S+tWK32PA1+44hHyGux5uTXkBViSLw3/7/mAcSnqFcOQz/55OG4i
1vuHLZ4YypJa2oHkT2hX8jwcHDEY+n/i5OgH4NcwH/tBXDzF89U9/N1KBnLr
D3+QnP8NYAm7kIX8fYaeP5tTqwjubHK9PBX2/MHwreth8F5lLzm/EvjDvJMp
axS53z+Ffd5YmExy2L/P1DaGgl/ucld17g/9E4AMHf6yUTzR4Ph7Pb0an3Hx
tR9LNTcaZsdCb11YOlX1CfjysNOjzkFPXTpRGRTdj4uvpQyd3tgUXNmXJZcb
D+VGoD/ajdZ8HrjuUsptG+gljW1Me3sfxI+Ln88rFzMkujmvorA3S6l5McdN
MF5JfR6cPN7f1RPrITlv7wV7HJk5Vwl8e/rCAi/w1QkRX7fDPs3EiV9PltrK
KlJ2w5723z+btLgn1x/opYwYa5dWWfzeMbh2wlVOD4LnyNbXlkEPybz7Uc2C
3ZniXv0R/1bsmtA+DJw05Y/rFuiZfRcOb8nqgXjc7fjDhIucPunOkric9hbx
VJKfdOf05nnoUSfN0LXdWNr29ff3GMRfi9x/qhrdOP2OeC3J72VYMq9Tt9KA
nnFyza027BKRatCj3rJgST0XLInH2A8k9dtOEZ1h505NO859D+xyS27POOwf
78zeuT1sF0njyTFuP/onou4egyY3pCJeR9aGTARL9BnYnffdKb1NJI0H0CcP
53l36IAl8RYsPkZ72yqioyvdaApYfI2FAU/LnKijid+HswNMC/6KSM60RX0y
OGVGUeeXFhHNhNybAL6Qe7zrHVgy7/j9ml4hhYfA/WddS1kAPibol2wGnj66
5uRz6AnJ+c1vEYmPuc5iv5bk980iGr0qYPNJcO+nP/4ZgWPai274xTPS+uIv
jO+Zd1WvOEZ6/gyelpOuY7qfofLi7m6lP0VSvbWPkZ6fgM+22FoHgm/91naO
AUv2070MdW/+1/m4SUR91Pz7hkcz0vMfsFPmhJvzI7GeJaLKph8iSjDOrUnd
BX0kNvgf3Pzs4uI1WHzc4rQT+z/Ten3jd4xXYcquuTsYijgcpH78m4g227bX
DARL7geAL7XU7f4TxkjvI3wVSfMYtLvseqGx+IuINkw1tnQFW1huVnH8jPVu
iz8xFTwrWctFH3yo0Oz9A/yevzG04+UnkVT/gSX1CvCXtLTul8Fh5bfiI8B/
91zkZYEl9TWw85358gbhjPR87iN+/7xR5zz4wI33qqbgQRFmD6+BA+RiOiaB
T9z94dMGnuaxLOXuBxH5+F7V6o3xS+p74Knn5OpXgyX14fci+uP24dRjsOT8
5J2IfJc1H38LtpY3SPFrENGLzMsFc3dx+q4e3GvcMTe8f1CRcY4/+Ozy8x1J
GO+o/VGJO8Chal09Q8O4+AIWywK7bYgvV78FPsf7ll94NtcKfNzuUMFLsPg4
6EkQ8p9XOZ0u+P7PH/qTVbcwNPxMVEgKeNCNx3W3NzN0dBrTWQZOLB6ZsS6A
kdZr0P9Rn/kyZ9cz9DtsjLoILGOf6anpz1DTMvlqe3DqDtmoyb7IB289CVEE
Cx+/62Xuw1CPzJfXGfCBncN3aK3EfiVSLigAm5uUXjBbwUjPAzFfldumvyv1
/m9+y4pn3Ni/jKHa5snVMWBJPr+UoXWreObGWK8nc8NmZ4DFx3t8rP+2J4qa
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
+2Xs6Knn+/EptCHJfFgg4vMAte5zhvMp08rWVz4A+e2HSBsz2Kc4jX2A37uI
CzvGfOJvWnRmGr5/vrvYcfm0d6X5bWOMR2NQQYsR/P3Z8nV6vTBeSyzH5bX/
tb/NWr8mI4ZPDh0Dd3bbif2P92W4znE+ia+R7FyJ8Vn22johk09zxQmZpYgG
OCq6jX2A56f18bs+UUTLVgzKG/WOL623KYjosq/4Yguf6gL4PT7XC6X1+kEM
qX6pMxyeLKSBKl9GHILeEMncvrfPT0jiY7L40QzpK8/3GucjpNzhr+MOjmFI
/GcdM0VCUhEHci2G+ra//VA4Xkg2c+6+uAd9vSzsau9RY4XU8GrzzjXQf6Oc
u+3YPFpIl1bnzZiKfPLmrqDu2mgv/LV7UDPy4ZMnwlNf4PePYwqzzyC/vrbj
wsyj2kJSCD+5TSOIobCEqAm3JgvpVELxyIxohnoWaznfMxHSXSujCMFRhqCK
3n2yFJK6Ufvqa5cZejRzoM1VN6H0fuAt6PNfez4m+wqp9fgZ/ZbnDCWeOZk7
ZJeQtml9rbBoRD6T5Ww4/bCQ9u5c8P59F0P9jju85p8QUsQVz88X+hHJ8p5f
WXxOSDf/7NfjqxJ9nDqtb/V5ofS+6hiiAytSou+ewnghdxvGE4mvcy6KFtIE
8Ye1SXovHN8/2tY7Vk6TKMV/dJGtvZAOL0MCMYzouGZue7iZkJh1K8t8lIja
VfxeDpoglN7T7Uukc9HZN2GgUFofkiFa0j14j1arNZ1tndD6qoOhv0jLAmqs
6crPfV330X9NpcaVWo+tyTVV8eCl3kRpFy/0e37Nmn6ORsMgouuKtELpkjXl
lexs1x9BJJbRPjnWFI7hj9Ag2gIZvuCeNWW+aS/8PJakfzfz0po6l0QpZk0h
slgaadKnzpq832b2S9BH/zaf7v69yZr44j+gmk7UeGLHwwmd1jR579G/ejOJ
rh5Zf6elt5CeL9W71DqPpLq/v5Aqde53u25HZKZlHp0OfvzY6FigO9E8cWLc
TUhGJ/PszLyJgg4MHLq12ZpyMmBAK0h6b/eHNV3s671HgPZelv0mbf1kTb7i
CzxriRBl68PAncmLTj8IJOo+p7u84TdrWnR7xOE5e4mCo3JX9m2xpvSh5ial
x4iE6sor5vcQSuuK2URnjx77bK8Ae3i53aLpNlHPGwG95NWEdMRp1Pk7j4gU
BgeMS9GF/V3X9Lz8hEjDSuPa0dlCcvwZ4Bj8iui9Y7aMj5OQrrScnWDQQOTS
7iPcu0pI8RfcRzR9J1p/cX9bJuyvfkS/lPRWIvGf9eTC/0bJNlidaSMyYq38
JsK+Ph61Mm7+zt23viwkcXox9gORzc/Pqj3yhNL1rCR63JDgs7pASHvM9jnk
oz8TFh77qpMP+/QqnTHkJtHABaMjXNGeUWe7cvEVItWv8+XuPxTSvsxZZasx
Xkn8eC2U7pNZRHstLx1f2ygk09ePo4Izib6Gxdc+7yEi05Pbf4eA9y+Yceu5
ApcfXsL8rb/3eM1wEX1LOd1tO9oX1+a2rBkjkuquS9z86WH/S9gTd+gi/EnV
LO6ICVh8YQTtym3uw0Yw0Ff1p3odQbs5L0i205yrP5wnKqjIW2tjJZLWoU8T
9dOLt/VhRdSmEFwncxT+V8T+/GyH/E5//qvgKLwP5hXjKKK+ogUPy4OJHK+F
+hQ7icgxb5HKaD+iyom/7Fycka/qqFf7LYP/+X9y2+cCvfJwjk2ZPew57qpm
ojv0Wf9x3p3YZo29Znr7eoik9+etiKacuGWusgz62nnPV8tZRKcvflh5EPH4
1nXn4o189PeY08VP65BvJXRsW4d0a4j4wshmEV1qzTG0hT9MOHOmLW6bSKpD
5hDFBkH4YD9jT/wz6cliPdZoLt2N/Vfydzrwj8U+UUmNyH82DNUen+FKtDZt
ZK9ryM967r512G0l4k1L9HAl5KtpY3ddUwwgcp+hckmI/PxTU2BC52aiMr/+
LhH3RNK/gwghutMx55T5E5H07932YL115RateyWil4PvfZ2UCP9QGWX6pk5E
55auDIqFffi7esaf+Qq9PmaGYfeHRIEr3dNkmzEfP4xnzfmI73WbN8y4A/nf
+hn/Hvwj6lihMOARBhLs//mBV38BFVR3NLkqsDS2U/vzI02BtB4/gqWIUnRs
moDCctb9KdFk6VbjQL0xfAGdh+xS0WYptdzgh/EMAaUcsJD3mcKS4x+tDBPw
hDutCSIDlgpO6DnOMRHQ2alR1wWmLA0/deW5YLqAckbdWelqxlLUn4BRasT9
/ZgFK63DmwukdVUhS+K0qedMAY2uZye8tWHpHxPe+nO2gHzEf0i0kPt7nHkC
srwsvOu5iJXWJWwEVLjVNcfPiSWt0ofaBxcKaPeZCL6GGyv9OwR7AX1rMptu
upQleZvGweucBLReXIBdwZLJC8dDOxYJ6KjtP3/TNSzNV7qSEoXnP5w2Vshb
z5K4LBeOdldxgTOQJeUTw3afWiCgcUKH+S/Bu/5cCq2xFJCcWPCGsPSxapFI
xUxAuR0/70eGsiT+87mZmJ+4CeyfgztYEl/7264nIO2EdTs2RrKkJ7mwJqC8
z91+7d3Lkrf4Dyu0ub9POcBSRo8PUdpTBHRy3orlPZJZ0m7KVfqqL6D2Uxk2
guMsJSk+GbTEVEDeagvnD/jf30fh+4eGumskpbFUvPm43SHMp/ha+IdzLHX1
nWz3fK6ABP37qricZun///fy/w9hE1Hw
           
           "] -> {{{34.531586, 69.944275}, {34.546822, 69.925215}, {34.54681, 
            69.877474}, {34.523934, 69.829677}, {34.455345, 69.839064}, {
            34.402003, 69.858036}, {34.424888, 69.944023}, {34.455377, 
            69.963193}, {34.501104, 69.963301}, {34.531586, 69.944275}}, {{
            34.127553, 69.513652}, {34.11233, 69.59}, {34.158076, 
            69.666496}, {34.203801, 69.657057}, {34.249521, 69.62852}, {
            34.241875, 69.542565}, {34.188521, 69.513796}, {34.127553, 
            69.513652}}, {{33.037595, 68.985927}, {32.976635, 69.023977}, {
            32.999515, 69.08132}, {33.037631, 69.12915}, {33.10623, 
            69.157955}, {33.151952, 69.138968}, {33.151937, 69.091227}, {
            33.144302, 69.033921}, {33.113808, 68.995654}, {33.037595, 
            68.985927}}, {{32.717466, 68.832398}, {32.702246, 68.90875}, {
            32.717505, 68.975625}, {32.763246, 69.03302}, {32.808973, 
            69.033129}, {32.824209, 69.004519}, {32.839436, 68.947265}, {
            32.847046, 68.90909}, {32.808924, 68.842164}, {32.770807, 
            68.803882}, {32.717466, 68.832398}}, {{34.638497, 70.765678}, {
            34.676606, 70.775318}, {34.699458, 70.737177}, {34.699449, 
            70.708531}, {34.646098, 70.689311}, {34.60038, 70.717847}, {
            34.592767, 70.756023}, {34.638497, 70.765678}}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQvTJT/LJPr5NDf9/qibG9AQ4n5RameXQ6ORyUvrTi
QHeAw5a1aXM/tjs5OP9nEdfuCHDovbS03rPLyaE7IIfVtzXAwUa04PxnoHoj
Ji0ZxyaEfrZd31i/1AY4sDzv0Xjb7ORgd84k8Xd1gENTsLzHPSD/3Rtt/ksl
AQ4tnh8/ctY6Oagt4974qyjAofxzSPudEieHW8e56qRzAxwcPRtZDYqdHGbu
njaBPyvAobI8ZY1ZpZPDrMoi38aUAIc1zArvXjU6OcxmyfdYnBjgoMjEt9Cr
28lhx9mQDncgf1LclXfh050cMso9DB2SAxwYzLvFuec7OUjPP/mvMi3AQebc
nyy+RUD9lipbA7IDHOzYpymnIPH7j5y+vBPI5w01nFqHxOfmibz7qhihfu+K
u+uZqgIcnilrvkxc4ORQGyOtdQzo/z6HPevi5zk5MJQys95rDnB4Ml/yCPsc
J4dFV+JcbncFOMhnsLatmebksCToTYZMT4AD88XJRisnOzkcE3/70akvwAE9
fgDRerdp
          "]}]}]], 
    "BasicGeoRange" -> {{29.814387000000004`, 37.27131428850395}, {
     61.383404999999996`, 71.55603000000002}}, 
    "GeoGraphicsOptions" -> {GeoBackground -> {
        GeoStyling["StreetMapNoLabels"], 
        GeoStyling["VectorLabels"]}, GeoCenter -> 
      GeoPosition[{33.54285064425198, 66.4697175}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{60.874773749999996`, 72.06466125000003}, {
       30.829867910424923`, 40.68720452437501}}, GeoGridRangePadding -> None, 
      GeoModel -> "ITRF00", GeoProjection -> "Mercator", 
      GeoRange -> {{29.441540635574807`, 37.64416065292915}, {
       60.874773749999996`, 72.06466125000003}}, GeoRangePadding -> Full, 
      GeoResolution -> Automatic, GeoScaleBar -> None, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 6, 
      MetaInformation -> <|"GeoMetaInformation" -> <|"Attribution" -> Row[{
             Hyperlink["Wolfram Knowledgebase", "https://www.wolfram.com/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] MapTiler", "https://www.maptiler.com/copyright/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] OpenStreetMap contributors", 
              "https://www.openstreetmap.org/copyright"]}], "AttributionType" -> 
          "Tooltip", "GeoModel" -> "ITRF00", 
          "LonLatBox" -> {{60.874773749999996`, 72.06466125000003}, {
           29.441540635574807`, 37.64416065292916}}, 
          "PlotRange" -> {{60.8642578125, 72.0703125}, {30.82763671875, 
           40.693359375}}, "Projection" -> "Mercator", "Software" -> 
          "Created with the Wolfram Language: www.wolfram.com", 
          "TileSources" -> {"Wolfram", "OSM", "MapTiler"}|>|>}},
  PlotRange->{{60.874773749999996`, 72.06466125000003}, {30.829867910424923`, 
   40.68720452437501}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellLabel->"Out[95]=",ExpressionUUID->"b519ac91-3564-4f33-a2f9-54f4e6545b9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoGraphics", "@", 
  RowBox[{"FromGEOS", "@", 
   RowBox[{"FromWKT", "@", 
    RowBox[{"feature", "[", "\"\<GeometryWKT\>\"", "]"}]}]}]}]], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"fb08a461-86e0-413e-b76e-50d64025985a"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1: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
CuJdZltGw0OOCZT+rNzeBJT/eNbqZ14S3mvXCn9ry1U6X5JPWvoSzYmeRhA+
7o7kf1+oXg+au72z37uDeax3hPV+qZmf4otWrT3y+2KDkNtmYbbdhaXRth/5
dClidzPlMfpOlHqO8ZMjA7T0Yfz5wvrjSRFFv776/g11FONkAHtvmYtwgvk3
9yB4zrLAWKi/8/GDkfS0i56M4BxFs09JE2f+2nn0gK577963H54uI9lpdXd0
Nz/nS0Cp76CR34tjl4GXYUYu+VIEBiq9CMsvzMVTsbcBzeZhzrajgCI886BQ
/CpWpefswRI93kcbq3LN1O3xSTcrIw1KGjmD7bv7u/uHzlJNzb/Vt1kHRav0
T2EWGFsAG3IBSucSAZjZ3sZ4eDTXzdxZ2AfaptLN3XSQeukUN5u+hK5r2Lid
m5yZeCR6O+bnIAjkcxUrEUDm92Lhh1aPWxCm8dlj6WARiZ29E2f1zACa2WW+
A5S30E4Nge6o5A5khO9LvKDBruK++IxiZfCB1s2yyaDiwwNxK/sSt44PV4ZH
ensHH0PY2VyyXhxwjVCxsa9cR7DXrQwQIsnT50uhgB3wV21J6JL5S+fk/1Ah
f1OUVFWOxHYK6L2LVi8IlB9xgWsJPeZycSnozfWpawu/RN/TW7U3PvX67hTm
yMkVS6JBn3TNLZB0OD4uPPLJVwRmlW0KGSSTD7EMiKP+AnK0sc1bsQST5nxo
ZaJV8oy2Vj9LaOopl6lS0PAfPRVd3VmYIr04Y1+cEzeR4j6vyQ6mgMmfUKCY
jyBpn584tSF94NWbTdmfne5jL4yBEYL59XWzzaCOfTJ7teK63nVoFpTecgvw
saGHoHpgdXeUiM8SmDWHvYf04A6ykI6LW0l36nGmXiZJHaX+JMLmzfGTxczp
RmKp71+3xr4+Xm4R7fOUQ+sJnCg46R/UPdJ61IacA8VCbYYkYhWE7IPwiN1N
3+IEoFFE3pARarkwpB8at/T0ddgU0jdD5urqFPUce7jgO/R5ELjhgJol50zn
p5NX1mHQ7XO2+ihpdp711SkvxZy3c5MVC/gL325+ThDLRsJmNy8RuTWiVqS1
WIlzbBvrz/gSzLm7lWqsvwSoq3zCu7r8o4iTt5LIGBuUc+4jmuIt/wje3s70
nLnhihkuWMT2TL1YKYDSsWooL1WFhSf26ZYGRFW02XUb9PiXaJBg4KIvOdFs
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
4JlcFBiAl4Von/D/AWFIySs=
           "], {{0, 375.}, {510., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> False, 
           MetaInformation -> <|
            "Exif" -> <|
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com"|>, 
             "GeoMetaInformation" -> <|
              "GeoModel" -> "ITRF00", 
               "LonLatBox" -> {{60.87477375, 72.06466125}, {
                29.441541550000004`, 37.64414145}}, 
               "PlotRange" -> {{60.8642578125, 72.0703125}, {29.42138671875, 
                37.6611328125}}, "Projection" -> "Equirectangular", 
               "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com", 
               "TileSources" -> {"Wolfram", "OSM"}|>|>], Selectable -> False],
          DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {510., 375.}, 
         PlotRange -> {{0, 510.}, {0, 375.}}]], 
       PolygonBox[{{60.87477375000001, 29.441541550000007`}, {
        60.87477375000001, 37.64414145}, {72.06466125, 37.64414145}, {
        72.06466125, 29.441541550000007`}, {60.87477375000001, 
        29.441541550000007`}},
        VertexTextureCoordinates->{{0.0009384156862752846, 
         0.0024460500385190542`}, {0.0009384156862752846, 
         0.9979378779022223}, {0.9994956967320263, 0.9979378779022223}, {
         0.9994956967320263, 0.0024460500385190542`}, {0.0009384156862752846, 
         0.0024460500385190542`}}]}, {
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{
           InsetBox["\<\"Saidu Sharif\"\>", \
{72.35595703125, 34.744997854274125}, {Center, Bottom}], 
           InsetBox["\<\"Sadiqabad\"\>", \
{70.12847900390625, 28.30921698045776}, {Center, Bottom}], 
           InsetBox["\<\"Toktogul\"\>", \
{72.94509887695312, 41.87365126992505}, {Center, Bottom}], 
           InsetBox["\<\"Arys\"\>", {68.8128662109375, 42.43257946814707}, {
            Center, Bottom}], 
           InsetBox["\<\"Fasa\"\>", {53.6517333984375, 28.936054482136647}, {
            Center, Bottom}]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.024642857142857143`]]},
        Annotation[#, {"symbol", "place_town", "place"}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{{InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {59.615936279296875, 37.3461426132468},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kaka\"\>", {59.615936279296875, 37.3461426132468}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {72.34222412109375, 31.285592721861654},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Jhang\"\>", \
{72.34222412109375, 31.285592721861654}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {59.60632324218751, 42.45892719924497},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Nukus\"\>", {59.60632324218751, 42.45892719924497}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {74.1961669921875, 30.14512718337613},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Abohar\"\>", {74.1961669921875, 30.14512718337613}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {60.62667846679687, 35.24337596896174},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Torbat-e Jam\"\>", \
{60.62667846679687, 35.24337596896174}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {75.65322875976562, 32.2697166318209},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Pathankot\"\>", \
{75.65322875976562, 32.2697166318209}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {58.4637451171875, 35.24449753934067},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kashmar\"\>", \
{58.4637451171875, 35.24449753934067}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {56.333770751953125, 25.122905883812027},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Fujairah\"\>", \
{56.333770751953125, 25.122905883812027}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {65.20660400390625, 37.8412413506598},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kerki\"\>", {65.20660400390625, 37.8412413506598}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {61.494598388671875, 31.028224568711146},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Zabol\"\>", \
{61.494598388671875, 31.028224568711146}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {73.32687377929688, 25.767740402713354},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            
            InsetBox["\<\"Pali\"\>", {73.32687377929688, 25.767740402713354}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {66.46316528320312, 30.916363806021796},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Chaman\"\>", \
{66.46316528320312, 30.916363806021796}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {69.44732666015625, 31.339562861784987},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Zhob\"\>", {69.44732666015625, 31.339562861784987}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {74.6356201171875, 25.347749323170543},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bhilwara\"\>", \
{74.6356201171875, 25.347749323170543}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {70.6036376953125, 32.98562797456918},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bannu\"\>", {70.6036376953125, 32.98562797456918}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {63.05053710937499, 26.00248714194576},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Turbat\"\>", \
{63.05053710937499, 26.00248714194576}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {60.64727783203125, 25.293129530136902},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Chabahar\"\>", \
{60.64727783203125, 25.293129530136902}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {68.74832153320312, 36.17446549576358},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Baghlan\"\>", \
{68.74832153320312, 36.17446549576358}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {66.90673828125, 32.10351636222566},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Qalat\"\>", {66.90673828125, 32.10351636222566}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {69.0106201171875, 25.526332426464588},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Mirpur Khas\"\>", \
{69.0106201171875, 25.526332426464588}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {74.31427001953125, 35.92130823174922},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Gilgit\"\>", \
{74.31427001953125, 35.92130823174922}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {62.11395263671875, 32.37416245209553},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Farah\"\>", {62.11395263671875, 32.37416245209553}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {73.3172607421875, 28.016226126405627},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bikaner\"\>", \
{73.3172607421875, 28.016226126405627}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {64.78225708007812, 35.92019610057511},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Maymana\"\>", \
{64.78225708007812, 35.92019610057511}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {68.85955810546875, 27.695688272477106},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Sukkur\"\>", \
{68.85955810546875, 27.695688272477106}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {75.85784912109375, 25.173873680598735},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kota\"\>", {75.85784912109375, 25.173873680598735}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {66.83120727539062, 39.05651736286005},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Shahrisabz\"\>", \
{66.83120727539062, 39.05651736286005}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {70.57891845703125, 37.118716304960124},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Fayzabad\"\>", \
{70.57891845703125, 37.118716304960124}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {67.27615356445312, 37.229234951946786},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Termez\"\>", \
{67.27615356445312, 37.229234951946786}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {67.82272338867188, 40.13269100586688},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Jizzax\"\>", \
{67.82272338867188, 40.13269100586688}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {60.63079833984375, 41.55175560133366},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Urgench\"\>", \
{60.63079833984375, 41.55175560133366}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {54.353485107421875, 39.51145753426751},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Balkanabat\"\>", \
{54.353485107421875, 39.51145753426751}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {72.9986572265625, 40.932190241465634},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Jalalabat\"\>", \
{72.9986572265625, 40.932190241465634}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {67.83782958984375, 34.823950084069025},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bamian\"\>", \
{67.83782958984375, 34.823950084069025}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {75.85098266601562, 30.90929451672016},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Ludhiana\"\>", \
{75.85098266601562, 30.90929451672016}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {70.927734375, 40.53572049118792},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kokand\"\>", {70.927734375, 40.53572049118792}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {70.45944213867188, 34.43069984745346},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Jalalabad\"\>", \
{70.45944213867188, 34.43069984745346}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {63.58337402343751, 39.07357761413151},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Turkmenabat\"\>", \
{63.58337402343751, 39.07357761413151}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {59.21768188476563, 32.86343938914865},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Birjand\"\>", \
{59.21768188476563, 32.86343938914865}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {68.41323852539062, 33.544828460753685},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Ghazni\"\>", \
{68.41323852539062, 33.544828460753685}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {69.63958740234375, 40.282668644462895},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Khujand\"\>", \
{69.63958740234375, 40.282668644462895}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {56.2774658203125, 27.17891247557853},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bandar Abbas\"\>", \
{56.2774658203125, 27.17891247557853}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {61.83929443359375, 37.5935596574017},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Mary\"\>", {61.83929443359375, 37.5935596574017}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {74.82101440429688, 34.07427493266743},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Srinagar\"\>", \
{74.82101440429688, 34.07427493266743}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {58.35662841796875, 29.106576445680258},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Bam\"\>", {58.35662841796875, 29.106576445680258}, {
             Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {71.39190673828125, 42.894076403348976},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Taraz\"\>", \
{71.39190673828125, 42.894076403348976}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {54.4317626953125, 36.83896555078597},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Gorgan\"\>", {54.4317626953125, 36.83896555078597}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {60.85052490234375, 29.493401671428565},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Zahedan\"\>", \
{60.85052490234375, 29.493401671428565}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {62.21694946289062, 34.35137289731883},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Herat\"\>", {62.21694946289062, 34.35137289731883}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {57.064361572265625, 30.292274851024256},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Kerman\"\>", \
{57.064361572265625, 30.292274851024256}, {Center, Bottom}]}},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.026785714285714288`],
          FontWeight->"Medium"]},
        Annotation[#, {
         "symbol", "place_city", "place", {"IconAllowOverlap" -> True}}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{{InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {75.82077026367188, 26.915947460064547},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Jaipur\"\>", \
{75.82077026367188, 26.915947460064547}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {59.60632324218751, 36.29741818650811},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Mashhad\"\>", \
{59.60632324218751, 36.29741818650811}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {74.31427001953125, 31.5656652152831},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Lahore\"\>", {74.31427001953125, 31.5656652152831}, \
{Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {55.270843505859375, 25.20494115356912},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Dubai\"\>", \
{55.270843505859375, 25.20494115356912}, {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[1], Opacity[0.5], DiskBox[{0, 0}, 3]}, 
               {RGBColor[
                0.33333333333333337`, 0.33333333333333337`, 
                 0.33333333333333337`], Thickness[
                 NCache[
                  Rational[1, 10], 0.1]], Opacity[1], CircleBox[{0, 0}, 3]}},
              Background->GrayLevel[0, 0],
              ImageSize->{10, 10},
              PlotRange->{{-5, 5}, {-5, 5}}], {67.03170776367188, 24.86650252692691},
              Center, Scaled[{0.02380952380952381, 0.02380952380952381}]], 
            InsetBox["\<\"Karachi\"\>", \
{67.03170776367188, 24.86650252692691}, {Center, Bottom}]}},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.027393411807112317`],
          FontWeight->"Medium"]},
        Annotation[#, {
         "symbol", "place_city_large", "place", {"IconAllowOverlap" -> True}},
          "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{{InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {73.0645751953125, 33.69349495645655},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Islamabad\"\>", 
             Scaled[{0., 0.0023092646153395685}, \
{73.0645751953125, 33.69349495645655}], {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {69.17816162109375, 34.52579289427138},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Kabul\"\>", 
             Scaled[{0., 0.0023092646153395685}, \
{69.17816162109375, 34.52579289427138}], {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {74.60678100585938, 42.876970480834636},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Bishkek\"\>", 
             Scaled[{0., 0.0023092646153395685}, \
{74.60678100585938, 42.876970480834636}], {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {58.38272094726563, 37.94094845586459},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Ashgabat\"\>", 
             Scaled[{0., 0.0023092646153395685}, \
{58.38272094726563, 37.94094845586459}], {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {69.27841186523438, 41.31185540579858},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Tashkent\"\>", 
             Scaled[{0., 0.0023092646153395685}, \
{69.27841186523438, 41.31185540579858}], {Center, Bottom}]}, {InsetBox[
             GraphicsBox[{
               {GrayLevel[0.5], DiskBox[{0, 0}, 5]}, 
               {GrayLevel[0.85], DiskBox[{0, 0}, 4]}, 
               {GrayLevel[0.5], DiskBox[{0, 0}, 2]}},
              Background->GrayLevel[0, 0],
              ImageSize->{12, 12},
              PlotRange->{{-6, 6}, {-6, 6}}], {68.78677368164062, 38.576084772796115},
              Center, Scaled[{0.028571428571428574, 0.028571428571428574}]], 
            InsetBox["\<\"Dushanbe\"\>", 
             Scaled[{0., 0.0023092646153395685}, \
{68.78677368164062, 38.576084772796115}], {Center, Bottom}]}},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.027393411807112317`],
          FontWeight->"Medium"]},
        Annotation[#, {
         "symbol", "place_city_capital", "place", {
          "IconAllowOverlap" -> True}}, "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
         0.40784313725490196`, 0.40784313725490196`, 0.40784313725490196`], 
         StyleBox[{
           InsetBox["\<\"Uzbekistan\"\>", {63.952789306640625, 41.32423243125432},
             Center], 
           InsetBox["\<\"Kyrgyzstan\"\>", {74.7235107421875, 41.508577297439324},
             Center], 
           InsetBox["\<\"Tajikistan\"\>", {70.81512451171875, 38.628672522795796},
             Center], 
           InsetBox["\<\"Turkmenistan\"\>", {59.39208984375, 39.37677199661635},
             Center], 
           InsetBox["\<\"Afghanistan\"\>", {66.23794555664062, 33.76773195605407},
             Center]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.031547089258229466`],
          FontWeight->Bold]},
        Annotation[#, {
         "symbol", "place_country_2", "place", {"TextPadding" -> 5}}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
         0.40784313725490196`, 0.40784313725490196`, 0.40784313725490196`], 
         StyleBox[{
           InsetBox["\<\"Pakistan\"\>", {71.24771118164062, 30.331398006092723},
             Center], 
           InsetBox["\<\"Iran\"\>", {54.564971923828125, 32.64746947229865}, 
            Center]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.031547089258229466`],
          FontWeight->Bold]},
        Annotation[#, {
         "symbol", "place_country_1", "place", {"TextPadding" -> 5}}, 
         "WolframGeoGraphics"]& ]}},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], RectangleBox[Scaled[{0.8, 0}], Scaled[{1, 0.2}]]},
       TagBox[
        GridBox[{{
           StyleBox["\"Geo data sources\"", Bold, StripOnInput -> False]}, {
           
           TemplateBox[{
            "\"Wolfram Knowledgebase\"", "\" (\"", 
             "\"https://www.wolfram.com/\"", "\")\""}, "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] MapTiler\"", "\" (\"", 
             "\"https://www.maptiler.com/copyright/\"", "\")\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] OpenStreetMap contributors\"", "\" (\"", 
             "\"https://www.openstreetmap.org/copyright\"", "\")\""}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
      Annotation[#, 
       Column[{
         Style["Geo data sources", Bold], 
         Row[{
          "Wolfram Knowledgebase", " (", "https://www.wolfram.com/", ")"}], 
         Row[{
          "\[Copyright] MapTiler", " (", 
           "https://www.maptiler.com/copyright/", ")"}], 
         Row[{
          "\[Copyright] OpenStreetMap contributors", " (", 
           "https://www.openstreetmap.org/copyright", ")"}]}], "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     {Opacity[0.2], 
      PolygonBox[{{{70.622058, 34.470795}, {70.564662, 34.425053}, {70.526486,
         34.432663}, {70.517065, 34.486008}, {70.536214, 34.508878}, {
        70.574443, 34.52413}, {70.61262, 34.516519}, {70.622058, 
        34.470795}}, {{70.488546, 34.539349}, {70.431255, 34.539334}, {
        70.53636, 34.569847}, {70.550991, 34.581506}, {70.542007, 
        34.573115}, {70.488546, 34.539349}}, {{70.560738, 34.589275}, {
        70.550997, 34.581511}, {70.559716, 34.589656}, {70.560738, 
        34.589275}}, CompressedData["
1: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
Ahq1arXhYFz3piHN3xUFpL9yXZ6YB2n8VH48FPFs9Be+DO7n3RisOExBQBY/
qzuyMP7p99969xwkIOFnl45k8GY9oc/DgQJSvTU2PwB8ft5cra3go+PXMiPA
15r5S3bLCyj8RmnFGcynV/ZtUYgcN95g12LvzTP7C+jvqO9ZHwq4+NtHQLED
YgOnghdUGMSk9BbQkmlWnVfvIN7Y990kApemaedNv8P5G7jp7N98ddjb8+UT
oy/1FNCGr+uSvsA+PXYpFF/qIaDZDqm8b1jv9ly65HMOvH3CqlwlrIc+4oW5
u4A0b0xrr8J6qzUvWyegm4DCLg5g9MGzvob/3Ae+lrI8IR/r9c3rY7UE3bj1
Abx7bHnRRBkBjRZPBFjXR3VYVxdRoWVGQjD0QOaVxV7ZHUQ/fA9WHoce2Kan
OLQ3+M+ql9tjoQdq7t0ZZADGKqXsCz3i+ZDR3guua7zSfgv6Y0SU5pU08KXM
MV1PoV/USkddvdNONEklrcsrA/Fyx5GfVf+IvPuFVFRD72jKPtY52kakY3ao
cxwYKqtYH5wy9ELZAOijUfMFDX/B6Q8vqS2HflKJ+mn5BXxMf0dAZRpLTXop
g7rhfam9mg8vSGUpu+uh9ydc/ywbnpMGfTaV2RA7ASzxj7Ms8X3SLLeBKSWJ
3x36bh3C6no8X690ILcC+u9gxKYZ8bg+XyyUwKdCUl49aiVq3ZlquPM4S7mp
qjMGgp3cjDuPpLDUHCj/uw6s5KKWeOMYS/V3FkxfA040udelAr7/3uzSs79E
b7+Wq/1MZOnh+NbB+WCNEt3OuWCdYNc4Hu6/8++8w9kEfL+6RiED3BCS3KUK
nuV3bJgS2vM+z6TjTzzi5Z77CgLwwbsTEhfEc/4AluiTI9A33nbXBeiPzvSQ
8i2x0GvvahtMxeNz2Iz5EMNSj8/LX5iBXTYLVRUPYn37bbDlJuYnaW5w4OCD
XPv+h08FuyzJBR+szc4bCK6bH3V1D3hxT/3cfdEsQSVZ/wSXZd1rL4uCv3Xf
fn0r5h/R2znzAOJBoXbzOPD6F8kdCyIx3zePFEfi/lnjCxwsIxDfwwdmHsL1
vQl5SZfCWRop7LlRtZPIpg+VvQpjqfu0h3F1sE9F92qVqlD4542EIYNgzybp
Gztu7mXp98E1yRHgE3P2Jk4MQf9+1r5wBTeFnVF138NSxUPDX33AfFstB5Xd
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
65cLBPT//17+/wBf11Hw
         "] -> {{{69.944275, 34.531586}, {69.925215, 34.546822}, {69.877474, 
          34.54681}, {69.829677, 34.523934}, {69.839064, 34.455345}, {
          69.858036, 34.402003}, {69.944023, 34.424888}, {69.963193, 
          34.455377}, {69.963301, 34.501104}, {69.944275, 34.531586}}, {{
          69.513652, 34.127553}, {69.59, 34.11233}, {69.666496, 34.158076}, {
          69.657057, 34.203801}, {69.62852, 34.249521}, {69.542565, 
          34.241875}, {69.513796, 34.188521}, {69.513652, 34.127553}}, {{
          68.985927, 33.037595}, {69.023977, 32.976635}, {69.08132, 
          32.999515}, {69.12915, 33.037631}, {69.157955, 33.10623}, {
          69.138968, 33.151952}, {69.091227, 33.151937}, {69.033921, 
          33.144302}, {68.995654, 33.113808}, {68.985927, 33.037595}}, {{
          68.832398, 32.717466}, {68.90875, 32.702246}, {68.975625, 
          32.717505}, {69.03302, 32.763246}, {69.033129, 32.808973}, {
          69.004519, 32.824209}, {68.947265, 32.839436}, {68.90909, 
          32.847046}, {68.842164, 32.808924}, {68.803882, 32.770807}, {
          68.832398, 32.717466}}, {{70.765678, 34.638497}, {70.775318, 
          34.676606}, {70.737177, 34.699458}, {70.708531, 34.699449}, {
          70.689311, 34.646098}, {70.717847, 34.60038}, {70.756023, 
          34.592767}, {70.765678, 34.638497}}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3d+3emJsb4DDykzxyz69Tg4HpS+tONAd4HBSbmGa
R6eTg/N/FnHtjgCHLWvT5n5sd3LoDshh9W0NcOi9tLTes8vJwYhJS8axKcDB
RrTg/GegerZd31i/1CL0250zSfxdHeDA8rxH422zk8O7N9r8l0oCHJqC5T3u
Aflqy7g3/ioKcGjx/PiRs9bJ4dZxrjrp3ACH8s8h7XdKnBxm7p42gT8rwMHR
s5HVoNjJYVZlkW9jSoBDZXnKGrNKJ4fZLPkeixMDHNYwK7x71ejksONsSIc7
kK/IxLfQq9vJIaPcw9AhOcBhUtyVd+HTnRyk55/8V5kW4MBg3i3OPR+o31Jl
a0B2gIPMuT9ZfIsQfDv2acopQD5vqOHUOiC//8jpyzuBfG6eyLuvihH8vSvu
rmeqQqivjZHWOgb0/zNlzZeJC5wcGEqZWe81Bzj0OexZFz/PyWHRlTiX210B
Dk/mSx5hn+PksCToTYZMT4CDfAZr25ppTg7HxN9+dOoLcGC+ONlo5WQnB/T4
AQC+Srdp
        "]}]}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Equirectangular", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Equirectangular", 
      "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        Polygon[{{{70.622058, 34.470795}, {70.564662, 34.425053}, {70.526486, 
          34.432663}, {70.517065, 34.486008}, {70.536214, 34.508878}, {
          70.574443, 34.52413}, {70.61262, 34.516519}, {70.622058, 
          34.470795}}, {{70.488546, 34.539349}, {70.431255, 34.539334}, {
          70.53636, 34.569847}, {70.550991, 34.581506}, {70.542007, 
          34.573115}, {70.488546, 34.539349}}, {{70.560738, 34.589275}, {
          70.550997, 34.581511}, {70.559716, 34.589656}, {70.560738, 
          34.589275}}, CompressedData["
1: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
Ahq1arXhYFz3piHN3xUFpL9yXZ6YB2n8VH48FPFs9Be+DO7n3RisOExBQBY/
qzuyMP7p99969xwkIOFnl45k8GY9oc/DgQJSvTU2PwB8ft5cra3go+PXMiPA
15r5S3bLCyj8RmnFGcynV/ZtUYgcN95g12LvzTP7C+jvqO9ZHwq4+NtHQLED
YgOnghdUGMSk9BbQkmlWnVfvIN7Y990kApemaedNv8P5G7jp7N98ddjb8+UT
oy/1FNCGr+uSvsA+PXYpFF/qIaDZDqm8b1jv9ly65HMOvH3CqlwlrIc+4oW5
u4A0b0xrr8J6qzUvWyegm4DCLg5g9MGzvob/3Ae+lrI8IR/r9c3rY7UE3bj1
Abx7bHnRRBkBjRZPBFjXR3VYVxdRoWVGQjD0QOaVxV7ZHUQ/fA9WHoce2Kan
OLQ3+M+ql9tjoQdq7t0ZZADGKqXsCz3i+ZDR3guua7zSfgv6Y0SU5pU08KXM
MV1PoV/USkddvdNONEklrcsrA/Fyx5GfVf+IvPuFVFRD72jKPtY52kakY3ao
cxwYKqtYH5wy9ELZAOijUfMFDX/B6Q8vqS2HflKJ+mn5BXxMf0dAZRpLTXop
g7rhfam9mg8vSGUpu+uh9ydc/ywbnpMGfTaV2RA7ASzxj7Ms8X3SLLeBKSWJ
3x36bh3C6no8X690ILcC+u9gxKYZ8bg+XyyUwKdCUl49aiVq3ZlquPM4S7mp
qjMGgp3cjDuPpLDUHCj/uw6s5KKWeOMYS/V3FkxfA040udelAr7/3uzSs79E
b7+Wq/1MZOnh+NbB+WCNEt3OuWCdYNc4Hu6/8++8w9kEfL+6RiED3BCS3KUK
nuV3bJgS2vM+z6TjTzzi5Z77CgLwwbsTEhfEc/4AluiTI9A33nbXBeiPzvSQ
8i2x0GvvahtMxeNz2Iz5EMNSj8/LX5iBXTYLVRUPYn37bbDlJuYnaW5w4OCD
XPv+h08FuyzJBR+szc4bCK6bH3V1D3hxT/3cfdEsQSVZ/wSXZd1rL4uCv3Xf
fn0r5h/R2znzAOJBoXbzOPD6F8kdCyIx3zePFEfi/lnjCxwsIxDfwwdmHsL1
vQl5SZfCWRop7LlRtZPIpg+VvQpjqfu0h3F1sE9F92qVqlD4542EIYNgzybp
Gztu7mXp98E1yRHgE3P2Jk4MQf9+1r5wBTeFnVF138NSxUPDX33AfFstB5Xd
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
65cLBPT//17+/wBf11Hw
           
           "] -> {{{69.944275, 34.531586}, {69.925215, 34.546822}, {69.877474,
             34.54681}, {69.829677, 34.523934}, {69.839064, 34.455345}, {
            69.858036, 34.402003}, {69.944023, 34.424888}, {69.963193, 
            34.455377}, {69.963301, 34.501104}, {69.944275, 34.531586}}, {{
            69.513652, 34.127553}, {69.59, 34.11233}, {69.666496, 
            34.158076}, {69.657057, 34.203801}, {69.62852, 34.249521}, {
            69.542565, 34.241875}, {69.513796, 34.188521}, {69.513652, 
            34.127553}}, {{68.985927, 33.037595}, {69.023977, 32.976635}, {
            69.08132, 32.999515}, {69.12915, 33.037631}, {69.157955, 
            33.10623}, {69.138968, 33.151952}, {69.091227, 33.151937}, {
            69.033921, 33.144302}, {68.995654, 33.113808}, {68.985927, 
            33.037595}}, {{68.832398, 32.717466}, {68.90875, 32.702246}, {
            68.975625, 32.717505}, {69.03302, 32.763246}, {69.033129, 
            32.808973}, {69.004519, 32.824209}, {68.947265, 32.839436}, {
            68.90909, 32.847046}, {68.842164, 32.808924}, {68.803882, 
            32.770807}, {68.832398, 32.717466}}, {{70.765678, 34.638497}, {
            70.775318, 34.676606}, {70.737177, 34.699458}, {70.708531, 
            34.699449}, {70.689311, 34.646098}, {70.717847, 34.60038}, {
            70.756023, 34.592767}, {70.765678, 34.638497}}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3d+3emJsb4DDykzxyz69Tg4HpS+tONAd4HBSbmGa
R6eTg/N/FnHtjgCHLWvT5n5sd3LoDshh9W0NcOi9tLTes8vJwYhJS8axKcDB
RrTg/GegerZd31i/1CL0250zSfxdHeDA8rxH422zk8O7N9r8l0oCHJqC5T3u
Aflqy7g3/ioKcGjx/PiRs9bJ4dZxrjrp3ACH8s8h7XdKnBxm7p42gT8rwMHR
s5HVoNjJYVZlkW9jSoBDZXnKGrNKJ4fZLPkeixMDHNYwK7x71ejksONsSIc7
kK/IxLfQq9vJIaPcw9AhOcBhUtyVd+HTnRyk55/8V5kW4MBg3i3OPR+o31Jl
a0B2gIPMuT9ZfIsQfDv2acopQD5vqOHUOiC//8jpyzuBfG6eyLuvihH8vSvu
rmeqQqivjZHWOgb0/zNlzZeJC5wcGEqZWe81Bzj0OexZFz/PyWHRlTiX210B
Dk/mSx5hn+PksCToTYZMT4CDfAZr25ppTg7HxN9+dOoLcGC+ONlo5WQnB/T4
AQC+Srdp
          "]}]}]], 
    "BasicGeoRange" -> {{29.814387000000004`, 37.271296}, {61.383405, 
     71.55603}}, "GeoGraphicsOptions" -> {GeoBackground -> {
        GeoStyling["StreetMapNoLabels"], 
        GeoStyling["VectorLabels"]}, GeoCenter -> 
      GeoPosition[{33.5428415, 66.4697175}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{60.87477375000001, 72.06466125}, {29.441541550000007`,
        37.64414145}}, GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
      GeoProjection -> "Equirectangular", 
      GeoRange -> {{29.441541550000004`, 37.64414145}, {60.87477375, 
       72.06466125}}, GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoScaleBar -> None, GeoServer -> {Automatic}, GeoZoomLevel -> 6, 
      MetaInformation -> <|"GeoMetaInformation" -> <|"Attribution" -> Row[{
             Hyperlink["Wolfram Knowledgebase", "https://www.wolfram.com/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] MapTiler", "https://www.maptiler.com/copyright/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] OpenStreetMap contributors", 
              "https://www.openstreetmap.org/copyright"]}], "AttributionType" -> 
          "Tooltip", "GeoModel" -> "ITRF00", 
          "LonLatBox" -> {{60.87477375, 72.06466125}, {29.441541550000004`, 
           37.64414145}}, 
          "PlotRange" -> {{60.8642578125, 72.0703125}, {29.42138671875, 
           37.6611328125}}, "Projection" -> "Equirectangular", "Software" -> 
          "Created with the Wolfram Language: www.wolfram.com", 
          "TileSources" -> {"Wolfram", "OSM", "MapTiler"}|>|>}},
  PlotRange->{{60.87477375000001, 72.06466125}, {29.441541550000007`, 
   37.64414145}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellLabel->"Out[89]=",ExpressionUUID->"338c9d85-631d-43fc-a97c-01c286e3331a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"ToTabular", "[", 
     RowBox[{"layer", "[", 
      RowBox[{"\"\<FeatureMap\>\"", ",", 
       RowBox[{
        RowBox[{"#", "[", "\"\<FieldAssociation\>\"", "]"}], "&"}]}], "]"}], 
     "]"}]}], ";"}], "//", "EchoTiming"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"bd7974a9-b762-4dff-af3f-e408612c7479"],

Cell[BoxData["7.965621`"], "EchoTiming",ExpressionUUID->"b58c624e-2a6e-4251-994b-a3499975c181"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["data"], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"85c8bb90-d4d4-47ba-a627-f2e9281196bc"],

Cell[BoxData[
 TemplateBox[<|
  "Summary" -> 
   TemplateBox[<|
     "RowCount" -> 7612, "ColumnCount" -> 16, "ColumnTypes" -> 
      Grid[{{"ID", "String"}, {"ID_ISO_A3", "String"}, {
         "ID_ISO_A2", "String"}, {"ID_FIPS", "String"}, {
         "NAM_LABEL", "String"}, {"NAME_PROP", "String"}, {
         "NAME2", "String"}, {"NAM_ANSI", "String"}, {"CNT", "String"}, {
         "C1", "String"}, {"POP", "String"}, {"LMP_POP1", "Integer64"}, {
         "G", "String"}, {"LMP_CLASS", "String"}, {"FAMILYPROP", "String"}, {
         "FAMILY", "String"}}, Alignment -> Left], "Backend" -> 
      "Tabular`Backend`WolframKernel", "UUID" -> 
      "Tabular-a73cfc06-6b4f-4aff-94cb-29b83815fc36", "Form" -> StandardForm, 
      "Interpretable" -> True|>, "TabularSummary", 
     BaseStyle -> (DynamicUpdating -> True)], "Main" -> 
   TemplateBox[<|
     "State" -> "LiveTabularReference", "UUID" -> 
      "Tabular-a73cfc06-6b4f-4aff-94cb-29b83815fc36", "CoreBox" -> 
      TableViewBox[
        Dynamic[
         FrontEnd`TabularReference[
         "Tabular-a73cfc06-6b4f-4aff-94cb-29b83815fc36"]], Expression, 
        AppearanceElements -> {"RowHeaders", "ColumnHeaders", "ResizeArea"}, 
        DefaultBaseStyle -> "TabularTableview", HeaderSize -> {3, Automatic}, 
        ScrollPosition -> {0., 0.}, 
        TableViewBoxAlignment -> <|
         "ColumnsIndexed" -> {
           1 -> Left, 2 -> Left, 3 -> Left, 4 -> Left, 5 -> Left, 6 -> Left, 
            7 -> Left, 8 -> Left, 9 -> Left, 10 -> Left, 11 -> Left, 12 -> 
            Right, 13 -> Left, 14 -> Left, 15 -> Left, 16 -> Left}|>, 
        TableViewBoxFieldType -> <|
         "ColumnsIndexed" -> {
           1 -> String, 2 -> String, 3 -> String, 4 -> String, 5 -> String, 6 -> 
            String, 7 -> String, 8 -> String, 9 -> String, 10 -> String, 11 -> 
            String, 12 -> Number, 13 -> String, 14 -> String, 15 -> String, 
            16 -> String}|>, 
        TableViewBoxHeaders -> <|
         "ColumnsIndexed" -> {
           1 -> TemplateBox[{"\"ID\""}, "StringTabularHeader"], 2 -> 
            TemplateBox[{"\"ID_ISO_A3\""}, "StringTabularHeader"], 3 -> 
            TemplateBox[{"\"ID_ISO_A2\""}, "StringTabularHeader"], 4 -> 
            TemplateBox[{"\"ID_FIPS\""}, "StringTabularHeader"], 5 -> 
            TemplateBox[{"\"NAM_LABEL\""}, "StringTabularHeader"], 6 -> 
            TemplateBox[{"\"NAME_PROP\""}, "StringTabularHeader"], 7 -> 
            TemplateBox[{"\"NAME2\""}, "StringTabularHeader"], 8 -> 
            TemplateBox[{"\"NAM_ANSI\""}, "StringTabularHeader"], 9 -> 
            TemplateBox[{"\"CNT\""}, "StringTabularHeader"], 10 -> 
            TemplateBox[{"\"C1\""}, "StringTabularHeader"], 11 -> 
            TemplateBox[{"\"POP\""}, "StringTabularHeader"], 12 -> 
            TemplateBox[{"\"LMP_POP1\""}, "Integer64TabularHeader"], 13 -> 
            TemplateBox[{"\"G\""}, "StringTabularHeader"], 14 -> 
            TemplateBox[{"\"LMP_CLASS\""}, "StringTabularHeader"], 15 -> 
            TemplateBox[{"\"FAMILYPROP\""}, "StringTabularHeader"], 16 -> 
            TemplateBox[{"\"FAMILY\""}, "StringTabularHeader"]}|>, 
        TableViewBoxItemDisplayRules -> <|
         "Columns" -> {{{
             Blank[Missing] -> (MakeBoxes[#, TraditionalForm]& )}}}, 
          "ColumnsIndexed" -> {
           12 -> <|Blank[Real] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]], Blank[Integer] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]]|>}|>, 
        TableViewBoxItemSize -> <|
         "ColumnsIndexed" -> {
           1 -> 5, 2 -> 7, 3 -> 7, 4 -> 5, 5 -> 20, 6 -> 16, 7 -> 16, 8 -> 16,
             9 -> 6, 10 -> 21, 11 -> 20, 12 -> 8, 13 -> 24, 14 -> 7, 15 -> 11,
             16 -> 11}|>, ImageSize -> {{666., 681.}, {258., 273.}}], 
      "Snapshot" -> 
      Tabular[<|"RawSchema" -> <|
          "ColumnProperties" -> <|
            "ID" -> <|"ElementType" -> "String"|>, 
             "ID_ISO_A3" -> <|"ElementType" -> "String"|>, 
             "ID_ISO_A2" -> <|"ElementType" -> "String"|>, 
             "ID_FIPS" -> <|"ElementType" -> "String"|>, 
             "NAM_LABEL" -> <|"ElementType" -> "String"|>, 
             "NAME_PROP" -> <|"ElementType" -> "String"|>|>, "KeyColumns" -> 
           None, "Backend" -> "WolframKernel"|>, 
         "BackendData" -> <|"ColumnData" -> DataStructure["ColumnTable", {{
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 7, 14, 21, 28, 35, 42, 49, 56}, 
                    "PAE-ABWNLI-AFGPHV-AFGBRH-AFGPBT-AFGPRS-AFGHAZ-AFGMLG-\
AFG"}, {}, None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 7, 14, 21, 28, 35, 42, 49, 56}, 
                    "pap-ABWnli-AFGphv-AFGbrh-AFGpbt-AFGprs-AFGhaz-AFGmhj-\
AFG"}, {}, None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 6, 12, 18, 24, 30, 36, 42, 48}, 
                    "pap-awnli-afphv-afbrh-afpbt-afprs-afhaz-afmhj-af"}, {}, 
                   None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 6, 12, 18, 24, 30, 36, 42, 48}, 
                    "pap-AAnli-AFphv-AFbrh-AFpbt-AFprs-AFhaz-AFmhj-AF"}, {}, 
                   None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   2, {0, 10, 18, 27, 33, 48, 61, 69, 76}, 
                    "PapiamentuGrangaliPahlavaniBrahuiSouthern PashtoEastern \
FarsiHazaragiMogholi"}, {}, None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 10, 18, 27, 33, 49, 63, 71, 78}, 
                    "PapiamentuGrangaliPahlavaniBrahuiPashto, SouthernFarsi, \
EasternHazaragiMogholi"}, {}, None}, "ElementType" -> "String"|>]}}]|>|>], 
      "RegionSnapshot" -> {
        Span[1, 8], 
        Span[1, 6]}, "DimensionsSnapshot" -> {7612, 16}|>, 
     "TabularReferenceWrapper"], 
   "ItemSizeConstraints" -> <|
    "ColumnsIndexed" -> {
      1 -> {3, 5}, 2 -> {3, 7}, 3 -> {3, 7}, 4 -> {3, 5}, 5 -> {3, 25}, 
       6 -> {3, 24}, 7 -> {3, 24}, 8 -> {3, 26}, 9 -> {3, 6}, 10 -> {3, 21}, 
       11 -> {3, 51}, 12 -> {3, 8}, 13 -> {3, 140}, 14 -> {3, 7}, 
       15 -> {3, 13}, 16 -> {3, 13}}|>|>,
  "TabularRef"]], "Output",
 CellLabel->"Out[11]=",ExpressionUUID->"20e8b484-b5e5-44fb-9683-990bd83d4dcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Normal", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<LMP_POP1\>\""}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Log\>\"", ",", "25"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"e3388161-328f-4e12-a8c4-a091cdc4e730"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.6649999999999999], 
    Thickness[Small]}], {}, 
    {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.6649999999999999], 
     Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 0}, {1.151292546497023, 117.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{31.377264284620097`, 49.60273799189815}, {
           70.85036613968926, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 117]& ,
        TagBoxNote->"117"],
       StyleBox["117", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[117, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.151292546497023, 0}, {2.302585092994046, 82.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{49.10273799189815, 67.32821169917621}, {
           76.3261564781272, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 82]& ,
        TagBoxNote->"82"],
       StyleBox["82", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[82, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.302585092994046, 0}, {3.4538776394910684`, 185.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{66.82821169917621, 85.05368540645425}, {
           60.21168776786697, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 185]& ,
        TagBoxNote->"185"],
       StyleBox["185", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[185, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.4538776394910684`, 0}, {4.605170185988092, 168.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{84.55368540645425, 102.77915911373232`}, {
           62.871357360822536`, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 168]& ,
        TagBoxNote->"168"],
       StyleBox["168", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[168, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.605170185988092, 0}, {5.756462732485114, 514.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{102.27915911373232`, 120.50463282101036`}, {
           8.73925858655032, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 514]& ,
        TagBoxNote->"514"],
       StyleBox["514", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[514, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.756462732485114, 0}, {6.907755278982137, 673.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{120.00463282101036`, 
           138.2301065282884}, {-16.136474665210613`, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 673]& ,
        TagBoxNote->"673"],
       StyleBox["673", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[673, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.907755278982137, 0}, {8.05904782547916, 1107.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{137.7301065282884, 
           155.95558023556646`}, {-84.0362748618411, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1107]& ,
        TagBoxNote->"1107"],
       StyleBox["1107", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1107, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.05904782547916, 0}, {9.210340371976184, 1079.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{155.45558023556646`, 
           173.68105394284453`}, {-79.65564259109073, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1079]& ,
        TagBoxNote->"1079"],
       StyleBox["1079", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1079, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.210340371976184, 0}, {10.361632918473205`, 1221.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{173.18105394284453`, 
           191.40652765012254`}, {-101.8717062498961, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1221]& ,
        TagBoxNote->"1221"],
       StyleBox["1221", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1221, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10.361632918473205`, 0}, {11.512925464970229`, 791.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{190.90652765012254`, 
           209.1320013574006}, {-34.59771066337282, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 791]& ,
        TagBoxNote->"791"],
       StyleBox["791", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[791, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.512925464970229`, 0}, {12.664218011467252`, 695.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{208.6320013574006, 
           226.85747506467868`}, {-19.578400020800174`, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 695]& ,
        TagBoxNote->"695"],
       StyleBox["695", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[695, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{12.664218011467252`, 0}, {13.815510557964274`, 343.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{226.35747506467868`, 244.5829487719567}, {
           35.49240566863283, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 343]& ,
        TagBoxNote->"343"],
       StyleBox["343", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[343, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{13.815510557964274`, 0}, {14.966803104461297`, 174.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{244.0829487719567, 262.30842247923476`}, {
           61.93265044566175, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 174]& ,
        TagBoxNote->"174"],
       StyleBox["174", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[174, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{14.966803104461297`, 0}, {16.11809565095832, 96.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{261.80842247923476`, 280.03389618651283`}, {
           74.13584034275203, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 96]& ,
        TagBoxNote->"96"],
       StyleBox["96", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[96, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{16.11809565095832, 0}, {17.269388197455342`, 55.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{279.53389618651283`, 297.75936989379085`}, {
           80.55033759635076, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 55]& ,
        TagBoxNote->"55"],
       StyleBox["55", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[55, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{17.269388197455342`, 0}, {18.420680743952367`, 24.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{297.25936989379085`, 315.484843601069}, {
           85.40032332468151, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 24]& ,
        TagBoxNote->"24"],
       StyleBox["24", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[24, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{18.420680743952367`, 0}, {19.57197329044939, 5.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{314.984843601069, 333.210317308347}, {
           88.37289522269067, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{19.57197329044939, 0}, {20.72326583694641, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{332.710317308347, 350.935791015625}, {
           88.99869983279787, 89.65515098532467}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.4144653167389282, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], "ChartDefaultStyle" -> {
      RGBColor[1., 0.725, 0], 
      RGBColor[0.24, 0.6, 0.8], 
      RGBColor[0.455, 0.7, 0.21], 
      RGBColor[0.922526, 0.385626, 0.209179], 
      RGBColor[0.578, 0.51, 0.85], 
      RGBColor[0.772079, 0.431554, 0.102387], 
      RGBColor[0.4, 0.64, 1.], 
      RGBColor[1., 0.75, 0.], 
      RGBColor[0.8, 0.4, 0.76], 
      RGBColor[0.637, 0.65, 0.], 
      RGBColor[0.915, 0.3325, 0.2125], 
      RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
      RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
      RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
    "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
    RGBColor[1., 0.79375, 0.25], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRange->{{0., 20.72326583694641}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}}, {13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {20.72326583694641, 
       FormBox[
        TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.302585092994046, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.210340371976184, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.512925464970229`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      16.11809565095832, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      18.420680743952367`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      23.025850929940457`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      25.328436022934504`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      27.631021115928547`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
     Automatic}]]], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"9cf91555-041c-4cf2-a7f5-82dc432208a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"polygons", "=", 
    RowBox[{"layer", "[", 
     RowBox[{"\"\<FeatureMap\>\"", ",", 
      RowBox[{
       RowBox[{"FromGEOS", "@", 
        RowBox[{"FromWKT", "@", 
         RowBox[{"#", "[", "\"\<GeometryWKT\>\"", "]"}]}]}], "&"}]}], "]"}]}],
    ";"}], "//", "EchoTiming"}]], "Input",
 CellLabel->
  "In[164]:=",ExpressionUUID->"2f503503-fb9e-402a-ba90-8c3a8e7f439f"],

Cell[BoxData["2.543673`"], "EchoTiming",ExpressionUUID->"9d69689d-82a0-4366-b67b-6a30cfa4ace0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"geopolygons", "=", 
    RowBox[{"layer", "[", 
     RowBox[{"\"\<FeatureMap\>\"", ",", 
      RowBox[{
       RowBox[{"GeoPolygon", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"FromGEOS", "@", 
           RowBox[{"FromWKT", "@", 
            RowBox[{"#", "[", "\"\<GeometryWKT\>\"", "]"}]}]}], "/.", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a_", "?", "NumberQ"}], ",", 
             RowBox[{"b_", "?", "NumberQ"}]}], "}"}], ":>", 
           RowBox[{"{", 
            RowBox[{"b", ",", "a"}], "}"}]}]}], ")"}]}], "&"}]}], "]"}]}], 
   ";"}], "//", "EchoTiming"}]], "Input",
 CellLabel->
  "In[108]:=",ExpressionUUID->"3dc84558-2a66-4086-a46f-a98f8aee58f2"],

Cell[BoxData["3.158882`"], "EchoTiming",ExpressionUUID->"069c19a2-8410-426f-bc55-f97a1418a6d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "@", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", "polygons"}], "}"}], ",", 
    RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[165]:=",ExpressionUUID->"70dc1825-1fbc-4787-a9ac-35f608a23139"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvdt3FkX2BjwzMr8ZxyMjCogIKKigQAQhMiiHIRwCBtCMYIRwhiSLoJIA
isSB4ODIMBzXsFC4yMW4dLFYchGuZ6ks1uKmvc1/0H9Hf8/Xz9f726nqrrff
U943oZ6LrDfd1dVV1VW79lN7164Zez5+78DvfvOb3/T+EX/e2/3pyp6e3cdb
n8Q/73/U29Xx0f59zR8d2d+xv+fNPQ/h4i+//c1vTo37zW/+39+Rh4eHh4eH
h4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eH
h4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eH
h4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eH
h4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eH
h4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eH
h4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eH
h4eHh4eHh4eHh4eHh4eHxwOAMEatS+Hh4eHh4eHh4eHh4THG8b///e/MmTOD
g4Oegnl4eHh4eHh4eHh4eFQP4Fzt7e3ffvttEAS1LouHh4eHh4eHh4eHh8fY
h235yrKFeRuZh4eHh4eHh4eHh4dHpfC///3vX//614kTJwYGBuy7//3vfw8e
PDg0NDTi5fLw8PDw8PDIBe/T4uHh4TGKEIbhYAxHgpEsj4eHh4fHGMaPP/5Y
6yKMQfz3v/+tdRE8PDw8CiNMMDQ09L///a/Wxakj+Nbw8PDw8KgSvEOFh4fH
A4swA0GC/8YYHBz817/+dfDgwV9//XXU2UEg5Fkjo+T49z//+c+3336Lqn3+
+ef4u2fPnjt37rDiuHvq1CljgpDG0W01srUZIaDip0+f9vOjh4eHh4dHfQLa
CLSXsaqHeHiMJYBAgWUcjNHa2oqRu3Xr1oPDQTJCVoJ/GxsbkRI/+CC9izVT
GxyOOomqx+KBPB4+fLitra27u5sGHS2pwLBw68yZMyBiUeKDh0euX7+O6oN9
nDt3DneR7NsYrCDyMeorwLu+++67MksODtjX18e3sHkvXbo0kgIWr2Yt/hdD
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
zSBf/08I32XmcnBY/MBsg4kIs9+mTZv27NnjvMMeceglhqs5I01xsSh8zhel
QOTimN6yKw7cBocYgMXO3szEoy9dunTr1i07dBjIJr4Ct6g94vguwHQ2JJQg
kQf0Sa2oKpB/+QH3gVibTJcSYBgcMkxB8rZMZHwPrYlIA7Kw2fA0YTC9uCkl
uZempqYMY2Ncj1nCvjJXwlusyYSDR/OvSL2nuFPNKvSjRauF43/+858VFRWN
jY2gIZLZylemBfTkkhvlE8BQ5MWS8sB+KGMP2va39AjmQVbCZeO9996D2LNl
yxaQJpZPxZzBc9nz+NV4+8zMVVZWBiKJckpLS5ctWwYS+sQTT3R0dBw7dqy/
vx+UEByKEVS++uorPOiFF17AU8i/vCAs5JNPPrl+/frHH3+cychYuGhg0WlP
P/20s4d3cHiIce7cOXz+tQEcC3PQ6OnpqaysbGlpKXB/NesSWSyJBasb+BQW
NdT5r3/9K6ptLJ0QAo0N+UhTMYdHDRCHMAySo68nIGEUiZIXhUMA4xwrhC4n
dRIeAf5lRHtLAwYu0NM7s5Anf3dxuyK4Nw+rCQirxdWF0bwwbs1KCBVCRKrd
cTLSsgtPmfvAsBw2YnwopgLSLupE8h60edSHimDDLn1gYODNN998+eWXm5qa
Ur5fRlLyg00JqsMYO10McnQWPDARXhz3rnMdVLdv30Zt9+3bB9oIsYdBJhlf
UT+CdpIPHjxA+aKAY8Xu3Llz5MiR1atX429JSQmY15o1azZv3ozLysvLJyYm
sG5iGXrsscfQM7hmyZIlVVVVfBAfgUYdOHDgo48+Muxg+eulS5dQ1GuvvZZT
uxwcHBYd/hXA2SI+4qAMqbVdWGVKS0uxTDDCbSElx/1ErQFWuiKSoHv37vnh
1mhkJhQsbTjvQj85GMhjL93PxRsLQheDVP89hO2KlVw9yN4MTZN+r8yI4CEm
iMnReJIblav7sNDMIlokMg10wvvK2sBIrVZvb29k9TIpvP+KNYl5YXh2Tc+l
OTygmxUogxFlaLZht5HRCzGoslrnUoHLiIUck/ThwpBubm5mnmXm2GKcQ1Gl
TQe5kmkDbJSZn5My7gJ7+t3vfocFDoOZYT1Qvn7FOL9q1SoQK5o78iS3MlDD
559/HpQK5Gv58uWdnZ2o/+XLl/1gn2Hv3r0vvvjiq6++umzZMnROS0vL0qVL
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
aEvr5s2bTF6cYXpiLpMPO/okB+iZUDzUyIyMjKKiourqalvknxngqZNMY+0w
YrwfRWpaRZN+H8tfYOfpq6hebW1tcW2lhouSkhJEAEpFh0dMgntecYHoKbuB
csUqm62SEJmu+/TpU2rz/D0yimlHySiPsa2QPbD4lzaDQjelkpDrma2NfBBy
OrNdDKQYZS8kyxZoQu5UiWMYjhLRMA6ipTydXj78WrEvRI5+/PHH6Cg36Acm
Smyf6cX2vBIEJ4nLv2bAmKB02zIyDJ7nPehlGsXWxi5d+v79+9bxtP42ie9B
Ef537doV10u3q6uLkxRQNJvQn6vJSysYCYJtioiBrVu3btiwYceOHZs3b1bs
Uzj7hMW3pKnK/2KOBjPY7MTBwcFhBiDJyZGRHE318uXLy5cv37Rp07p165ia
TZ+xRebfYnm1NPOaCmqpu5ivZbwxA5QTQ09PzwxY656RQDtS/Ar1vevXr3PG
SAdaE5pSVlaWVC9UdzgFBTg4ffp0vw/O5OXl/du/ArqEOPxPDN3d3X19fbAn
GRzeuHEj2hIRKx3LaosmlZeXX7p0SWLy7t07iHxjY6NiHp47dy5IlHQ5n7Ip
im5+abmempWeKbibJlBnR0cHYmsbXrTzg+vzimtqeXItcIc0z5AUWxpi2zQZ
PzGPerqhY/M4tE3mmvyzcmpj1OIk/0tcFy1FIKfkUGTZaJfFLUlQxosNhtGt
k+mIQT+x46CfqcROmrNh6P/VX2/vYeqP8AMDA/xN8CZIEwQzFFkFCYLR/OMf
/1AiMBO6qDVpe3s7l69cufL48ePMjJmZmdQJp+O8Bb0Z72dhDjp79qzyrIEZ
tsjp4ODgMGvBjPP5558fOXIE3bWoqGjp0qWFhYX79+9P0qqfWUzhBVB1mM74
ZKZQTOAZAD3dZLdiBoKuBQ1B9xtZkH9Fw7PAFKjf93wE1SE0dvnR0y25C5dA
K4qLi7u6uv7sIxRwRpD9VfCMaVn8BGcRXRLQhXgEeJPtTMnWl/JPnjxBW9P6
OWxIoREF2mnalNQ/L7YRgxzpJ+7FgeVm0t1RGpU0Vo0UeC5YJOSLGg4cOAB/
RH4/GGpeFn1xFUiENxqvI3omyDrHHKFwEGi8tbW1UFqGKQV+t1bxE39x6H8c
9DO58xcwHP2vnzUs7l2C3Coab9+gCBtKDD2TVmPovbwoC8L/m58QTbSCh/3f
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
MpTiXh90N0ORo/7Hjx8HT0LHMjIyJjL8l8OIwfSHQoJyAtEIhSJHw5fHhDJh
QU/0eebMmYaGBrpHfn6+SIHnz5gy7/F8W7ihyBQdj2uhNmfPnn348CGsAbpx
6dIlKJuxvChu3Ljx0UcfcUfl3oK8iCRCtSysBLUtW7ZMmcgOHDhQW1tLV4SM
FBYWwr94QB5Hobeu++Cq+vr6nJwcpINi3EJRbngPCg6v2CO7du2Cov7mJ4nW
xp8i4eu+CslIbUnGUuPuyiuh9OX2yKJdor1ebGFE/pWSU77SMG148XQ0qbKy
EmrM3yHrShp/7949HpaXM1RWPgvrkcD/K3pJ3L9ypobdSByZ7YOAdimZHX8K
HSaUC3sCEE0C/kHQVARQ/Esdb4LzKSeGVi3+8z//M3gmQXllxw69dqYkhaYs
KSlZvHjx1q1bDx48KJOSMWnkFN/BGVmXHoxlyhjj1vwrhgpAxP84MQFSHBwc
HBLD/LBkLphgDkK7swxiipghMmW5WsxLS8qGjXWy0TJTq+AS92AMQUMmJYdl
UoO4BfkgqmBaWhqT+NRcTXWIgn8KdRHt/cGDB7/88gvqBB0GPZ8DVMqVK1ea
giFbOFnBQccUjp5fIVAKAaFPnQ+C84cOHYK7QXmys7P/8pe/wN3QhZYvX15U
VJSZmanghFGNiMplRkh7YILy40BdhMHRkvnz51PD/v37586dW1pamp6e/omP
jIwM1DD4HYyJwopsj8ZlsqPcCtyO3qt8WOiuUtLkNWaxBHVHL+CrJe6GfLW2
tko/TJKPcHnQj1I2kLwHM8VRRETz1fL+daeJ8qj369ev1z41D5WVlcU7ERlU
5EldHrqv0kb83xiSVDuHIl8zePOLzj/KtXctf1n+66n/opD9/9cHwsIgIP4+
dYxL6fAIY0pKSm9vr84kbtibN29sl1zguKOjQ6PW6tWr9+3bx8muri6rcJSY
Ii/KS2L1YLh9mwp5n6Nr1MjhdsEcHBymAowBJVNYoeOZuWTIdOfOnUePHuly
9EY55ssQC+1U0Rfl7fWdj//nXyFdgvMWYUPxwD1f2dBMHZyv371719LSwlRO
zWjvU2d6ckgA/iY6CXqONoAAvGDr1q1oLHCcZ8+eeb4yWVxcLKoF9YCn3Lhx
w/ODV0AB0HC4RPxFu2a6ysDJhoaGbdu20UO2bNnS5OPjjz9esGCBciXLps64
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
gZJ8eb634+nTp6XuIoZNTU2ykETJRLsoLy+X+NBOLZJQ244dOyBrMpJURB2l
xFVkDA5QTS02DjKF7mrCizi/ePHCHj8UiJ7z/+aDJ0XkaQkvx60wz2yIoVuX
ePPmTX19vXqFUnjbFiolOf73f/93Kb3ffvvtmjVr5s+fTx9LfnCm+9Gx09LS
li9ffujQIaYb+RrLNUxyITt2ujHC2NraumDBAuSOu0C76N51dXWIQGpqKiLA
AW3T9nT0XnF9okNYv359dnZ2tJNz7dy5cxUARIsbDlMNWk2a7FY4ODjMFvzy
yy+odraCzZyowOxebEdJamFcdzCRIE2pg7FY9Mw+GRkZ6IHMd0yOTGQUY7Jj
UistLVXgay9mFsX0x3yUpDGS+FfylksUs9yXeha71vEvh+Hi559/LisrC27L
2qpFcImAY3p7MIo7EiRnf2XFkicXhAtND+UT6auqqlJsDTRJpC/oPKItM8U8
7O3t3bx5M5XLalEqIpeIkWmdX7EyKCB3M/RAUbCTJ08uWbKkoKBA4sxd5P+l
PE1UQnmUUlpFyxFhWCFkTdmRUEpNZs2vTVBwA/sa5F8cUDnkiwZ0dnYypLjV
y9kATQe2iKewTozDEhZEQGauKsyve/fu7erqUvegH+bk5Fy+fNnsWhODMlxL
/8zNzUWmVq9evW3bNm0z0fN7enr4CUnh6+eff05XVNIxhcThJ9nf0u054JOf
KKnyFH706FHwXpoZFVa0r6/P+nlw7QWRycvLa2hoiDYV4YV/ZWZm5ufnU4mb
faYgZqc7qoODwwRDfESmRNpO0nkYU0tLiyJQiVKJs8SNDOzFnCJlUoV2d/78
+ZSUlBUrVnzxxRdBjiP35+vXr1O/Ft5l6dHW1jYsKhR0+EoGaJ7GHxW4Xk/q
+JfDcIHqKHkRglECjFnQ3+AvCrwmGoUeGKRUXKjtAGgXV0HoFKJQvwb9iznW
LpgFDJQLFbWhwsn/q6OjA7FCs338+LGW3GmhQtmgkXIhqi/N5njevHlZWVnw
IBE9JDF4I0U+lB6LLrrHB5qkgocDFEuZDVOnre3zUNo1s6qC/MvzY4/QPIuT
P8b/x3TGDH4bdAClQjChkLWt+o9JkJWnWHFx8aZNm+i0hYWFixcvXrp0KQd0
3bj1Q2Ts7XEj+NfKlStliPvgwYOtW7dCu97H8pXQP+nPdGwZGdbV1cnbi2Ly
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
gERUVVWhF0FetAV84cKFb775hg75/Plz+WSJHCmRkMK+cRWCVlNTg+D8/e9/
l0MKKt8H766qxHFEdsSAZHNFS977SZOtPEKhxRBOXr58udgHJS0oIpcoHnh0
Fb26upoysEhr+aCfOIlPFFG00KAAivQFFV2KwfgGBgbKyspG/dYdZgK0gmdf
gymWHj58KAdJBUW0VA7DCk777t2769evK8SosndJKPikWyr9nDIyi2EpIged
nAOKcSDRqK2tjfoCcyGESBKHTOkk4qAE5QqE2N7ensxWnSY+z3eKjP5KDcuX
Lz958iTjiWLmK4oOz8Wve/fu1S3UBgUs1YLPmHAEXh2vMfnys2T3LRjhdvYs
mDg4OEwANM0x9jLIaxL89ddf/yOGYMhoFCpUR8pz0NjYKA8X9M+4g1IC/iXd
VXm4kmykRZqKOymbcpj0Qzs4jATWY1EgFSeN2RnOJZ6CIscZFLxrPqQgdftA
TYK5dHR0oCXeu3dPChWalWIFyBTqg5O7HB61sE/5AwcOSKWUUxiUh/pVCb/C
oeT5xa9nzpzZt28f+pvShMl2URtqtC10X0rSPC7XmoZc1ezxQwsdCJ2eBViC
MOVYR5VVRl0HBw3g1h8Und7zt1OZC4LrBobglhl9OMHwDmuQ96UmAtuH0tKE
xQ6VsHixrWTkdOHChXRU+i31I4ZKDB2tn8IHDx5EVLOyspApZF/TkDJHI1x8
LS8vR74GY8nOhmotN0JOHz9+HPd5+fz666+PHz/+u9/9bsuWLUePHvViG3li
jsb+aCdVyfbDwgHp8ZPfNAze14tF40w+NNbsiVDBn66OwfNqMWqyW+Tg4DAT
YIwGFZEJiBFeBkXKmGymIPLAUnnA1Pbw4UMZHEaHI8Yo9Lq4gzMnUedGMIIl
NneP+1OS6TsdHJKEtl9lrDsYCymDPmb5ucDGjRsrKytXrVqFaidLRQWxAfyK
Iqe0y9IARYhsMysBxOykTBYVFUG+bIVfdlNUxb0QrhcvXijFs3Q2WB6aYUVF
RVAWtB1AkzZv3qzFc6rlwvr6+tTU1FOnTqGUmh+KDQLawgu26rvvvrNfZWDJ
MMIDct/nz5+P2Xt3mP5Q/mX7qn41FOvRHGR7zfI0jDuYc21/f79xEDqtlj70
K2REFobyU1bOZfEvpAZK1djYqOCi2dnZQy0X8GtDQwPt3LZtW3V1tZiXdqPM
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
FBI5iKWmpsofHw1Ty8Vom+hI6mBKhKS1EcSwuroaVQo2pFTOWicZGBhQAENb
/UYF+n0M6EKUkSWw4rDV1tZSGLVWnT/ubi9XWewONEyaR7PRPz1f7rhKaQEL
Cwv37dsHs+NkTk7Oo0ePxv0tO8x0yKLvz3/+MwSfruX5Bmx0eFnFj9MdP1im
tLS0tbU1NNQrhTpyVFZWdubMmXFqXjKQR4ACJMqhWx7cvEb412ofRUVFfCLa
2dnZEC7l+8vKymJMkCzn5uY2NDTAJdeuXQsF+/HHH/VmLIJW8I62H9fX16cD
BhkuFHGL+0qDw6CDg4ODw/t/zYnMV+12Md8prDRqG0O6tooUj8JCaselHvfv
35cqqEX75P1wbT3fglYlMAWMBmYcFhR5I3qtVZhg84vZzcLQDWXu6DDboD1W
27EK7nkFYeehM2g+KC30Ja3wK3aiYmhoJ1reZEpE68V2uNB8lOs8bjMsUj1i
e/r0aUWTk6JIX0WoLWq3LTVEI3ijiVm2aL4ePnx48+bNVCuJa25uFvuTrxmt
GvQzfzmPe4cRIxSMQvYJikehWWBsl7mGtb1CYxAcSEpBQUGwGcg7Igw1g3Ts
3r2bpmrLe6xgcXqD8+DXX389VHlEXqRJwtvb20uD4Vzr1q3L8sExI8OzZ88g
XzU1NfAvvopAKUcYJTn52Wefwb/gYnIxYMBRghhtfPMpb1CJP8OCAvgUFxfD
AaFvcU2RqWTXrl1JzpVjFYzRYcZjqtldODgkCYZNBaAIxlz6n//5Hxkicnzs
2DHFo9AKGFqi8q56MVcpxa0NLY7Z1phyZSbZGM0yin2hEBkJYsh7sYhSo9n/
ip5Elnn8YGgC42IqL8ppGTP11fEvBy8WPBMlrampCTWMT1GtECAvcu6wSIZX
r15VyBrlR0Z3ohNWVVVBlFRSsRDNyQsZgbshpFEVhfJyyEI2IWjIEWqhOBQ1
yJCYg9CSS1CIZHgsE0rlPOJTe81chT4mO0ZtvcldlDoVXnti3nMUurVT2KY1
ouSdM9u3b6czV1dXM08lP5XEVclCJ+OalycA/RzRg3cEE0B4MVMQrZx4Y+3o
pFXQDRs2mDsYL4F7xY2RGGwS44PMEffu3btjx47c3Fw+09PTFy1aJNFeu3Yt
bKizs5MhizJcwkDBVfPmzdviY86cOUuWLPnkk08UVkjTHCW59RdffMHoVFlZ
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
y9RZTXP16tVvvvnGXVaqbHtE9VNQbhQhlhibDRJmF+Jrrs+7+otO7D09Pdyr
gkEHw5Arshgm8ciRI5gx4m/k/g4qL8brcGPXW+wOm/EmDIHoOeazsKVMiKJx
rU7csmEaBzOlBWWLK8FsXzymSTh3dnYW8y4ufbMk3nKAYL9j77hy5Qo6Gl5D
f0HF0FZlO848P6Eejvf29rr5mlFDOB6ItQdTso6ODkjCzz//3PPXK2h3ixme
8E2LG7zoKnn9+vWArdC0mDqsqAmePXt28+bNl19+mXFyaPOipQl/MQ5OTk5C
f2X9FHtr1649ePAgOmA6nWbYDXQE6+x8FKAYZBeHVDwNOCBCxAX2bCYBF8VZ
OB1dG41h8nT7lPYvPHbK/IssOfh5X3rpJXrmQGm2tbXp0SGEqGmYedniZlAB
4S0jz7v6i48+d9oZNmMxyi79z5mymRl/3CuatYu6yeI1MaBHESvtdq4eyKKM
cDaFv9RHrmMhXhetSjDLwnSIrkfcMmZ2K89Jhs67mp9iFjc+Po63Q0NDeE2D
WtpndHQULdm5cyfzaqVSKSgy/EWZTCaD8vM5jhw5wi+1Zs2a3/72tzjLkrCb
uox0ROzp6Snip8MzhFovYEPHN8KFrl69iiapz4qaYP/+/biTP/nkE4YzzeYy
qvPuxZHXX38d/RoDH9/SO9GNKfr2228HDNOuYz997xlFgSGFP//88+T7v8xp
P3LztRsFqHbB9/rJT37ywx/+EFr4us+ytWhwYpak5LL9ibzl/d1FDeE+sedy
uZXNs52+T3iA37lz50sf99ywXLKIiOHK7RSeRdEUSDomlgm18nhkaAuKCBpu
7EURX8GCurvugji+YcMGCBPur2xqamI3nJqaoixielZzemTyr40bN0J8cePY
1q1boemgudavXw8thgIof/Hixf7+/jNnzpw9exYvPv30U36dCxcu8KyAT6CX
M/OZfQ1/CzJRMXAWWgWth+t6ue1ygWyDKICvJv9DUSucOnVqx44d7sgY6BS3
b9+GCLLAoRbe0LaLspjb4wICzV2j+OMf/7hp0yb6OiYhvodiEK8PQ/PMzAx+
E04eLGPa8iQm02I8dbYZMIbw7cEukE6n852CYbHQ+NtCLCp37961+afnPwNd
e1bkPq8YzPjlObtXuEnZQrrF1OluLivOWCaqhKJHkKWHmYjtec6gGe6R5NC/
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
61Q=
    "], {{0, 224.5}, {576., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 303.73502783178833`},
  ImageSizeRaw->{576., 224.5},
  PlotRange->{{0, 576.}, {0, 224.5}}]], "Output",
 CellLabel->
  "Out[165]=",ExpressionUUID->"7652e4ab-dffc-4098-a7b6-95ab42260816"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 2", "Subsection",ExpressionUUID->"093a0e0a-2a69-4190-bc44-c5f51982c976"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "=", 
  RowBox[{
  "GDALDatasetImport", 
   "[", "\"\</Users/christopher/Library/CloudStorage/Dropbox/UChicago/\
projects/districtingDynamics/rawData/ma_2020_gen_2020_blocks/ma_2020_gen_2020_\
blocks.shp\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.924297238587538*^9, 3.924297252374502*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"b39ecbce-0635-4301-ba24-2b027ead5b4d"],

Cell[BoxData[
 RowBox[{"GDALDataset", "[", 
  InterpretationBox[
   RowBox[{
    TagBox["ManagedObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GridBox[{{
                TagBox[
                 InterpretationBox[
                  RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"137e0c9f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 5232445936, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"137e0c9f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 5232445936, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                  OpaqueRawPointer[5232445936], Selectable -> False, Editable -> 
                  False, SelectWithContents -> True], "SummaryItem"]}, {
                RowBox[{
                  TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["True", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GridBox[{{
                TagBox[
                 InterpretationBox[
                  RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"137e0c9f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 5232445936, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"137e0c9f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 5232445936, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                  OpaqueRawPointer[5232445936], Selectable -> False, Editable -> 
                  False, SelectWithContents -> True], "SummaryItem"]}, {
                RowBox[{
                  TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["True", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Freeing function: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib\"\
", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", 
                    "GDALClose", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[5420242264], 
                    "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Base value: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"137e0c9f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 5232445936, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"137e0c9f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 5232445936, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5232445936], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                   "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ManagedObject[
    OpaqueRawPointer[5232445936], 
    OpaqueRawPointer[5232445936], 
    ForeignFunction[
    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", "GDALClose", 
     DataStructure[
     "RawForeignFunction", {
      "FunctionPointer" -> OpaqueRawPointer[5420242264], 
       "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "]"}]], "Output",
 CellLabel->"Out[17]=",ExpressionUUID->"459c489f-e22a-4bb8-8489-b38b7deef65e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "=", 
  RowBox[{
  "GDALDatasetImport", 
   "[", "\"\</Users/christopher/Downloads/tl_2024_25_tabblock20/tl_2024_25_\
tabblock20.shp\>\"", "]"}]}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"d7208f95-8231-4faf-a6c9-2db7d09b59dc"],

Cell[BoxData[
 RowBox[{"GDALDataset", "[", 
  InterpretationBox[
   RowBox[{
    TagBox["ManagedObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GridBox[{{
                TagBox[
                 InterpretationBox[
                  RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                  OpaqueRawPointer[4960866896], Selectable -> False, Editable -> 
                  False, SelectWithContents -> True], "SummaryItem"]}, {
                RowBox[{
                  TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["True", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GridBox[{{
                TagBox[
                 InterpretationBox[
                  RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                  OpaqueRawPointer[4960866896], Selectable -> False, Editable -> 
                  False, SelectWithContents -> True], "SummaryItem"]}, {
                RowBox[{
                  TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["True", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Freeing function: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib\"\
", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", 
                    "GDALClose", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[13799413080], 
                    "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Base value: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[4960866896], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                   "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ManagedObject[
    OpaqueRawPointer[4960866896], 
    OpaqueRawPointer[4960866896], 
    ForeignFunction[
    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", "GDALClose", 
     DataStructure[
     "RawForeignFunction", {
      "FunctionPointer" -> OpaqueRawPointer[13799413080], 
       "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "]"}]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"08f8b22b-58af-47d0-be6f-65db030b50c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rawSHP", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\</Users/christopher/Downloads/tl_2024_25_tabblock20/tl_2024_\
25_tabblock20.shp\>\"", ",", "\"\<Data\>\""}], "]"}]}], ";"}], "//", 
  "EchoTiming"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"f050c9d1-f8f4-45af-a6e0-d8cf9d214590"],

Cell[BoxData["11.764015`"], "EchoTiming",ExpressionUUID->"d8f75077-f823-45e2-9614-4b668e1234a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"rawSHP", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "4", ",", "2", ",", "1", ",", "2"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"5c81eae6-4dd3-4f52-9a5f-49dccd33ab55"],

Cell[BoxData["107278"], "Output",
 CellLabel->"Out[18]=",ExpressionUUID->"ad707651-1f0e-46c1-94b8-6edb868502e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToTabular", "[", 
  RowBox[{
   RowBox[{"Association", "@", 
    RowBox[{"rawSHP", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "4", ",", "2"}], "]"}], "]"}]}], 
   ",", "\"\<Columns\>\""}], "]"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"fe033a19-3c27-4039-be4e-373d4546203c"],

Cell[BoxData[
 TemplateBox[<|
  "Summary" -> 
   TemplateBox[<|
     "RowCount" -> 107278, "ColumnCount" -> 17, "ColumnTypes" -> 
      Grid[{{"STATEFP20", "String"}, {"COUNTYFP20", "String"}, {
         "TRACTCE20", "String"}, {"BLOCKCE20", "String"}, {
         "GEOID20", "String"}, {"GEOIDFQ20", "String"}, {
         "NAME20", "String"}, {"MTFCC20", "String"}, {"UR20", "String"}, {
         "UACE20", "String"}, {"FUNCSTAT20", "String"}, {
         "ALAND20", "Real64"}, {"AWATER20", "Real64"}, {
         "INTPTLAT20", "String"}, {"INTPTLON20", "String"}, {
         "HOUSING20", "Real64"}, {"POP20", "Real64"}}, Alignment -> Left], 
      "Backend" -> "Tabular`Backend`WolframKernel", "UUID" -> 
      "Tabular-8137205b-270a-4c68-be6a-da8c17383f65", "Form" -> StandardForm, 
      "Interpretable" -> True|>, "TabularSummary", 
     BaseStyle -> (DynamicUpdating -> True)], "Main" -> 
   TemplateBox[<|
     "State" -> "LiveTabularReference", "UUID" -> 
      "Tabular-8137205b-270a-4c68-be6a-da8c17383f65", "CoreBox" -> 
      TableViewBox[
        Dynamic[
         FrontEnd`TabularReference[
         "Tabular-8137205b-270a-4c68-be6a-da8c17383f65"]], Expression, 
        AppearanceElements -> {"RowHeaders", "ColumnHeaders", "ResizeArea"}, 
        DefaultBaseStyle -> "TabularTableview", HeaderSize -> {3, Automatic}, 
        ScrollPosition -> {0., 0.}, 
        TableViewBoxAlignment -> <|
         "ColumnsIndexed" -> {
           1 -> Left, 2 -> Left, 3 -> Left, 4 -> Left, 5 -> Left, 6 -> Left, 
            7 -> Left, 8 -> Left, 9 -> Left, 10 -> Left, 11 -> Left, 12 -> 
            Placed[".", 
              Offset[
               Quantity[-4.75, "Ems"], Right]], 13 -> Right, 14 -> Left, 15 -> 
            Left, 16 -> Right, 17 -> Right}|>, 
        TableViewBoxFieldType -> <|
         "ColumnsIndexed" -> {
           1 -> String, 2 -> String, 3 -> String, 4 -> String, 5 -> String, 6 -> 
            String, 7 -> String, 8 -> String, 9 -> String, 10 -> String, 11 -> 
            String, 12 -> Number, 13 -> Number, 14 -> String, 15 -> String, 
            16 -> Number, 17 -> Number}|>, 
        TableViewBoxHeaders -> <|
         "ColumnsIndexed" -> {
           1 -> TemplateBox[{"\"STATEFP20\""}, "StringTabularHeader"], 2 -> 
            TemplateBox[{"\"COUNTYFP20\""}, "StringTabularHeader"], 3 -> 
            TemplateBox[{"\"TRACTCE20\""}, "StringTabularHeader"], 4 -> 
            TemplateBox[{"\"BLOCKCE20\""}, "StringTabularHeader"], 5 -> 
            TemplateBox[{"\"GEOID20\""}, "StringTabularHeader"], 6 -> 
            TemplateBox[{"\"GEOIDFQ20\""}, "StringTabularHeader"], 7 -> 
            TemplateBox[{"\"NAME20\""}, "StringTabularHeader"], 8 -> 
            TemplateBox[{"\"MTFCC20\""}, "StringTabularHeader"], 9 -> 
            TemplateBox[{"\"UR20\""}, "StringTabularHeader"], 10 -> 
            TemplateBox[{"\"UACE20\""}, "StringTabularHeader"], 11 -> 
            TemplateBox[{"\"FUNCSTAT20\""}, "StringTabularHeader"], 12 -> 
            TemplateBox[{"\"ALAND20\""}, "Real64TabularHeader"], 13 -> 
            TemplateBox[{"\"AWATER20\""}, "Real64TabularHeader"], 14 -> 
            TemplateBox[{"\"INTPTLAT20\""}, "StringTabularHeader"], 15 -> 
            TemplateBox[{"\"INTPTLON20\""}, "StringTabularHeader"], 16 -> 
            TemplateBox[{"\"HOUSING20\""}, "Real64TabularHeader"], 17 -> 
            TemplateBox[{"\"POP20\""}, "Real64TabularHeader"]}|>, 
        TableViewBoxItemDisplayRules -> <|
         "Columns" -> {{{
             Blank[Missing] -> (MakeBoxes[#, TraditionalForm]& )}}}, 
          "ColumnsIndexed" -> {
           12 -> <|Blank[Real] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> True, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {0, 0}][
                Tabular`Typesetting`TableView`Private`num$]], Blank[Integer] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> True, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {0, 0}][
                Tabular`Typesetting`TableView`Private`num$]]|>, 
            13 -> <|Blank[Real] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]], Blank[Integer] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]]|>, 
            16 -> <|Blank[Real] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]], Blank[Integer] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]]|>, 
            17 -> <|Blank[Real] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]], Blank[Integer] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]]|>}|>, 
        TableViewBoxItemSize -> <|
         "ColumnsIndexed" -> {
           1 -> 7, 2 -> 7, 3 -> 7, 4 -> 7, 5 -> 10, 6 -> 16, 7 -> 7, 8 -> 5, 
            9 -> 4, 10 -> 5, 11 -> 7, 12 -> 8, 13 -> 10, 14 -> 8, 15 -> 8, 16 -> 
            8, 17 -> 8}|>, ImageSize -> {{666., 681.}, {258., 273.}}], 
      "Snapshot" -> 
      Tabular[<|"RawSchema" -> <|
          "ColumnProperties" -> <|
            "STATEFP20" -> <|"ElementType" -> "String"|>, 
             "COUNTYFP20" -> <|"ElementType" -> "String"|>, 
             "TRACTCE20" -> <|"ElementType" -> "String"|>, 
             "BLOCKCE20" -> <|"ElementType" -> "String"|>, 
             "GEOID20" -> <|"ElementType" -> "String"|>, 
             "GEOIDFQ20" -> <|"ElementType" -> "String"|>, 
             "NAME20" -> <|"ElementType" -> "String"|>|>, "KeyColumns" -> 
           None, "Backend" -> "WolframKernel"|>, 
         "BackendData" -> <|"ColumnData" -> DataStructure["ColumnTable", {{
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 2, 4, 6, 8, 10, 12, 14, 16}, 
                    "2525252525252525"}, {}, None}, "ElementType" -> 
                 "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 3, 6, 9, 12, 15, 18, 21, 24}, 
                    "019019019019019019019019"}, {}, None}, "ElementType" -> 
                 "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 6, 12, 18, 24, 30, 36, 42, 48}, 
                    "950100950307950307950307950500950307950202950202"}, {}, 
                   None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 4, 8, 12, 16, 20, 24, 28, 32}, 
                    "10151012100010371046101020052010"}, {}, None}, 
                 "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 15, 30, 45, 60, 75, 90, 105, 120}, 
                    "250199501001015250199503071012250199503071000250199503071\
037250199505001046250199503071010250199502022005250199502022010"}, {}, None}, 
                 "ElementType" -> "String"|>], 
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 24, 48, 72, 96, 120, 144, 168, 192}, 
                    "1000000US2501995010010151000000US2501995030710121000000US\
2501995030710001000000US2501995030710371000000US2501995050010461000000US250199\
5030710101000000US2501995020220051000000US250199502022010"}, {}, None}, 
                 "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 9, 18, 27, 36, 45, 54, 63, 72}, 
                    "Block1015Block1012Block1000Block1037Block1046Block1010Blo\
ck2005Block2010"}, {}, None}, "ElementType" -> "String"|>]}}]|>|>], 
      "RegionSnapshot" -> {
        Span[1, 8], 
        Span[1, 7]}, "DimensionsSnapshot" -> {107278, 17}|>, 
     "TabularReferenceWrapper"], 
   "ItemSizeConstraints" -> <|
    "ColumnsIndexed" -> {
      1 -> {3, 7}, 2 -> {3, 7}, 3 -> {3, 7}, 4 -> {3, 7}, 5 -> {3, 10}, 
       6 -> {3, 16}, 7 -> {3, 7}, 8 -> {3, 5}, 9 -> {3, 4}, 10 -> {3, 5}, 
       11 -> {3, 7}, 13 -> {3, 10}, 14 -> {3, 8}, 15 -> {3, 8}, 16 -> {3, 8}, 
       17 -> {3, 8}, 12 -> Missing[]}|>|>,
  "TabularRef"]], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"26891a3f-2b7c-4baf-bc48-902f9c51f7eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "=", 
  RowBox[{"dataset", "[", 
   RowBox[{"\"\<Layer\>\"", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924298189944873*^9, 3.924298194622261*^9}, {
  3.924298234090361*^9, 3.924298249373329*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0bb78c6f-8c8e-431f-bcdd-20eee09dc34d"],

Cell[BoxData[
 RowBox[{"GDALLayer", "[", 
  RowBox[{
   RowBox[{"GDALDataset", "[", 
    InterpretationBox[
     RowBox[{
      TagBox["ManagedObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[4960866896], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                   "SummaryItem"]}, {
                  RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[4960866896], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                   "SummaryItem"]}, {
                  RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Freeing function: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib\"\
", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", 
                    "GDALClose", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[13799413080], 
                    "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Base value: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d250\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960866896, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[4960866896], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     ManagedObject[
      OpaqueRawPointer[4960866896], 
      OpaqueRawPointer[4960866896], 
      ForeignFunction[
      "/opt/homebrew/Cellar/gdal/3.11.0_2/lib/libgdal.dylib", "GDALClose", 
       DataStructure[
       "RawForeignFunction", {
        "FunctionPointer" -> OpaqueRawPointer[13799413080], 
         "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "]"}], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 RowBox[{
                   TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d670\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960867952, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 RowBox[{
                   TagBox["\"Address: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"127b0d670\"", "\"16\""], 
                    ShowStringCharacters -> False], 4960867952, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    OpaqueRawPointer[4960867952],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Output",
 CellLabel->"Out[15]=",ExpressionUUID->"a0ef99b0-34f4-4238-9cfb-0d1d562e73b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ToTabular", "[", 
    RowBox[{"layer", "[", 
     RowBox[{"\"\<FeatureMap\>\"", ",", 
      RowBox[{
       RowBox[{"#", "[", "\"\<FieldList\>\"", "]"}], "&"}]}], "]"}], "]"}], 
   ";"}], "//", "EchoTiming"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"6972a773-0410-4ff2-9103-fcbe3bb9223e"],

Cell[BoxData["58.508317`"], "EchoTiming",ExpressionUUID->"b63acacb-6410-4d3e-b6b7-fda2e414b92f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"ToTabular", "[", 
     RowBox[{"layer", "[", 
      RowBox[{"\"\<FeatureMap\>\"", ",", 
       RowBox[{
        RowBox[{"#", "[", "\"\<FieldAssociation\>\"", "]"}], "&"}]}], "]"}], 
     "]"}]}], ";"}], "//", "EchoTiming"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"a336003d-a5d8-426d-9149-5b3b55ac06a7"],

Cell[BoxData["108.280144`"], "EchoTiming",ExpressionUUID->"ddd96938-311c-4094-83dc-7baf30ba062f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "data"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"e4681253-cc86-452a-860a-e934306b58bb"],

Cell[BoxData["107278"], "Output",
 CellLabel->"Out[17]=",ExpressionUUID->"32e4b453-fae6-4b30-86b2-9d2e3b4bcfd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["data"], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"3505fc68-20ec-4f05-97b2-1b4554f60c5a"],

Cell[BoxData[
 TemplateBox[<|
  "Summary" -> 
   TemplateBox[<|
     "RowCount" -> 107278, "ColumnCount" -> 17, "ColumnTypes" -> 
      Grid[{{"STATEFP20", "String"}, {"COUNTYFP20", "String"}, {
         "TRACTCE20", "String"}, {"BLOCKCE20", "String"}, {
         "GEOID20", "String"}, {"GEOIDFQ20", "String"}, {
         "NAME20", "String"}, {"MTFCC20", "String"}, {"UR20", "String"}, {
         "UACE20", "String"}, {"FUNCSTAT20", "String"}, {
         "ALAND20", "Integer64"}, {"AWATER20", "Integer64"}, {
         "INTPTLAT20", "String"}, {"INTPTLON20", "String"}, {
         "HOUSING20", "Integer64"}, {"POP20", "Integer64"}}, Alignment -> 
        Left], "Backend" -> "Tabular`Backend`WolframKernel", "UUID" -> 
      "Tabular-320a4212-0271-42e6-8fe4-9aba4fb719aa", "Form" -> StandardForm, 
      "Interpretable" -> True|>, "TabularSummary", 
     BaseStyle -> (DynamicUpdating -> True)], "Main" -> 
   TemplateBox[<|
     "State" -> "LiveTabularReference", "UUID" -> 
      "Tabular-320a4212-0271-42e6-8fe4-9aba4fb719aa", "CoreBox" -> 
      TableViewBox[
        Dynamic[
         FrontEnd`TabularReference[
         "Tabular-320a4212-0271-42e6-8fe4-9aba4fb719aa"]], Expression, 
        AppearanceElements -> {"RowHeaders", "ColumnHeaders", "ResizeArea"}, 
        DefaultBaseStyle -> "TabularTableview", HeaderSize -> {3, Automatic}, 
        ScrollPosition -> {0., 0.}, 
        TableViewBoxAlignment -> <|
         "ColumnsIndexed" -> {
           1 -> Left, 2 -> Left, 3 -> Left, 4 -> Left, 5 -> Left, 6 -> Left, 
            7 -> Left, 8 -> Left, 9 -> Left, 10 -> Left, 11 -> Left, 12 -> 
            Right, 13 -> Right, 14 -> Left, 15 -> Left, 16 -> Right, 17 -> 
            Right}|>, 
        TableViewBoxFieldType -> <|
         "ColumnsIndexed" -> {
           1 -> String, 2 -> String, 3 -> String, 4 -> String, 5 -> String, 6 -> 
            String, 7 -> String, 8 -> String, 9 -> String, 10 -> String, 11 -> 
            String, 12 -> Number, 13 -> Number, 14 -> String, 15 -> String, 
            16 -> Number, 17 -> Number}|>, 
        TableViewBoxHeaders -> <|
         "ColumnsIndexed" -> {
           1 -> TemplateBox[{"\"STATEFP20\""}, "StringTabularHeader"], 2 -> 
            TemplateBox[{"\"COUNTYFP20\""}, "StringTabularHeader"], 3 -> 
            TemplateBox[{"\"TRACTCE20\""}, "StringTabularHeader"], 4 -> 
            TemplateBox[{"\"BLOCKCE20\""}, "StringTabularHeader"], 5 -> 
            TemplateBox[{"\"GEOID20\""}, "StringTabularHeader"], 6 -> 
            TemplateBox[{"\"GEOIDFQ20\""}, "StringTabularHeader"], 7 -> 
            TemplateBox[{"\"NAME20\""}, "StringTabularHeader"], 8 -> 
            TemplateBox[{"\"MTFCC20\""}, "StringTabularHeader"], 9 -> 
            TemplateBox[{"\"UR20\""}, "StringTabularHeader"], 10 -> 
            TemplateBox[{"\"UACE20\""}, "StringTabularHeader"], 11 -> 
            TemplateBox[{"\"FUNCSTAT20\""}, "StringTabularHeader"], 12 -> 
            TemplateBox[{"\"ALAND20\""}, "Integer64TabularHeader"], 13 -> 
            TemplateBox[{"\"AWATER20\""}, "Integer64TabularHeader"], 14 -> 
            TemplateBox[{"\"INTPTLAT20\""}, "StringTabularHeader"], 15 -> 
            TemplateBox[{"\"INTPTLON20\""}, "StringTabularHeader"], 16 -> 
            TemplateBox[{"\"HOUSING20\""}, "Integer64TabularHeader"], 17 -> 
            TemplateBox[{"\"POP20\""}, "Integer64TabularHeader"]}|>, 
        TableViewBoxItemDisplayRules -> <|
         "Columns" -> {{{
             Blank[Missing] -> (MakeBoxes[#, TraditionalForm]& )}}}, 
          "ColumnsIndexed" -> {
           12 -> <|Blank[Real] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]], Blank[Integer] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]]|>, 
            13 -> <|Blank[Real] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]], Blank[Integer] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]]|>, 
            16 -> <|Blank[Real] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]], Blank[Integer] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]]|>, 
            17 -> <|Blank[Real] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]], Blank[Integer] :> 
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
                Tabular`NumberListFormat[
                Tabular, "Digits" -> 0, "RemoveSign" -> Identity, 
                 "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                 "SuffixQ" -> False, ScientificNotationThreshold -> {
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}][
                Tabular`Typesetting`TableView`Private`num$]]|>}|>, 
        TableViewBoxItemSize -> <|
         "ColumnsIndexed" -> {
           1 -> 7, 2 -> 7, 3 -> 7, 4 -> 7, 5 -> 10, 6 -> 16, 7 -> 7, 8 -> 5, 
            9 -> 4, 10 -> 5, 11 -> 7, 12 -> 8, 13 -> 8, 14 -> 8, 15 -> 8, 16 -> 
            7, 17 -> 6}|>, ImageSize -> {{666., 681.}, {258., 273.}}], 
      "Snapshot" -> 
      Tabular[<|"RawSchema" -> <|
          "ColumnProperties" -> <|
            "STATEFP20" -> <|"ElementType" -> "String"|>, 
             "COUNTYFP20" -> <|"ElementType" -> "String"|>, 
             "TRACTCE20" -> <|"ElementType" -> "String"|>, 
             "BLOCKCE20" -> <|"ElementType" -> "String"|>, 
             "GEOID20" -> <|"ElementType" -> "String"|>, 
             "GEOIDFQ20" -> <|"ElementType" -> "String"|>, 
             "NAME20" -> <|"ElementType" -> "String"|>|>, "KeyColumns" -> 
           None, "Backend" -> "WolframKernel"|>, 
         "BackendData" -> <|"ColumnData" -> DataStructure["ColumnTable", {{
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 2, 4, 6, 8, 10, 12, 14, 16}, 
                    "2525252525252525"}, {}, None}, "ElementType" -> 
                 "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 3, 6, 9, 12, 15, 18, 21, 24}, 
                    "019019019019019019019019"}, {}, None}, "ElementType" -> 
                 "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 6, 12, 18, 24, 30, 36, 42, 48}, 
                    "950100950307950307950307950500950307950202950202"}, {}, 
                   None}, "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 4, 8, 12, 16, 20, 24, 28, 32}, 
                    "10151012100010371046101020052010"}, {}, None}, 
                 "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 15, 30, 45, 60, 75, 90, 105, 120}, 
                    "250199501001015250199503071012250199503071000250199503071\
037250199505001046250199503071010250199502022005250199502022010"}, {}, None}, 
                 "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 24, 48, 72, 96, 120, 144, 168, 192}, 
                    "1000000US2501995010010151000000US2501995030710121000000US\
2501995030710001000000US2501995030710371000000US2501995050010461000000US250199\
5030710101000000US2501995020220051000000US250199502022010"}, {}, None}, 
                 "ElementType" -> "String"|>], 
               
               TabularColumn[<|
                "Data" -> {{
                   3, {0, 9, 18, 27, 36, 45, 54, 63, 72}, 
                    "Block1015Block1012Block1000Block1037Block1046Block1010Blo\
ck2005Block2010"}, {}, None}, "ElementType" -> "String"|>]}}]|>|>], 
      "RegionSnapshot" -> {
        Span[1, 8], 
        Span[1, 7]}, "DimensionsSnapshot" -> {107278, 17}|>, 
     "TabularReferenceWrapper"], 
   "ItemSizeConstraints" -> <|
    "ColumnsIndexed" -> {
      1 -> {3, 7}, 2 -> {3, 7}, 3 -> {3, 7}, 4 -> {3, 7}, 5 -> {3, 10}, 
       6 -> {3, 16}, 7 -> {3, 7}, 8 -> {3, 5}, 9 -> {3, 4}, 10 -> {3, 5}, 
       11 -> {3, 7}, 12 -> {3, 8}, 13 -> {3, 8}, 14 -> {3, 8}, 15 -> {3, 8}, 
       16 -> {3, 7}, 17 -> {3, 6}}|>|>,
  "TabularRef"]], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"63c39cdd-e843-4b63-ae5b-f87918985baf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Normal", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<POP20\>\""}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Log\>\"", ",", "40"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"2e59c4e7-3500-4447-9163-c99511cea6ab"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.616], Thickness[
    Small]}], {}, 
    {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.616], Thickness[
     Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 0}, {0.2302585092994046, 421.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{31.399691628302648`, 40.79357757038966}, {
           81.27076353057791, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 421]& ,
        TagBoxNote->"421"],
       StyleBox["421", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[421, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.6907755278982137, 0}, {0.9210340371976184, 533.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{58.081349454563664`, 67.47523539665067}, {
           78.80207281199716, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 533]& ,
        TagBoxNote->"533"],
       StyleBox["533", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[533, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.9210340371976184, 0}, {1.151292546497023, 549.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{66.97523539665067, 76.36912133873768}, {
           78.44940270934276, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 549]& ,
        TagBoxNote->"549"],
       StyleBox["549", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[549, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.3815510557964275`, 0}, {1.611809565095832, 1543.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{84.7630072808247, 94.15689322291169}, {
           56.53977258193862, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1543]& ,
        TagBoxNote->"1543"],
       StyleBox["1543", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1543, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.611809565095832, 0}, {1.842068074395237, 807.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{93.65689322291169, 103.05077916499872`}, {
           72.76259730404068, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 807]& ,
        TagBoxNote->"807"],
       StyleBox["807", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[807, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.842068074395237, 0}, {2.0723265836946414`, 887.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{102.55077916499872`, 111.94466510708571`}, {
           70.99924679076872, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 887]& ,
        TagBoxNote->"887"],
       StyleBox["887", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[887, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.0723265836946414`, 0}, {2.302585092994046, 1863.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{111.44466510708571`, 120.83855104917272`}, {
           49.48637052885077, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1863]& ,
        TagBoxNote->"1863"],
       StyleBox["1863", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1863, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.302585092994046, 0}, {2.5328436022934504`, 3107.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{120.33855104917272`, 129.7324369912597}, {
           22.066270047471747`, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3107]& ,
        TagBoxNote->"3107"],
       StyleBox["3107", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3107, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.5328436022934504`, 0}, {2.763102111592855, 3295.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{129.2324369912597, 138.62632293334673`}, {
           17.922396341282635`, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3295]& ,
        TagBoxNote->"3295"],
       StyleBox["3295", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3295, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.763102111592855, 0}, {2.9933606208922594`, 4276.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{138.12632293334673`, 
           147.52020887543372`}, {-3.7006893277148123`, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4276]& ,
        TagBoxNote->"4276"],
       StyleBox["4276", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4276, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.9933606208922594`, 0}, {3.223619130191664, 6493.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{147.02020887543372`, 
           156.41409481752072`}, {-52.5675404267641, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6493]& ,
        TagBoxNote->"6493"],
       StyleBox["6493", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6493, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.223619130191664, 0}, {3.4538776394910684`, 6400.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{155.91409481752072`, 
           165.30798075960774`}, {-50.51764545508543, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6400]& ,
        TagBoxNote->"6400"],
       StyleBox["6400", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6400, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.4538776394910684`, 0}, {3.684136148790473, 7672.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{164.80798075960774`, 
           174.2018667016947}, {-78.55491861610965, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7672]& ,
        TagBoxNote->"7672"],
       StyleBox["7672", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7672, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.684136148790473, 0}, {3.9143946580898774`, 8697.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{173.7018667016947, 
           183.09575264378174`}, {-101.14784706740669`, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8697]& ,
        TagBoxNote->"8697"],
       StyleBox["8697", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8697, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.9143946580898774`, 0}, {4.144653167389283, 8064.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{182.59575264378174`, 
           191.98963858586876`}, {-87.19533613114227, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8064]& ,
        TagBoxNote->"8064"],
       StyleBox["8064", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8064, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.144653167389283, 0}, {4.374911676688686, 7181.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{191.48963858586876`, 
           200.88352452795573`}, {-67.73235484090297, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7181]& ,
        TagBoxNote->"7181"],
       StyleBox["7181", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7181, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.374911676688686, 0}, {4.605170185988092, 6249.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{200.38352452795573`, 
           209.7774104700428}, {-47.1893213612846, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6249]& ,
        TagBoxNote->"6249"],
       StyleBox["6249", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6249, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.605170185988092, 0}, {4.835428695287496, 5353.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{209.2774104700428, 
           218.67129641212978`}, {-27.43979561263862, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5353]& ,
        TagBoxNote->"5353"],
       StyleBox["5353", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5353, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.835428695287496, 0}, {5.065687204586901, 4355.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{218.17129641212978`, 
           227.5651823542168}, {-5.441997959570884, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4355]& ,
        TagBoxNote->"4355"],
       StyleBox["4355", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4355, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.065687204586901, 0}, {5.295945713886305, 3223.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{227.0651823542168, 236.45906829630377`}, {
           19.509411803227394`, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3223]& ,
        TagBoxNote->"3223"],
       StyleBox["3223", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3223, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.295945713886305, 0}, {5.52620422318571, 2536.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{235.95906829630377`, 245.3529542383908}, {
           34.65218433595038, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2536]& ,
        TagBoxNote->"2536"],
       StyleBox["2536", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2536, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.52620422318571, 0}, {5.756462732485114, 1788.}, 
            "RoundingRadius" -> 0]},
          ImageSizeCache->{{244.8529542383908, 254.24684018047782`}, {
           51.139511635043235`, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1788]& ,
        TagBoxNote->"1788"],
       StyleBox["1788", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1788, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.756462732485114, 0}, {5.986721241784519, 1182.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{253.74684018047782`, 263.1407261225648}, {
           64.49689177307836, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1182]& ,
        TagBoxNote->"1182"],
       StyleBox["1182", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1182, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.986721241784519, 0}, {6.216979751083923, 750.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{262.6407261225648, 272.0346120646518}, {
           74.01898454474696, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 750]& ,
        TagBoxNote->"750"],
       StyleBox["750", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[750, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.216979751083923, 0}, {6.447238260383328, 457.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{271.5346120646518, 280.92849800673883`}, {
           80.47725579960553, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 457]& ,
        TagBoxNote->"457"],
       StyleBox["457", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[457, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.447238260383328, 0}, {6.677496769682732, 262.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{280.42849800673883`, 289.8223839488258}, {
           84.77542267570594, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 262]& ,
        TagBoxNote->"262"],
       StyleBox["262", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[262, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.677496769682732, 0}, {6.907755278982137, 142.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{289.3223839488258, 298.7162698909128}, {
           87.42044844561389, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.907755278982137, 0}, {7.138013788281541, 65.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{298.2162698909128, 307.61015583299985`}, {
           89.11767331463814, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 65]& ,
        TagBoxNote->"65"],
       StyleBox["65", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[65, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.138013788281541, 0}, {7.368272297580946, 39.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{307.11015583299985`, 316.5040417750868}, {
           89.69076223145153, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.368272297580946, 0}, {7.59853080688035, 10.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{316.0040417750868, 325.39792771717384`}, {
           90.32997679251262, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.59853080688035, 0}, {7.828789316179756, 6.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{324.89792771717384`, 334.29181365926087`}, {
           90.41814431817622, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.828789316179756, 0}, {8.05904782547916, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{333.79181365926087`, 343.1856996013479}, {
           90.52835372525571, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.05904782547916, 0}, {8.289306334778564, 1.}, 
            "RoundingRadius" -> 0]},
          ImageSizeCache->{{342.6856996013479, 352.07958554343486`}, {
           90.52835372525571, 91.05039560667161}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.16578612669557127`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], "ChartDefaultStyle" -> {
      RGBColor[1., 0.725, 0], 
      RGBColor[0.24, 0.6, 0.8], 
      RGBColor[0.455, 0.7, 0.21], 
      RGBColor[0.922526, 0.385626, 0.209179], 
      RGBColor[0.578, 0.51, 0.85], 
      RGBColor[0.772079, 0.431554, 0.102387], 
      RGBColor[0.4, 0.64, 1.], 
      RGBColor[1., 0.75, 0.], 
      RGBColor[0.8, 0.4, 0.76], 
      RGBColor[0.637, 0.65, 0.], 
      RGBColor[0.915, 0.3325, 0.2125], 
      RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
      RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
      RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
    "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
    RGBColor[1., 0.79375, 0.25], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRange->{{0., 8.289306334778564}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {6.214608098422191, 
       FormBox["500", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.600902459542082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.006367567650246, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.294049640102028, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.517193191416238, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.699514748210191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.85366542803745, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.987196820661973, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.104979856318357, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.210340371976184, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.615805480084347, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.903487552536127, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
     Automatic}]]], "Output",
 CellLabel->"Out[25]=",ExpressionUUID->"4844b0d5-5e0f-40f6-af43-b64812764f69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", "\"\<Name\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924298603785317*^9, 3.9242986817513313`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"34858067-1e38-413c-8c9a-2fec00f0bb67"],

Cell[BoxData["\<\"ma_2020_gen_2020_blocks\"\>"], "Output",
 CellLabel->"Out[23]=",ExpressionUUID->"fc2f6550-c6b6-47ae-882f-94485eb45f0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", "[", 
   RowBox[{"\"\<Layer\>\"", ",", "\"\<ma_2020_gen_2020_blocks\>\""}], "]"}], "===",
   "layer"}]], "Input",
 CellChangeTimes->{{3.924298684183957*^9, 3.9242986896483383`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"720f0b1a-68d5-4e4c-8faf-43c5dc3c8432"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[24]=",ExpressionUUID->"70a7eedf-81a6-4420-ba5e-1cc5ade76674"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"layer", "[", "\"\<ResetReading\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924299305496731*^9, 3.9242993090070133`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"31c6e37b-22f1-42e8-9dcb-4fbfb1bd29bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", "\"\<NextFeature\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9242993096079206`*^9, 3.92429931299933*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e934dccb-c5b9-4a44-bff5-78ca47ad8d43"],

Cell[BoxData[
 RowBox[{"GDALFeature", "[", 
  RowBox[{
   RowBox[{"GDALLayer", "[", 
    RowBox[{
     RowBox[{"GDALDataset", "[", 
      InterpretationBox[
       RowBox[{
        TagBox["ManagedObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d004080\"", "\"16\""], 
                    ShowStringCharacters -> False], 5049958528, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d004080\"", "\"16\""], 
                    ShowStringCharacters -> False], 5049958528, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5049958528], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d004080\"", "\"16\""], 
                    ShowStringCharacters -> False], 5049958528, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d004080\"", "\"16\""], 
                    ShowStringCharacters -> False], 5049958528, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5049958528], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"freeing function: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib\"",
                     "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib", 
                    "GDALClose", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[5282833304], 
                    "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"base value: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d004080\"", "\"16\""], 
                    ShowStringCharacters -> False], 5049958528, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d004080\"", "\"16\""], 
                    ShowStringCharacters -> False], 5049958528, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[5049958528], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       ManagedObject[
        OpaqueRawPointer[5049958528], 
        OpaqueRawPointer[5049958528], 
        ForeignFunction[
        "/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib", "GDALClose", 
         DataStructure[
         "RawForeignFunction", {
          "FunctionPointer" -> OpaqueRawPointer[5282833304], 
           "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "]"}], ",", 
     InterpretationBox[
      RowBox[{
       TagBox["OpaqueRawPointer",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                GridBox[{{
                   RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d004700\"", "\"16\""], 
                    ShowStringCharacters -> False], 5049960192, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                GridBox[{{
                   RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"12d004700\"", "\"16\""], 
                    ShowStringCharacters -> False], 5049960192, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      OpaqueRawPointer[5049960192],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["ManagedObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600000ab80f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553127506160, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600000ab80f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553127506160, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   OpaqueRawPointer[105553127506160], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}, {
                 RowBox[{
                   TagBox["\"active: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["True", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600000ab80f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553127506160, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600000ab80f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553127506160, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   OpaqueRawPointer[105553127506160], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}, {
                 RowBox[{
                   TagBox["\"active: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["True", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"freeing function: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ForeignFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OGR_F_Destroy\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"Void\""}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OGR_F_Destroy\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"Void\""}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib\"",
                     "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ForeignFunction[
                    "/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib", 
                    "OGR_F_Destroy", 
                    DataStructure[
                    "RawForeignFunction", {
                    "FunctionPointer" -> OpaqueRawPointer[5273719036], 
                    "Type" -> ({"OpaqueRawPointer"} -> "Void")}]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"base value: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["OpaqueRawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600000ab80f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553127506160, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600000ab80f0\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553127506160, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    OpaqueRawPointer[105553127506160], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ManagedObject[
     OpaqueRawPointer[105553127506160], 
     OpaqueRawPointer[105553127506160], 
     ForeignFunction[
     "/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib", "OGR_F_Destroy", 
      DataStructure[
      "RawForeignFunction", {
       "FunctionPointer" -> OpaqueRawPointer[5273719036], 
        "Type" -> ({"OpaqueRawPointer"} -> "Void")}]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Output",
 CellChangeTimes->{
  3.924299313312849*^9, {3.924299346529533*^9, 3.924299354483176*^9}, {
   3.924299675252389*^9, 3.924299677039687*^9}, 3.9242999399023247`*^9, {
   3.924300004199593*^9, 3.924300018308712*^9}, 3.9243004480676823`*^9, {
   3.924300695181837*^9, 3.924300719605505*^9}, 3.9243015547245626`*^9, 
   3.924301599756744*^9, 3.9243018225539722`*^9, 3.9243018917190523`*^9, 
   3.924301922254459*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"91577cc8-37c1-4536-ae0a-d3cf738483e5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", "0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"layer", "[", 
       RowBox[{"\"\<FeatureScan\>\"", ",", 
        RowBox[{
         RowBox[{"n", "++"}], "&"}]}], "]"}], ";", "n"}]}], "]"}], "//", 
   "EchoTiming"}], "*)"}]], "Input",
 CellChangeTimes->{{3.92429994047911*^9, 3.9242999656737432`*^9}, {
   3.924300006255764*^9, 3.9243000307917747`*^9}, 3.9243019170481997`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"05308e10-85f6-4870-93b2-6136ec047ffb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", "\"\<RawLayerDefinition\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9243004498897657`*^9, 3.92430045703281*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"11384dc7-e6cf-4d13-8a48-ee4a5fedf954"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600000ab8000\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553127505920, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"600000ab8000\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553127505920, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  OpaqueRawPointer[105553127505920],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.924300457269084*^9, {3.924300698222459*^9, 3.924300722724399*^9}, 
   3.9243015575157757`*^9, 3.9243016028365793`*^9, 3.924301825228218*^9, {
   3.924301894734617*^9, 3.924301922269376*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"8ec6f2b2-e5d4-4e04-96c5-acd4b9a11816"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", "\"\<FieldCount\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924300457729731*^9, 3.924300468110895*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"777f694d-48d0-4ba1-bfff-025cce3c87f2"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{{3.9243004607616653`*^9, 3.9243004683593082`*^9}, {
   3.924300698233513*^9, 3.9243007227291527`*^9}, 3.924301557525042*^9, 
   3.924301602848568*^9, 3.924301825232328*^9, {3.9243018947487373`*^9, 
   3.924301922273691*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"ec524825-ab34-4862-80c3-c3a7130b5077"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", 
  RowBox[{"\"\<RawFieldDefinition\>\"", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.92430069387363*^9, 3.9243007334745092`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"09e6bb8f-5281-4d13-b759-532371733a33"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"60000025b720\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553118738208, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"60000025b720\"", "\"16\""], 
                    ShowStringCharacters -> False], 105553118738208, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  OpaqueRawPointer[105553118738208],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.924300700127537*^9, 3.9243007338107147`*^9}, 
   3.924301557529785*^9, 3.924301602858119*^9, 3.924301825243404*^9, {
   3.924301894752594*^9, 3.9243019222800503`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"01264e55-b4b0-41bf-bebb-cf46a9093f2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", 
  RowBox[{"\"\<RawFieldType\>\"", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.924301605539912*^9, 3.9243016109853067`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"410c2962-1592-4459-bb07-ea122a1ee545"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.92430160578128*^9, 3.9243016112002277`*^9}, 
   3.9243018252465754`*^9, {3.924301894763958*^9, 3.924301922283193*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"70d25bd2-c6f5-411a-ba3c-02ca7fb27881"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", 
  RowBox[{"\"\<RawFieldType\>\"", ",", 
   RowBox[{"-", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924301556667515*^9, 3.9243015628689613`*^9}, {
  3.924301603969302*^9, 3.9243016041480827`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"06970083-d1c9-4205-b3b5-634a1955286c"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.924301560601619*^9, {3.924301602861266*^9, 3.924301604389289*^9}, 
   3.924301825248929*^9, {3.92430189476639*^9, 3.9243019222889433`*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"dfe4620c-a37a-44c6-b1f3-eeee608e62be"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"layer", "[", "\"\<ResetReading\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"feature", "=", 
   RowBox[{"layer", "[", "\"\<NextFeature\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.924299305496731*^9, 3.9242993090070133`*^9}, {
  3.9243018442155657`*^9, 3.9243018456289463`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"81f20685-effc-479f-b62b-f0a565ffd953"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"feature", "[", 
    RowBox[{"\"\<FieldString\>\"", ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"layer", "[", "\"\<FieldCount\>\"", "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.92430193241471*^9, 3.9243019451066217`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"7ea4a6f4-ace5-44fb-b3dd-e729346bf9b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"250010101001000\"\>", ",", "\<\"25\"\>", ",", "\<\"001\"\>", 
   ",", "\<\"Provincetown Town Precinct 1\"\>", ",", "\<\"0\"\>", 
   ",", "\<\"0.000000000000000\"\>", ",", "\<\"0.000000000000000\"\>", 
   ",", "\<\"0.000000000000000\"\>", ",", "\<\"0.000000000000000\"\>", 
   ",", "\<\"0.000000000000000\"\>", ",", "\<\"0.000000000000000\"\>", 
   ",", "\<\"0.000000000000000\"\>", ",", "\<\"0.000000000000000\"\>", 
   ",", "\<\"0.000000000000000\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.9243019454909143`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"fe437f8c-4b8e-4108-ad70-b89e2d592b58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"feature", "[", 
  RowBox[{"\"\<FieldString\>\"", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.924301841126038*^9, 3.9243018727415333`*^9}, {
  3.924301926275975*^9, 3.9243019282450647`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"d7900b2d-269e-40ea-b0d1-6e99b9104f97"],

Cell[BoxData["\<\"\"\>"], "Output",
 CellChangeTimes->{{3.924301855139295*^9, 3.924301928472232*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"25d435b3-9d46-4ad8-be93-18c0d6c2bd5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"polygons", "=", 
    RowBox[{"layer", "[", 
     RowBox[{"\"\<FeatureMap\>\"", ",", 
      RowBox[{
       RowBox[{"FromGEOS", "@", 
        RowBox[{"FromWKT", "@", 
         RowBox[{"#", "[", "\"\<GeometryWKT\>\"", "]"}]}]}], "&"}]}], "]"}]}],
    ";"}], "//", "EchoTiming"}]], "Input",
 CellLabel->
  "In[115]:=",ExpressionUUID->"10f96af2-57ac-4298-8825-abadb00c6c8b"],

Cell[BoxData["13.575795`"], "EchoTiming",ExpressionUUID->"3bf6646b-6181-4b68-9adc-f2b8b5747b19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "polygons"}]], "Input",
 CellLabel->
  "In[116]:=",ExpressionUUID->"75315cbb-73c6-4bea-b411-d46229a3b8d6"],

Cell[BoxData["107278"], "Output",
 CellLabel->
  "Out[116]=",ExpressionUUID->"25c438cf-aba2-41f5-a370-74ac746be74b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "@", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", "polygons"}], "}"}], ",", 
    RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[127]:=",ExpressionUUID->"e199b0e9-ffc3-4cd2-82b9-f1e7affd4410"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
droHHngAqWDnzp1RZs1XQsRmdmQ+24bRWhAK191u2qxJbWnRU0pO8wxrlgEa
N+M1T9dbB6jJHtRSIyCUL+zmpkdBrtCsRaEx3srzAZp0mV2DSrQtdBNsTynd
KP/vUsAsCsMe13eN2ZJOInx6oqvWRuwwNBEFEW+2EbY3NgftV7AxWv5QTTti
CTPXunr4321OvDXhE2FUlCDBa2P19d5KuakTZQZLV6nWjtS/jPXtz3fffTdI
cCi6CeU0BezXXnvtG9/4huge4iNHiXDVREzeHnJJhPUaeq6903dF5+hFpFyl
FPVHdJ8B0pzSahkRGJvpyXROngIHlJtVc6jj4C+mTw6EA7fzLr0jJYsnAxkC
xZ6WpXNIIv+o1+42B7IIbeOW8kelINt8+OGHbSajcQs8vl7CXEwOeWiY+Qfn
o5wT5qGqpC20FhoaEyA8MJ+8AXpjDWLTNWplyiQWIuI96IPKobM6aCdLqBeM
L28rUdNyoD0ozCy32unRgGS2PXz4sHECefbTTz81JvycqRabQ4jM167AXmje
hqCJPnSjZqOAqVje1bK1HXQhncSIGIr7z7Fjxx566KG7777baIHnz5/XwpZJ
ocEhBdHa0BnczPoGqjLIYewMhWn6fwHcWMcSEVGfL+0BNG8wTh3M7+7jfsEV
tRVqOR07drexcjhwTJb28b4xYZVJ9IoSXvEdyqtE5u2Jag7SoX7HK4EsKLr4
GelUHVmOg1xRZQO4nR7BLQx0i0RsJCDC5UjNuKcrLUu3KAzO0cgQOGAME1YA
1h+j3L/xxhs0kkF0Lk8A3VD9ocKQur/xSCQN/gWhsPQZlv+fS8kpUEi3qFkt
tObtm7SA4xahg30EWmmzyqgZohAig5icdzTYCIR6QHuEJTGT+F5TSf5ivjCp
Zey9e/eyDEIKGIkJZYiVvH2oB1nQ3+gxHk9ZoQFYAPUgOEgKhaHAhQsXPI6A
/uAvZrdHwaq/fzP8Na5cwFZlVb4w5a233vLUd71JxJNjbf21tShgsV3funQl
U+rZs2f/382ln5Vz586xsBjmbps1ZCi+5Kx4N27cYFn7d6WwmbIzskx9HqvI
+Ro1bLYfG+phfsSbvjqqBABO6tRdlyblSitieYVnlxrvcZ1ntdH601Law/ah
GKJvJbqfqBHY5nW29uEbm4Mzt/cPRRnU1bJWc2a5Re7YsSOnaq2wt1iWG2tC
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
D2FsZS2nnvzmSqgdmobW7RG33nA67PTVtNXvfCJeIvlDOjj26tWrDGUL6yZl
vYm7smjsrm0DjYEUBiP1RV0NDg9gicRu5Qi93GC2vpjIygM2ni9Ab1DSWg07
k9eBxOE0F8xgOjhWs0ZN3GVsQxz01dOQZgg/NTDrqgXmPffco+Ubg4v0i0wr
aBVr6NpJS5j73MCnkYtiZcfrwHf0nTbwRjWzisfJeuaiJMAxy6TtHIuHGncy
EGABMxhSM+hM24B2hXQD7UumFX6yHPEsN7NkGaOjr+HNARSLEhSdZp89e5aV
jRp27twZyMyzGdZvfvObqjKFZjK/DmtJCjmWFVh1P0MGz3iRGacyTtiovph/
RSvMGiOuBMpBatkA2Kj+ly7QZdOIqBWChi+//DIrj9Edzf1nU+mjgYO4wnvX
asjTn/zkJx6d9SW0sm2m5ixo8LY7I6Q2fjsj/uKLL7I7MNxUuN7Ernclh6R8
MeDqWC0JNTuUVvMJMi/tHucjbFK0ofUDDWPTJHqxdOoxxPoUv//++3CgKksG
C0wNgzGCYFtPUbgZ+Hbw4MF2un2epv7GZYW/VmVVviCFvSnrXlv6EpO2/avf
wvjQ3ZwNy61TUTOHzK7zQ438PHdSmCAFa1s0UV77Yp+mOcSieAFoo5Ib3P3d
ktywWmgwboGP+uoOQwPY+DzlTlikvklh2VX/oDkq6TdHbJuUoYn9q/UCO/gk
gFuW3JYmuk4vrXObHqUsapjuyUqeFJw58x8r/T/55BPDNCE2f+1rX9O5o6Xh
UNMJpdmC1lYS22rjUHCayK4a6mg4BPPwUl6NUKRuBUIZ7pIt/vHHH0c6Yttl
O2P/DQRDYjctEbWdP3/+o48+4k62Np4y4hkYhH1NMamvTmem1FQbZWAHmHzi
zDIpxv6VA5UYjXyF0NUXZ4qJa5KjqWVdX1OGzevXCyDHntn3W3XY5JHI5F2x
NnR+Rd2j0E5nd+/e7aGrh+RdCfLMF95448aNvsSH56K5hOb9NUNEBjfnFU7w
3PbS5jzIarvGIsNwP+KZPyE4g/vQQw/ddttte/bsQYgCgl2/fh25CyFECRAa
6gUfbaCARZlKWCT7MbjwhpgoiEYD2pb+nslsNJEP10pkSBkPaiAdGU09rlVb
HZLLJ+Ms/kzKSyXL29IzE2iu+5twMtDSsVOlO9SSIfZLXzMOjFXJ0pWQLOBl
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
+24qBLQyHLrBX6zs6dOnhZBOgrblnu4++OCDED3aredLk7KSas3vqZQh7+8X
lqOzXB7/1GLk/F36ti7rsi5/+OUL8VffzN27BkliyBGGpcgHFY302I1IChrr
nUCwfoxu182czcNwTRyZcFiTTu6k5EonJxRJMmXnZXzQ5AgGyDBwLvUpVQKJ
6kd+rRhmuD9PL3PD1hgWLwGEK63eLIHyqk6tluhfFttjDnQt0l2GsFWCUS+b
276Hn12TiGLqVgXvWkk3ihM5xc09MayqMzlHjt1okFkl2Oj+0snaKNxzZeIz
E/VGaKmT1o/Jp5hSD5mFYIA+IJi6iaqxmmDGjAW+fObMmcxM3+xCJ2ISDB2u
HavXunD1Ng1o65ROLDDTDcRCo8+xT95///1he9h5Sw2D7KT5fVF8haqN3zAm
PhuKtWFWSjUNr+Gnn346mXyd7iP/1O29bDrTYNJc5zbwF5sZFHzq1CmkGpOu
dkU3zVOIN1VA7YvPy6T0oz43YHauJqszQCXQio0WCH0oG6MK1fWRvsU629ye
xnqyLlbFbXUDzLdrupEghBXk5i3OqL2uoXIeD7BaFMe0vh37xKxxuSq6aY4X
bJdVoCd79uw5efIky4Gs/p/HcvPNNxty0Gyz7M/NMdSeCch45PDhw/NxhcIv
WmK4anO4O/6yz/ryZJh9UadGB8psAJHoqradsYVgQ/JGdA1s+l4nhOBWi3hT
oVNMubLoy2YjjVAdsNYVI1iLyQ3FOJL9b42FqavhOCwgAmMbShiXu6oCU/IO
8kgOwTJRQ7PH0HxiMXoaAnkWzTZYCBC9lUgB9mHiaWAOa2rmLyEqBE1KJZHX
oPHhhx8GSfETZPHGG29ocWewRK0OVBgZDz+Zytk8/MWLBkTiNvYPHaOGEydO
0Ddmw9Duxui44ooraFfYxReuW4/5uUCF9FlD0BdeeIFPdqyWgTrtGj+/5rMW
ZurgxiQAwbiTDWOmaT73799//PhxNnA/atYoBw4cgJgL3J577rk6z9pXUGiR
Z6FXJpi7/PLLGTUVmliNEYEimRybZqoZHQ2B3OcHtvOSN32Xe7pmD1Nf591L
XpkvU1599dUv3Kvrsi7r8gdeLsaKeDlquzTIH0ammaeCMpajYdKieIiY+yNx
M2BznvI99NBDi2at7bF/zrV2yoq70vJwXrTD97sqj2Rl1WxD7klD5ujpRljR
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
PZnLEWvFFPNRMbSAX8xB1mqbV5jDhuIy63qrkk72m+uvv/6RRx7heYCP0jgQ
DFwWzMjFiRMnWBYAJsy+p59+mvz37t3LHJRZAtDkYR05yIev1knaeYdEmDNJ
ALTsStxUba3OiHFCX9SGBYtZkcoHa6KcNCYFpg1tZGstTajNZeB4iSJZbzXu
NfHT3XffHb0837rlllvUYArHtFg+e/YsiCkIS/4KlqY4cEW7JOs+FxTjnjGx
FlES8YuohwfCdBEcF/D1uZG9kPUWPEtj8mk6DlRlvOwKtfJuyDcCsoKYjBoQ
zZfqMPqxIjIRHDe/9KUvZZhl32Sg0siUWUZ6ev+HP/zh3//93wsJ61nB8NkN
DkXZV0xMmV/96ld1cfjXS7t75k7Syh1kbXy4Tut0Tad//ud/njsHKVOBjAxE
K3zI4Yx7epyDqjfBJJ+uac38VyHH48ochnsnxjOuM6zAn//85+eWh3kl8tIw
iwDy2muvIQYoJU7eWo5xyiY3+9FCSV2SpiNXhGArcYeCd+SZmmhh2ZJNc1WI
ZUMuWkn2vmi0GIuW8lMO/Oud5YwI3eLtXq/kvFLW2twewmmXdpgnG5kq5HQx
LFUqs7pR98RfpLU6Gt00/Wg/mrmq8ezHaEcILbr8I48xjBFmkO62RlqwBx54
gJw9YGQEIsDIyhUpXcFp2Sz61G4odzG8pbVnSOzfvx9pQeKOZTMfWhQmQ1r1
5ZdffvvttxE1GXXIP7s0b7/9MDxAoGv+R6Z0XC5sZ/+qavFUv290E5PuXjbK
waFo0CbJVl05R+aP1TvCpTqWqkpu2bjr+2YY7KDKM/12VR39+PDDDyNyI/Up
hEdLngKEOCItaS9EY9sVy+d+OzVQbjIBNXNyAGQc2vt9MQfylQkKNvHkuXPn
bF5Qg259O7UtrZSSMDzuu+8+nmes0oPI8CytcoB7OMDoNeKhbP/Bida3impR
5/XNnSrh4ze3R7KrRWJm8VFg4L333otI76FTjtTmgyToLMvOZGBkAP/xmGxJ
pt4HH3xQP0pCkDa8MhiKx9577z3mJpMFQZdpy/Q5cuSIm4IMh7QD5SQrzzRO
nz7NT0ztb33rW5tjEDTepTD89NRTT2ki6OwGgumbmUOJfqRtN3gf7ePirEEj
441PX7p0KQbq5O8otf31yXWG8tPf/M3fUGCVxf/9v/93oRxPMuW1GHQBsRbG
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
pU6J4rC16vxsHJ87y14zQ50P1W8gMZlsGUSiH+gnn5G+6dns+qwa2mUYF2MJ
HzrhLIT3EJG8kZnwzp07lbyY5yT42lw0IQVKzUyP18F/LlZnZRShRI/dvHbt
GgC/evXqmjFiYzGQwTZ0X7kxt3feeWchhS3aov3bb9x9kMpUVh1rOaFwjLJw
UVe2yuGxsjHy8xA36OSNGzcgTfO5DX1sqJWRJyLDfJPKxRLX/rS8TkrDiS0G
4gn/vDHbH5ZSPWFc6WLKGStb5W3IvydOnNArg2/+8R//UV4LLkJKq4/cWDKT
cKueOnWKKxX6z1++3717N6TYWGyHnpeqJhJN12Tt1ntEMutjrXAattn7mhtH
DSF3XEQweb92ODaChYsDNKbq5Z45TGTD+dm2ckRcxVrPuvC6G2zE2FTQjmTK
vUM/sEN9zQTSVU8w9cMGVvu6UJIV5HN8BXnAyAjFK9bIbcvNywPs2oULF/qi
INVZRUWE3o/KAjKTjz32GGCBa5UpFVtaj9asdz1xNS5PekYNc96k0QDIN7bc
uEsGbZgGSGXcR7+6qLciWNz54CTH6mLXN7EwQ019P9SCfdkXjbkacQxna7Ne
9DX3O+++9957sKl+A+ZooZtIIkOt7WVbE4vu3bsHk8bRgGGQQ6NPdgfgq9KJ
hOXJavU/Xc15ONb87UrKtBwuh1acT9zKrCk3lpimlnTE8mh0m4Blnua4MEQI
Lm5NHG5Jk5aItppzVxIIGE9EP0dLbj3ohnk4E/3EWwBZimri9/PnzwMQDjK8
on5lySnnfAxfkjXlCMPNKnyZWwP22JSJlmyG39u6deuWLVtislegg7IxB+YD
mtEVfYrqFtXVzNpVO5dbzPS0xymudiXmUQLlv0sliYocrL3xvQILC/zwww8l
TUDpV7/6FayppFgDH6uAhR6rmSaA1aDJk/Tcfs98tNNpzlDQ0BgUhBRDgKSZ
6oNgQ8kAQwPUEG0oBoNCq4GVmQk12o7VWb2vCYEZqI3xGat/qSOalyN4FUlt
qKlfr1+/rtjCYln+5s2bQa0w0rpKAjG/ZGnHjh0z432rM4yvZpJjdDXM08mY
/FYx1toNfS0D8dxzzyEm6PyZks2KXUj0FmIGkQydM4YRMU2/R9PPGvzFA6+/
/joQgzqZC+U/lwb0hsYtBLCb3dGcMDwAkb9z587p06f5iZ6Zw6uvvkr//7U0
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
SgnOE4ZfvcFDTd9IEu96Y8au0+twcKWGDq2t5wdXrwxd7jf+dQ8oZyrxIjp9
hmzcuFFtqabOnvRG8KXEbSxK+urDIAlas79UJYOoJ+ZJ9Sob1BCXpt8XgFmy
ZLkbor7MF/v1JHFwvPQORVUtSSdqBM470gGNToMhBoNTk8hfHk8YX4oqHANa
tHdSw6LblAaE/mcBa00k+sgjj4wePdrcT5MmTTIvsM6GtvJ14sPYZOOaktb0
13TqvlNS/Wa/RBUeCqYyAE5qN8tJjzlIrWojSE5Ua5hxq4Lh8kcPdPEnDbHS
5lIT3CYBuYF41ZymOlPppFF3fNnOr+mKiDQswH8QNBP0Dgw2JBQQi6rASKyI
gLzfnRO+SH4d6BgQq8/OJzcG6m/ildq2vV4G/5QF07Sv9NNiYl02SUdHh3b7
QX7rldleQM2mqI9FpSlTQWYyl1+VsdO9a1JCysHcuXPN3M26gP04YC20sjOE
OwzdIDlqytJW0j90XVFqpbdUv+irqOxOg7mnbm5i5merqI/e+IH0TMcWaotW
zKD6RgdPrlXFw1prz2akvrFjx8IdDh48yDZwrdVGMUCzDKf2OQzZ2RA8xG31
bWn13SjjjHHwqzLQOii3ra3NW9h3vzr7NJJcyWx+k6O9VMXJrFcJwjSK05C4
CaU0qrCH6m4ibkbTFk01WZ+UURd0PYvw6Yza90Whj1PNR7uaDvJp9D+122rH
6qVjF3eZ88mdwl4aOXIkzy7t2TgzatQoxs61oVOm3XWlaHLpetXKJCDU5pSy
LuaWYv//s/Sf6u3t5ZnAUyWNRGSisTCPlDeFwigWa/fu3c+WMTY5c/nyZQsz
A7HNIpWDPrzhZG3UXPYDm3/58uW+x6BvEyZM0PZS2076014KB4yaSiRf35aW
h3Q+XhJSAwNnnxgzsFG65PieoZUdxB1E35hhtxBn9u/fr3G7u10yGHGMI4YM
zxBfL4RoeesxfaCG6dOns2SHDh3yD8I9rOrW7ukgHzXwK71lIXzOMDPPVplZ
vL8MwPKdap1alYm13/HeJfmR869osbu7W6Xw0qVLfWLUqvil9cqIgtsqMqfc
RkO+E1u4cKFcno334osv9pXRxnxSxYsC77taZTw/lNFlCpYly70R/ynqZVxl
XYBlNMHIVCEFktGZpahifN3t7vUL14M08efLv3a8bgX6jikFOL1o0aKdO3fy
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
IfqkDLBUf6MuuYWT7ve/e/fumTNnDLO0BzSPPU3QnNHRUdhQ2a2m2BXkV16T
FXGDVnx+FgWr5gWz6DD01BMXY4lUHiqgb0g/FwdLly4dGhrKCm8afJZnQVdR
I9KMYO2urq5wjQXJqlHDgEMpUnArONfMmTN5is+C8VlaLpI0vvnmmzNmzOAS
ZjHEsd77JtVl+bEsWbTMMuYFDJ87d258fByUznRD2Jl6Vsj06dP5jXmUotZU
UkvyvyoGl77AjZYIv3LlCrN5+PBh5nrPnj23b9+GRjHpEKh58+Y1NDRAzWiw
evVqWBjvo59BdHnPnTvX3J6+lXA3/illefBwvOmJfyVJkiRJkiRJ/ikCnIAX
GFETib6z3P9iZBpUAmAMuAVRg4JAv5xpamrSsWXoHUjbL9KW0PI3YL9JOaRs
XIqdYiYoc78VsMr2cL2ye4Xf7du387hDhw4ZSoSq4HPgFhRMp4/+HVB3/eiA
atA0KEMk0Ch7tcL5pTJxns5HiuR+5RyAQdA8XynyYNhAtblXzmUKjg8//LC5
udk0feEvs73WK2/7Cp8a9tSBiFVNdYjdMBSAVu/SU6dSlyVtpEWxYSra07mQ
mMeZLJFu4dfciEnDAnowMZp7xIyEpD2AdsqUKaLckVJuzHpN3nrrrXLaxj/+
8Y8QK9CyfDBwr0azzJxVD2B8kCbIGuyJMzDKmzdvVovSBvxZfhwtPaAHVghL
dNq0adgH7G2mhcjrErcYp+pJ8zQ+1ZJJXkaYL5OUHjlyhFm7dOnS17qXf0fw
rKjopzx+/JiJg/hwqbu7m+XEgmSV8n/j1KlTTrQV5Tjm1XvnnXf4ZwU1Y8bp
cNmyZe3t7W5g5JZYAy82wKioniRJkiRJkiRJ8mLijgYjDKUDoKCTJ0+uWbPG
ILGGhgaAzcKFC4HfYGNQ7uLFiwHDVnTilz+hFSCiFStWGOzHMcTB9BQR81Yt
ZVYHLOlry4oax+Iu4+LCR+O+Hhpbgplf+gebcfXixYs815aDg4O0sWpYyJ07
dxYsWABUs8NqUflLt51RgpUi0XrZM2JIpAhNv0m90YLQSe7ssJqndlfPDRs2
fPbZZ6bNd2NaxMJBecyyWCmkpmddkJjR9JKW7vKqDK7+0z3KYPyxsTGPpWDl
ziv5VjvjMPWvMYO62xivG81sTAMudXV10Tj6xw4sADN7c8vAwICJH5+6ooaG
hk6cOBEKW3GspjEj6uvrg2DSYc0uMPmp2oKZ4VYsg40bN5qX0rFj2/3799M5
8Js12djY2NPTM3nyZDqEiE2aNMl8kjX5N1yE3AUgx1wv5gFJ8iwJNyXLyfdL
N+uX8lxpF/9/mOIPP/zwzJkz5lepPil//vOfOXnu3LnW1lZWKRMN116yZIkf
TFzz3Pvaa6/R2/bt2+0BvmZsKv/QeAT/2SL4+cWGaUX1F7s3SZIkSZIkSZKk
LLAwwJLJA3/wgx+AUQ0SM5yMg1dffRWoA9Y1jg6wBNQRZZkdWq+ZtEvoWyky
4On8cpeWRE8vmH40743cd3I0N0PxiPb29t7eXrgMQN0tVO5FMtUhJx8+fAhE
D/5VydP30cD8h2hrrr+s8LlkRaJCWV7cJY2q8bOYn6TeXMETszw2D4thEFRq
bm7Gkvdy8VmoFwkrsADKGGRoxranshjdgv7W0AQ9aPFnNU9HwARFzCe/jB20
OVIqjW3KbgTjw7WjCq10G7Ic7kiJ26xZs7B8BJFyV0dHh4lB9CnwCEiW9LNG
eastw9FoySqyxkF5aEw3C4be4HTXr18v3yuH1Vb6y+ihv78f9aC0TLdrCVNP
nz4dnvXKK6+wLP0tC+D8e9/7HozMAFEDOKW9Vj3TXZvCEf8u4kJ1VbsemDtf
ZOTRo0flxtWimIV8jXe5s7OTmYWJu4zhSiwwFg/se9euXfy5adOmlStXQrVo
tnr16pkzZ/pPgFt0GauDAclMPf+jjE/m3wJEjLlmxvk3wo0fffTRSJHQ48UG
m/hXkiRJkiRJkuTvK7rDQD7QFkByhAiCigHk7mQfHh6mQZRqAiy5Ed5UHhE6
aIfh5YmEEvog/EIuNTACUHdMQGJgNlQIFA2cBmwvX74cKGVUEi0bGhpQA2zm
g+jn4sWL1bxCsduyTG2hAwvFBN7lhBu/KFVAjpOcsTZ0+WQN3xE37tixo9zM
vWxSwsuXL8coHjx4AD9yyAbyOfZqsQmunmEp4smaOsJjY2Ma0HT03s4UmPjC
sdA/43WPVTjRsoKXcckSYOXhazSmGFVNKcmftJQtqiqLwQwhMZsAXTMo0hKj
aRm6wtQwX7qCGpsJIUINaexEczuQmGaV0j7BiE2NueBPjBnJT+7cueOWQ26E
c/H7+uuvW0iau/jzzVwgj6a7Rz3ddghtOE8bLNPX18e6whrBi7/ua5IkKxxe
zikTjc2fWu8vK21vPHnyJGZfvHgxi6erq2tGLqwTzvBCWXHPIuP0bFis33Bc
RSbecWNX+LJRAIZOtyw5+jcKcWJi4rPPPuPq4OAg93KVfiKc9WX4V0qBmCRJ
kiRJkiT53xB3Wp04ccJgPIFW7CoyqscEC8IqXU66RaJCriJcP3bsWFAJSISk
QLgeDi8rarm9QpjE1SjXiyxZsgT0pfML4C0UpyVAC/zW2dm5f/9+6wGJ2OlK
f4r9G8BWHqYPrac/Rut5u1zj3wuJjVrcaJYJDtylRbO33nqLW6CoJhBAf7Qy
u2CUxAq0r+MptpLVz8JIkbowK7Jw8MTYflIufq2eUCSTVJRjJqNnetAHxCho
af4Qs1IwxbIYpobHmbzdWrfw3JkzZ06ZMqWnpyd8mk43c2Hyfyt3NzU1wZF1
nHEcvg9pr7lBNIXkyzkFMAut6ZP1ZlwrUxyewY6ODvV//Pix7FLfFkouWrRI
pypDAJNfunRp2rRp8nr3IepCBdjzS8+TJk2CnUHKfDRTplax6pJ8RYl/CBFR
zDLgpasJNfQttpk+bv5FMPUuNuaC94V1yDvLy2JyS06aHjN6iH8mlSJvzNDQ
EO9yECjXFVPJpBvR+m+50N7KF7yP7e3tweJdwKkEc5IkSZIkSZLkmyluDeMX
JANi2bhxY5YnGPzRj35ULTKQi6+C2oCjIEejo6P+KXHg3vXr148U+RUjkQWQ
KXBUpNrLCoDHGf1fjY2NHIDtQePAZrA0KA7cxYNQafr06fyJSqAy0Jd56bOi
EDAacsbIuvoMeM/aiW9vJiGJSCo/m4/kCQ9jd5gWkJzS3oFwe1bKIpLl+6rk
FGBUhwnJ3bRpU30N4hBNBD1xM53xiuWrqmRv9AOX0ZjGTNb49ZyjqIpljTbN
omWwqgWs9WrxxOu5wGqxMywMg9AVlIqTP/3pT+fNm4fx33//fTMlmoYO+4OB
oWDc0traygFdWTyuWqo9zTwyoUwrkFsqxHOhVPQjQ3RQjAimf+/ePfRn1QGk
IXqQwTlz5lTyinXhyzAo0QVgWntoeF9f3+zZsxmsYZDTclm4cCE38miO3333
XRYPVzlOXrCvIrHJqxw669tRPjaOl5UQOwH5N2KAIq8qy4b/Bi0tLX60cSui
Di+mo8aJVuOzZq0ODAywuuL/RjjN/WzC5HJm+/bt/Dk+Pu5WMlN2SA9fkn+l
FIhJkiRJkiRJkn+AwL8ePnwI7DFjhh+ljfHLCjwT0XRgMygDMBhYZU0ukDkN
xsbGzAIt+DGTnuxM8GZJLJ9YzdNQIADjSZMmgcxB8gBvsDq9GbgItANutbe3
Nzc3g+hA0RCB+EgeRMl8EcBv94nUkJ2n7sQPkBl1ooMwhhMwIi0rRdqK4F/V
vLiz57WSXNIRiSGRTz/9lOGfPn06K4Ih5VNlKDuSl0irlsRL5eTepql0U1V5
CGpOS61hHOkv8iT8egecCNsYQqZjIjb9HT9+HOz64YcfAnd1bGFhrkJ/Jk+e
zEkznNAboBqAjbngR1x1I+HWrVuhOeVI1GqxOYjpOHjw4MWLFx278ZNmejF+
jMYTExPMNWqgA8uPztva2mhj1KL71GrCR02PbwAqijHv6NDU1LRq1Sr6N6sJ
whnYn1v2GJT7BOV9z/JFJoloQ4gtS5f/CVCb/1uIL3JXVxf0h9efd5P3UWtH
ZCmLpLOz04UXbmIuGbzKpK9cuVIPcs2jdUDHPj50iIwu/udhHdKACeXpPNHv
FbA5WBiqhuf6F0VBusS/kiRJkiRJkiTfFjEuUfQVJwEzpgeXXJhPw61hfvHm
0qNHj4BVIPZqkYfQNlmJARmMZ5+eBOCBoABy9qn/wht90BtvvMFDFy9efObM
GUlEVuCr8A3pynE3k5dqfEPh3vKhdl4p8nXUWICB9PX1ORxwJqRDnQ35e/vt
t8vdCvnMxp/lbikM4oOwJEODYqA57Mn0BfH0shGygtyVdQ7FGDXGB2pGDbIy
JREt06ehiUZ7GqCo2y4Yh083mJAOpcYo+c4772Be/YCgXCiwe3asuCRN4yqc
a+HChZBuGA3t6W3fvn23b9+GMQG5jx07xqPRIeIkX3nlFYiPCjsv0HOagauZ
U5MTLlq06PLlyyw2h3P48GFz4LOc3OZTKdJXhllsycI7dOgQj2YU2AeWBwvD
2ugAK0Rh9Ffbar4r7dq1a6yxAwcOLMoFHWicioUpLjwjPCFQ586dO3r0KNTJ
stcGCUN1/RBhbKFRqfD0mCbaw4VNBwo1sxoyXP7+/fu6wO7cuePy257LUymw
mjCnZm7x6fI7y8ezbCwiX8nLshvFGp90rHRgULHv5gsT7ZSCI0mSJEmSJEny
Dxawh0GJSKXIwZ7lNOHChQutra2xRQJAZSQeLGDHjh3gXkOAhEDXr1/3z5Gi
7lW5HjEn//SnP53O5fu5QN+ampoiWYfgv7e3N3aduBulBlnFR+/YgSX7GymK
WMW+pIjoK7tsKkXy/EiEaKYLgw9jf4qewTL/4hLq2UNsAbOMspgTM8K/AKVi
uRi7KSXdkeTuJN2F4Y8TcIY/C/Sb5USMW0zuEUPWz8WfXKK9iDSCPEeKEgBZ
zlmGhoaYIOw8a9YsOE6W53U0gTyshJllvubOnev2rqlTp0bWSl17PIKD9957
j7uYOIbGGrhy5QrqudlH3wT9w7DgX3AiQLhM0MR3PNfM8GD1np4ea5PpHOnv
70e3yZMng6uxHhi+UgijQFs0gRdLBo3VpFl7e7vBbNW8kBxErKOjgwaNjY1G
KqK27kXD5Cw/x4qlGeuKTiAdkTzzuyMRaqvbiBn53ve+x3Rs2LABRjw4OKhB
MFRLSwvv9eeff54VqThh4kyHe+5Y2K728+fPP3z4UG/UqVOnYMHcyFKBf+k4
6+7uZjFkeYnk48ePx5eBet1YG7Q3O6vMvZqnr9f/znvR0NCgb93FGR95GEWM
LvGvJEmSJEmSJMm3USRZIG3dSfpfAFGAMd0WYG/j4kxFDi4CdQOcjCYCp4Gl
7YozxoyBis2jrj8IOAdU/stf/rJ7924QIFfdmjRS1ETmrtholuXIShdP+Yx/
1niy9P7o5Yn0GiNFYdYyMENzQDiQEn0iN4gZHvwzohOzJ/mXT6kWdZB5nF4k
Rg3Onz59OghfSggKlU6KIaUkPNfQvqwIsvpBLnJPO49QRoFoVuT0ELtiioi6
jMTyBkOG2ePYuE0ojBWUFi9erGXQgQ65F+yNEZqbm93HZ8GmcnLFXxRl1FgV
2AH+xbzD1OBuVmrTRCN55QJmn/UACIciwYN4CuAcemWJMW6fMmUKaqxZs4ZH
L1y4kEv0A3fjEnarWYoowyVWi2qUpxu07/YxbE4zfjkG/1vPGk3cLoSVWLHb
tm1jPe/atevq1auWzDblPm24Rasijx8//rovyzdZqkWWDOsvhCNVFiZnZ67h
X8PDw4cOHZo3bx4veJbvA4Wolj1KkilfKNaeXyoQyDuWh/8ePnxYP9rq1auZ
euxMG9YJDYL0xScCIx5Dw/h+wv8E+oe/myD0F0VFv/A4W76Z6fZfhHtC/Y8R
fm27ejGLJf6VJEmSJEmSJPknihSsv78fkANCAz/LJrwK4gJFG9V24sQJs9WZ
xoE/dUC4Kye4gF+qgfqzZs3iKigdcA4kfvXVV8HkEAQ/XIPuwNumEI+8fLKY
ms/aNACnlaPUBHI1uRCz0p6p+PIvK5EZ1TQOyuOx5MJci9EmskNE3gl79llw
Sc6YVgKJGEhDFrOCE3ELENe08OGhK6NHWVV4skxKycmVK1dq1eCAMmU3OukE
DNbW2dm5b98+UCW2gupCeCFH8CYI1MmTJ1EAtrJgwYK1a9dOnToVbaG9cKLY
WSbRjtT6mzdvhs7s37+fW1gVR44cYQal3rQU0re1tYHkuWoyeVMaMq30w/CZ
9D179pjqEK4Kbv/Nb37T2tq6ZMmScqG3cGiiZ9lZGRwctQ8ePIgyjCvLkyh+
9tln4+PjjtoKC0bPshpZk3T1wQcfQDToIfyqDx8+RB+LVpvhwY8P32oQjvLu
eovFyapgTWIHSY0xq340iIIO2IqJs66WC9KXulLajejrwFUWBla6fv36lStX
oEswLxsz6RAiOoEac6mSF2TngEUSXmNnkCmIzyNGk6KVbkrk9OnTy5cvhxqz
JBjOn3KhW1eCwY0ufr3V/N66dStL/CtJkiRJkiRJ8i2X3//+9yY2B1wBg+/c
uZMVmzVMN20UkI4YY8nc6vVGLvpTwEKQNRHv6lwM7RsYGJg2bdqiRYsWLlzI
r1QLtPb973+fZxmc5kndRvWYqlqUG5NSmesvK7Z9PWdcshj9TdaxqsFsQW30
o3EAOAzQ7l2BAOWGWfFVn6dDJ5ubm8NQZbdUbEkD8N+8eROsC401vFBXWo07
TzJlGJ6AGe6jF8DhV0r7wuJeCAWzw6wBYs1w4kRw0N3dDQXD5h0dHbRvygVk
Dh2GEMGSaOMeLvmXJbl57ty5c41LRGdgtsWRIVC0hH9xiZbme799+zaQm+dO
mjSJBjT+Xi48IioOcB6Wx4IJnsjYP//8c2F58GiEM+VE5ZUnU6xA9FhI0C60
Mu2DxEECot2cL2yFWSB66CNiz3L0jokePHgwNDSETSCkKLlhw4be3l4oG+zs
W0THUNKUFDBZ6C1kx9jaWFqVPKKYKbYg8ttvvw03d8snBjRpCVNpcTfsqV+J
hWRAIHc5I7GP0uDPkaLU3ccff3zmzBl3d9Lm/fffhyiZjRPh0fTvOxKfGvQj
cwllmAW3BHI7ryRqQJbpwZMIkxuD5V6alYdfybPNjKQSzEmSJEmSJEmSb7lc
v34dXASrAriCaqzmA6YC/Bgj5/dn3UM9PT1jY2NcOnr06Jw5cwTktAe5zZw5
k1+w+oIFC7g9MsBDwWBqtOT40qVLNDDVw4EDB3bt2kU/3L5161aBpYxAxcIb
EgC+rPZXAWBBhSJ9R7jbIqYu2KX8K8KxAKXwoCBc0acGYQhgYH1SANQLFy6o
ZBRWNv5txYoV//3f/z06Ogrs96HYpFyoOiviG7GP5zdu3AgpwMJMih2qXthE
LyG/TBlIG7O3tbXNnz9/27ZtmBS2giVBtgYxcgvqwYwwO1QF7L13795Vq1ZB
nSzBjIbCWox//Phx/tyzZ097ezsEiqswF9i0vlFoHWQKPJ/lIJancx7+xSU6
pzf+5BeOw1hQzDSG5dlEVX0r+lkqpYyUEa42UkqoEh7Ae/fu0ZWbB8+ePTuS
Z9LjKZycNWuW8xXxombyR1vr9kYuDq5ChzGRWe7hhixUSLSrzphbROb7TSNl
eohQWztLNk1RiP0XL14ci4Rh8iJzEtLNYmO+WFFYg1/9gFFTW7JTyYvrWYGL
bv1qUcmrS1hgIjyw3IWVOMBKvOA8FOOzVqF1cFsexALjJKtdT7FxsywtCwtm
ucN9JK/KzVvPCv80F/1fas4/BJZW0K56CmbPiX8lSZIkSZIkSb7VAhoBVwPq
gOWgqayUucK9PxF4hoC1gFX379/fsmXLW7kAYoHoelXcjAPCB/ALg/26bnUq
kR6YjWft3r2bzqEGcJxr167BX8Bmjx49GhgYkOsBLA2Fepaf66vkuIvby/1E
5JvFyICjxvLRoZVhpWlTpkzRHVBWIBx2AE70h/UIF/XfGWplkm0ZRCVPLykZ
CXeP1CNiL02UIbkwTYf5TyAd58+fD54Yok+BXyzPdNy6dYsGqNrY2IhhYbh3
795FMVP38wg4F9OBtgJXFOYRGzZsYCIWLVrU1dWlGS9evPiXv/zFkFSmG8vw
9Nu3b//xj39khXAJ9M5daGsP5qVsaWnhWZYAa2hoYAbpjXu5xI2PHz+G06n2
wYMHQdphzGq+3a8cXKrP1Jg6OVHN1K9cuRJ8bpSd0Y9wKDeamdtEpxgjMigU
GsLK5BZGwaBQ+5NPPrEUGuphPbP5cbvpI8K88gIPrhQykqeUQT7LRWqgBGH8
f3Xy/PX5VUTmxQANEobeQvxh3MwylIoFoKNWxsSyhHYx77xZW7duxUr8aRLL
LGfi8E3M4niNHmRcTJ+xhaxVOmTBaHxdVLFTkmPeU56FPlx65513enp6aHb1
6lWWCld37NiBMd3bqLdahhj2gXYxBbB7VgUsjKExOygjJ0Ju5+KGsvJ0hDV0
hSf+lSRJkiRJkiT5tguABMoAfpbUCO9BOIDbPXv2gKl0oMyYMQNWcvPmzQDe
ek9kE5s3b6bZtGnToBscAMi///3vc4v5KBD5GgfgKzeMgAaBbbA5ngUM6+3t
pXPwc/hHamrFlqX6tOJfNfJU/lUWQbtFjfVMQRtNKW8QXWQhCFLAJRpDMcC0
ZsjP8r1j4egpP05vAgaMx1WKNAXlvW/2/MUXXxj+B7i1PNO5c+c4A7itFDXa
wOEHDhzo6+tjXg4fPswtkd8e+I0ONMCMYGZAuJu8zN7PI+iTicbyQFyoUCVP
sWhuRkvCRWUot1xxzNSEMwgg3d3dDWdBK+kJ+kAHWDasDYxGVxB5faNAdAM7
AdtOFkQgXF1lp2TElGalTCDlTUll06kz5F0q9/Of/9whM1hWGr+6gRgj/aCt
t9AbZMT6C/ALGBwzAg2BAkgrmGVGqm6QGsjmU9dbcGqWrj4gJVaIKUN/UhIp
uTukalw5X0Wci1hLLE4oLQcMDb68fv16xouF+XP58uX8yUjDp8kLxTvoZKk5
C4lFcv36dY4ZO3w2chVG+CL3hiuNPzEXrC3L06RAZgcHB+mN+WUWUMbYYBbh
+++/z9WYI1/M//zP/5QYhn06OjpYIaw3LllbWScjv3/NhWNpeM1Hj6Bgo6Oj
L8m/Ir9rkiRJkiRJkiTJP1fM3qAbSB8EPAgCAs9ya88rr7zCn6DoH/7whzAv
y/guXrzY27nx7Nmzb7755vTp06dOnSp5MWYMXGd0E1idfvbu3ct50C+wDVTs
1/Usx8weiOggOObGF/FGSo1Q+Kvwr3JK/KfyOCmPsXw+C/6IkjNnzmQUwGbQ
rJvIyo4buoJ8AXf109GJpqvXTTia5ZkY4zhi7criniYBbSXPQwgc1eGCubgU
wWCVvFQTppbHRcKEar5Z7Pjx42+//bZaYVunUn8ctBeDgJNBs3riUNu4x2qe
OEXeR1fXrl0TtMPU5A50xXpgRlQsy/1lrI3GxkYg+qJFi6A/s2bNmjRpEssD
5M/0MbnwFFZINd+jtGzZMvNbhkQKEecX5cuRmeVJt4cw1KZNmzg5Pj5e48gw
gzqWOXXq1PDwMHQjGN/p06dhWLA22ISM791336Uf1Fu1ahWPhpUYdBp7ALPc
BXn37l0ztMfMwlwsoYVZsAYmYlweM1k3btyod69geUckC/uK+J8HoTP6wLkY
iwwRuXPnTmdnJzOCefkTNsp4mQKIub5j5m5oaEgCyFXoEj1U8wrjzc3N8+bN
M/khJorw2koeg8r8YsNw43KStccbbYku6O2+ffswIE+v5qk2TJlIS8tAxFcF
zV6TUPTBgweQQYwDcWPV8R/gWf7r+hyV1XyXZZaXRH/J/V+JfyVJkiRJkiRJ
vjkSRcHcfQ9A2rx5M+Ctra1typQpZmOAlbifi2NY2IYNGwBLAFRRpdF0tASH
w84gMiBAaBfg3OQMnJzIRUwLhQn+FXntxFcgNNQofwmvJ2L1FZZrJHxDBllZ
mcszZmNzz1eltB2MgfNo1L506RLMIsoZ1/Qs/qRPc80Z+VZuoG7BuUSqAThH
SskVw7clvYqTwmB0lhHop0OA1m7ksc9qnnoCS2ork65z1Q13crpy5z7LWEc3
6JnbEEYJ1YJkjeSFcRk7UBmqhcX4pVsAMLxMJ4643UQWGzduBKIzv/TDGe6l
zYkTJ0Ds0BmWSpa7QgDtOrbCjVgupR3Ev6Z0lJMe+R41GvTHynQ1ovcWPfv7
+5kU9Jk9ezbL+ObNm1z9wx/+wF2oIdfgJL9duUAku7u7serg4CBMDQ5rUn3Y
CnZAJbriJJSzp6dnJN+iKKNZnws8iJHSA+fhcbrA4BrQMSvExUKF+Eiuv9QX
9rOf/YzGS5YsQX8szKNZbBITF7CJUKTYhw8f5s2Sucd3BiP6uDdsVckz+cM6
t2zZoo/b5JzBcLmX1eWqc/kxOt53oxwtUx65Oj2ICFLf9FjwzLjvTgQiskLm
zp1rog/Gsnz58vrX6jliwOeOHTsS/0qSJEmSJEmS/CsJyMQdHPxaJvX9998H
8wiwe3t7AdVuKQJZnTx5UsfWrFmzbty4keXIEBgP/4Jwvfnmm01NTdA0jgHh
0jd42dq1a03ukZX4V7WUDYDOTWsvAuQgOIgSRCxy3D1LgHlSDz/Ox7YUbixn
OwxuYlAc6i1YsADKqf8uHlcTwchIw7cluasPQQxH2H/mUi3KJBlXGd692MsW
SefCcRM4UzbKVQth79mzx7142H/v3r2CYW/nFmsx/1sur732Gg0iV3l5CDRm
CqSZViJjyoDr/AL4oV2widjvA/niEj1YCvnMmTPumIvi2sy424iyIlUmZoGR
MXAAf5lVyb8qRbGAcMFUijIENckwo3qUYXLi+adOPZbRK4SGmpGuRkdHIWI+
FD6invfu3ZNYcWwtKucaziK3op8VK1bAwhjgnDlzONA7OZLnqOGuU6dORTAt
i+HDDz+Ec8ENjalzdCb382sDdmPZW62ASxgz0q3HjBuMxwpsb2+HrcBoOH/w
4EF0njp1KvZcvXr1tm3beCgvI2QqKtOFAxShWUw05xnj8PAwxJNVzS+m441m
UMG5dKGaK2PdunWSu9ilSIe8CxbgtmXMhc1QgGUwNRcOrP3n5wI/AtCAM6w0
liKdP3r0yM5ZV24wrBedv27E41jSJNejZyn8c17850jiX0mSJEmSJEmSb5p8
8sknixcvNhm1IEdAuGjRInAssHZoaMhLYEvwW3d3t+kNe3p6gJdWCAJrQQEs
+4UYwSgFA9YCn8Bpgn/5l2nAVWCkqGLsnzIUoFe1bgNXJc9uwYO4+lQ0Lify
O3+lyP1eebJGsxBdtAzUBJoCWXXemToj4g9rNiWZdr6S7yAbyZNvl/1xQehG
iuLO4diKS2VVrSmcFZ6gCMyroS3uTXObGH9iTOYCdF0uplzJM2B0dXWBma9e
vSo4f1asV5ZzlojPLMdGRpYJVWWCTGq3b98+6TMWoGdYgHMNumaYZquAuMF0
uL21tRWm09zcHFOpF6xm7JV8HxYGH3ky4V7ZoRPCdEP3TJvvRra45JrM8nBW
4wzDzgMDA/Pnz4fRoBJ2g8i4x42W2AptAfxmfmAqR4qSwSxRLKyS9gN9WLVq
lYSiJtSwWqrvVsm3iaHemjVrIFPj4+Majae4+RFCV5ONk/HS2DMY9s6dOw7t
9OnT2JC3DArMZB06dIhhGnPIS8f65I2L2ZdPYcmTJ0/6ZQDySGMUZuD8GVll
9J0ZFKrn1FVUKfZdamHmxbjQ8MnSP3Pt22SAsTsoac+/DrNf8oKjg4UAWK5R
LpBuueReRUOOw80aCSeNlTVlCg+VkyLQVZ5orTqrB9bLyLPFIUR+myRJkiRJ
kiRJkm+OuLPmBz/4QYBhw+30ZM2aNWvevHmAQ1kJ2PLy5cvG9QGNAGBALFiM
W8amTp3a0NAwadIkyRdQEDjX0tICxHXv1e3bt8Glkf1AzPyLoopxSPUZu71o
uWfPnrGxMXMdlAmLt+j5Atb66b7cScTjRXZ6MCrgEN1oP336dEAjME+Xny31
ysUjxKv6TcSxNXRJTmeq8EDI2TPygciDsoJDRYIOr/ogORoKu18PjMrAwaUW
1fIqczFS7BTTLYKFdSI8Z9LLcx3P5RaoMZ2EQwfSgXH80/ZQDIk2TNwlcfHi
RVRdsmQJGs6ePZv25ku3W/ls/dPd4FYziUEoRkqJxyt5AgrYxMyZM4HTW7du
ZdUxazdu3EAZyzRbPS36NxwOSnLixIm2tjadvLt377YScW9vr7k4eBCLUwaK
nuh/8+ZNFqSMjGbwPrtinUAuym7ZrKjrXZbz58/zHnGeZV8mCOH6LC9X1Fu5
ciULD6rIG8FARvLE+LInc5NqXi7pdcIIaMuLuWDBAp7CWDo7O6GT/GIiRuc7
BfGBApse5C9/+Ys2jOrM+rv9M5ThLmkUtuXXTCP79+9nOGaq0UlNn7zsPN0U
PX4n4Sm+R9iHZr4phrzS7YoVK4aGhgxXdjshYxzJ9zCynlm9EaVpmzCv+xZd
Bs+KPa4+WxL/SpIkSZIkSZJ8kwUKdujQIYHib37zG7PGLV269MKFCyAogNAf
/vCHLIe1wDwAsAjH+DRQFi0t8gsqg8Lw6xYwsCWw3AgxGBygF0THXfHd22pc
9dupsmdwFoCcu3vQJKLUwsnlx3ZutCxs9mRmwiApgfHcFJblsYXmn6cr8Kcs
wHgqGYQONd0EOlli01boZqRcpahypXoWVyo/NETPS/lMUBV9RjH8o0ePAnoF
qMByKDC/Wj4cN9EDYF7zPj/yqoYLVIoIz9WrV4dhR/K6WhBeFsD9XDj5+eef
szbWrVtnZngYyo9//GMWDNN96dIliIMZyB14VtBeyUiZjf77kyWYvRp73By7
1kZYYDA7ev75z39OA2YNCsDSmjdvXrnoWIhn7AScz3rALEBxtNq4cSMElhHB
y9555x1JonyZnvXPjo6OQtY4aaUziBLnOaZbGMcXufjdoGaJPuu7gcK8oAx8
amxsDFJjGOfy5cuZ3Ie50C1vh1vJ7A3D7sqF18ovJBgKHsoxi7OxsbGjo8ME
hlBR1gmvGD2wQtyKVS6yFg7cShH2Wcl3xmFMNwDCVcMdxjLgFTbdikO2Hrf6
YExZPzqjKiY1+UYQH95oIzyjDgV/wrx0BXIXphgcHIQ2Hjx4UMcra7WciD7L
+Vds//zSvZ/PkhR/mCRJkiRJkiT5xsrPfvYzoA5YSIwH2N63b58b881FBq4D
Mpl/oKWlZefOnYAooR2cyHyJ3ytELuZ2MKAyt/T09KxYsYJ+rKjrQ+U1ADw9
TRE4lD0JZT0G1AH7Q+EyQZNzWbnMbSOygPh4HlyjhtaJLZctWwbMXrNmDUgS
QMtAFi5cKMT997zeNNhbfB5Q3/1lpqPPimpWNihvmclyX0D27OQhZucWuLrp
jD/LPiMO3nrrrVWrVh0+fDjL8SRjNGM8ONxM3brSKkUVXRoPDw/b2ECv+uc+
lSnwXG4ceTJzCKjYAlJ638DeEB8OdFSh84YNGxbngrkgFNjNeytPpk2QlIX9
xf/luagUe+UqpdBK+awhbYx37ty5EBYOsAlnmpubJ0+eHJkVnyoOB2K4ZcsW
KSQ85fTp0/rCIvwVNgQBqbn3R7kYLMqvdZwZKbyPJc17EZW/TLJhEfNg3woP
lXrQfmkuvBrbtm3Tg2nPjNG3gAGiqlP2+PFjTpoYhCEbBIiqeqV5m+hkypQp
XMLsixYtYtF+/PHHUDC9w/GhoFrKz8kll6gBhO6L5GTUxfM7BsfeSGNa2iwi
ZrU2g5UxKeE15n3nJaJPyLuZFfknoD+OlxQ7GG3Y29s7Pj5usbOnTp9ussgn
86z5fb4k/pUkSZIkSZIk+cYKGBJc6jGIhePOzk7BMNgMLAR88pJJ3qAJlvfi
5LVr114pBJQIfwGEDw0NAcNMVN7Y2Dh9+nR3u8yZMyfQlPFLcpmsFCIoB3QX
lX+K8egqFC5jS4mPQJr+gaNAWb/Y1zhHangQt4MJaYluQER9BNyL5idPnjQi
y51KEawVEqkFZSL8RsaGMssLgB3egdiiolcobqENdKnGKcbt6ADthRu6pYge
wOQrV64E2EfonenHAzObgOI5jrB6/jUxMWEB6BqfjpGWkcFPtuXWLRTgobI/
/zx48CD8yJZSm9iTFRlIvCr/Gim2yGUlYB8esSz3ZJkE8oe5GEGHNDQ0+Fng
4sWLrLFyTbEa/StFhbv9+/fDbmSvWZ7vHfuYhoIx6v0sp8SnHyudjeQFr/WQ
wn1o09LS8v7779PDjRs3zBpx7949+B2riOGz/LhRBmS8X6gka8Z6limXxkrW
eEc4D3mBkjhx2HP37t0QQ4P9WKXMwgcffABPZNSmQ+GN483CGhwsW7askm9D
g8GZdt6IPldafMSAuNEVPJoDNzO6Z9BE8cYluu3LSFoLFpSXfRyjavlDAW8Q
d0Ew29vbrQrHHPHOMkFww1WrVvFErLR161YsiQ15y1jJg4OD8rUaIqZhIzFI
9kKS+FeSJEmSJEmS5JssNVjFIKWsSG1dk3xAXtbV1aWfK0T/16JFi/r6+vgF
T5qugZPAuZrUELH1JgLGrGpUfXJrUmB4K1uFAvGVPislsjB0MOIAa1hGPZBj
FEBECAt3AWvfffdd6zKPFAkS1RMcXjbOSF5AOchjNd8RFonaPG82OTAzVgIS
h3cvXAZlNfhzx44dUQw3xKLPOvggPnfu3DEKkce5ycsaXjTD4FY349er5Zmt
cYTVWAatwMwGlNYvjJGi4hjHAHKL/8KOMVe5h8ePH/N0qDcUMiaOEelYKVs+
qFY132kovS1TP7NJGORmSxM/6taU6/3qV78CybshTnrojPPo0dHRrETnTWBi
51yC0Th2SJM5CU3Dbn0BWTzdwhHUH7Pv2bMHldwVxbyPjY1VioR+lhVWTwZO
51APb9evdOHChahNhonguYzFDwXwEQ54rlG4CLMAs+7u7saM9NPb2wvvo31r
ays8i1X61ltvsVxPnTqlqbmRV4YHWQaCrlCDq3BAeBBayYP8hiCX0XXofrdg
wR77fUAKT3sXrRkUI919f39/Nc/m4Yo9c+YMIzKrBpNiwkmIGM1YJHrZ+D8A
z7IOBSOCG0Jj29ra0NBCzzIvbkdVo0ORffv28ThHlPhXkiRJkiRJkuRfVcpw
JUByvZgX2sq/fpwP/mUt5jiYPHmy5AswVt8PqC8rqqwqIDGztNnA7T8RyQbO
vHXrFtjPqKQyWxG9C7wN5arUVQ176oi4CxwISQSpwhYbGho4PnHiRLmG165d
u2gGMuRAP1cwhSiHZMoFxgIIDycXmmClBw8eHDx4UOD6LMtX8iJo9fxL1x6X
gKyYEYxNPwa8DQ4OAlP1fwFcLWSmzihTX3OqBouWd2CZne9ZuqkGoBpqMHXq
VLcHwsJiM5EzBRTHgCogoQ63i2Q5OFdkRCxHG46Ucu8zFiYChhLLRobiriJv
sfbW2bNnzbGgnzEraJc+RzUR3usGUhkYii5CMP9IUZStTO1RQMLCeRYDaki0
Y2bRBHpy7tw5qx7zCAZoegrbSOUkPmvWrLFq86ZNm+Bxy5Yt46S90XPoBjdh
yNjWSt+8VtzY0tICizFphtTmvffewxS0YcVu27aNGWFhQMr45V40gQRxadq0
abpW+ZPbdZPBJRcuXMhbyVWoIis/Ygst4Y3CesF8wbndFBy+iVHZwZyEdPLD
H/6QKeC9+FUuNIZCYpljx47RgEe4Tw21daMzClZRZ2cnWvF0VimqWqHM4uC6
1y2j5jeNl+FfsML6AtlJkiRJkiRJkiTfKAnE8iy2AgYDNMY+Lzd5mZAcdhCZ
5/3lz76+PnBpeetWiOW3ynnI4ylxHJuAdG2ARa1vVQbMgfmjAixYzu0q5d1M
lSJ7YY0aAwMDljQCo4JO6bmpqYmTsiGwJWAS8AxJATQal1XOVWjQGo8TlnNV
3hF7l0xTUL+9qCwRtVgTf/jo0SOUce/bihUrsCcQ/dq1ayhgFg6dBRxDx8wc
mD37s78J6JxfHwcBAQy7w6t+rnUzIYwCFC2nBmNjKGAzWB2DXL58+fTp0ywJ
wD+6MXwny31tWbFXrloqqE1vBl4avxqzE7SlmmcXMfe43IT+u7u7OWmqTEMu
Oc+8mAawHDcIj9CnFjUIyoMKvrNhwwYGwlO2bt1aqduMZmCqLkV5B2vPkmfm
HqwWNbyGhoa4akb31tZWZgpS414tF0CEm+rQYaXpg7OB7I+eUcY3aM+ePbRh
DUNyTalRLXKJZHkhAF4BzYtZWBWsT/7kdZsyZYr5PJkjiB7zwu3WQEeN1atX
85RPPvmEbjs6OpYsWYIacDrjbGFD3MV5Nee15aqkUgOywnXY8VDO00Df5d27
d61NhhlRjKcYrmz2EvgjQ4aWVvPMnOYtqeSZCemTd4q7eG6lyNAYYboI7+DI
y+XfSPwrSZIkSZIkSfKtEEFLPeYBCPX09ADYIFxgs8mTJ4MY5VmysN7eXne+
cH7atGmeB5hxSZIiuALIwSAqed65cqK/ZwktQXTt7e1QIbdBhYMsK3iEG4VG
SkkOUcM6yOGOif1iNU8E3zIcsKKZ8xcsWODoRPig9IsXL7rBqq2tTYUZQrAJ
MTmoEhxeLWW5N2wS5gU5AiHfvn37OVCQTmITU031Z71FELEZuWB/g8pgGePj
4/SsFwx9Dh8+bEyaQXFPfZChYobMIfCF+uQGPF0PxeLFi916tnnzZh1woGvg
9NmzZ03njqocm04QpA17deBBLizhVEPkY0NfefeQ3MpSdLIb/Szca5QgajQ3
NzM1KOAscN7dUpEE0hToMvHID+9IaxyXWRGzCg3Rh+vTR0pbDjmAcfDL1a6u
rhqOFr3FeR9kierIqSiFsTGrkav0xjSVeaKMHmtzo0+HE8nE0VAGxEjVilus
tiZJPHPmTENDA6uUB7E86HzRokXYoSZsmEf4LvAe8Z4y76ZJlBDR8+joqCvQ
DDASHx1/ZW8v1BJNYHBMN4qNjY1l+UYwp4kDXlK5uQY/ePCgIYWDg4MsPN4F
Vg4Df/z48fHjx6GHKGPhZt182lAi5lv2MvzLhJZJkiRJkiRJkiTfcLHaVI3X
ACh18uTJOXPmgBI7OjoMLIzwQqmWOQpey4U/oWD6azhvySp3RW3btg00S0vQ
owD7ORQMZQB14Dd3iNASzFaTvTxizxSv0hJcF8CYAzMJlKv0KkDKdevWwR1O
nDhh/bLGxkb0ByTTeGJiIss5GoATxlH2oOnhgg78f4WYxV0voS4PBnj+/Hlo
S3hM6oVHWHUrrB0UrOyFpA34/NKlSygTHiueAqAVonPy3r17QGJImQWkniXw
r+HhYabAWmxloZ+ombVv3z7gMWcgKdCTuXPnirF9FkT4d7/73a1bt0wMCOku
B/IFz41MiTGWegqsT0Q+y3OhGLEwuKQPCONDjVkzRrIZDhoWk3Z5I1bSpZIV
Sf9CpfKq1h9qZB1dMQRrwIVzE87rvUHl4nHcgkGsg2CIozvdGAKUjWNrENM/
a2l9LkbcvZHLvHnzLKdV4/adOnUq0yf1MKyRcbF4li1bZr1j3ixeKN1kk3OB
bXEXvyxjqydzL/QZE1n9WZ7rBwT3YGrn2BGW5YGg5rfXgC5mKzL7ZumXpHMG
EsaEwbl+rK3M8bvvvovOECvaQAylmVAtfmX9tPnzn//Mu2aKG6yEuRig5pKl
Vuok8a8kSZIkSZIkyb+86CXx2Mg6oKbheZApYDCAsOz8Kuc/BB9yHi4TvIw/
d+zYET6FGq9HeW+OCf0icd/t27eBkdE+NviA9wBvWUG1Yj9R9mRuByO+4thc
B/XloiyaDJxGZ9Ag3NDISZDzpk2bQlUQ44EDB5qamvS+8RQag2bdv1bNUymC
2B1gpAGx/ywPG6vf3pXlqPX69euMtHyyWiTPrz6Zh19uIo2Nxhjt3LlzR48e
lZTJWL90frGhjo/yQ7EqwwQ2Q3bA/4ODg3RF/9ATHg3anz9//rVr1xy+7BJS
xsBZFaDoLIflWbEJy7kAA8u/FIdQpkJ0iEnDYcdEoAOEAovRHnLqjZCLKDDN
qtAHZP4NblH5GTNmsPxmzZqlX0b3UwywzPuC33GSWUOlt3KBCEDGHZ3a2pJR
sIb7+vrcD/V/nhR9TybxM/0IQ4YQ8ZrwsmDMi7k0NzejdmtrK0qaNcUsLgp/
wqQYpvu/UObgwYO6q+Ay2g1itXnzZszFgyDFGB+t/AzC2qZnuuVxLAaYOIqZ
jl47tLS0DA0N8SfmiloAlbxcl0kR4a08nQfxIqA/PBEaTjNOMiP6486fP6/d
LPvFgeuNJ65atQpVWYr6i7nL0aEPJ8ufFxgUqwtT0z/Ko5gJ8Hm5YvGEt7ry
ZCGDry7lf2JJkiRJkiRJkiTffHEPUWxOaWhoAFCVc2tEqg33fMUl+AtgDJgK
Jo9mxqrVB4DV+CPWr18P1gJdX7hwofKM7B9ZnpsaJOluo+zJVBLlu2LfjV4J
8CSQ2NRtlWK3kUFofv+P/I0OBIIJBqafjz76CGQLNjZEyk09pgvwcQZx0bNX
+/v7Izt9eSdUvacP8gVOznKsWB8xaLflTVJu+YFo1MQoKvA4/RFf+tk/NoiF
r+3x48e//e1veRy8TKYDJaQN6mFtGM3KlSsZDmYB/z98+PBxLjpWrL/MjFTy
ktPSXmkpZ7C5nNfZ0eZOwf79+6V41Xyvma4Zg9AwGiMFlnd3dwPsly5d6pYl
+g+ayQH8Ynh4WCtBEqEnTA18kNmB+IDw5RQ8AlLA0Bx14Hk9mDyLB3GX6da5
amaJgYEB04DMnDkTmsAYGSkc4caNGzWLs5KnA+VZ3IKq03LhT25fvnz5/ZIc
P3589uzZ8CaeBX/BOP9WCMem9cBcsCrT1yNdubACeYncxiVfw1bQYS5hE+gq
ixM9+ZNuWbrz5s3jOKpowXGwCVNGh9yIeuGi5cBwQYYgO7PE2MKFCzds2MBw
6By7wfgwo3s2mTUWOY/zJJZHPboyEQddwc5gWLzF+t2gzOrMfwaecvr0aRpj
TGzb2NiozxHa6yeLMnkvu02/rqTkh0mSJEmSJEmSb50IugA/VrydMWNGbPUC
4IHQym4v0JrHYEvAHsiTNuECA2UdO3YMEnTz5k3LLseenZAIFXs+4qIBWvmR
X25loJQ4syZsMrYaoT9IEoy3Zs0a01lYmwkYiVZA3wMHDpTdecZVGjzGiDjW
wUEnEA0B/KNHj8rPynJgD0A1uwKN3aYUIzWZfDjgJiYmpAaixPHxcSxTn+cf
IhA9GAtncN1Tg7JEv/Ca58cf1hC0U6dONTc3g5bN4nglF0tvc5KxQDo0rzbB
+DFqZoHZhxQYUBdqV55Me6J/U7Qf55k4GJOTrksFtiWPYxQsmHfeecfs8VzS
qbRlyxbTO/z1r3/ll2NrZDNkM9Kj8549e4D0TjH6oy0nr169ev78eduPlCqA
Q2ZhBxjfitum/jNUj7mmn2XLls3JhYmQNTC/MBS4CWxLcu3MVvKUEQYf0hXG
5KVgXdVYnhdHJ2bEsrpRy4JZ7uFi+emWMs4Q7o8yLBiMzxltaygm7Z0RiB66
xUZLPwVEnCENoH6LFy/mxTRvBvei9ujoKJrEJ4IsT0fDvSwAI37hrQyE+W1r
a7NSHiSOlQ8FM20mnAvNOXbxMEE8jungJFblRi65KQxLXrt2DUZPn7A8aB0D
xFaW7Zb/6j5O/CtJkiRJkiRJ8p0VUO6Pf/xj0CAIEFhopgJQE9gJpKfnS9eA
oBEB9y5YsADENTY2BhI7ceIEQBqIZQK9adOmgSRhQ2CtKECstwjUB4Tet2+f
wEkWYLCZx25pMSLOgshCdx1Y9Bm1m8PzZQ5tBNAbxZTdBSMPssgslxxOOZZS
OuboJk2aRA+qWnZIlUXcyJANh8uKnH6A1dj3xAGmcBdb7PmyPhdgVYOXU8dX
irxw4N5IB4eqpiyowaUGXJ07d84QwWfJU3EpT9EHp0BbwvKOhT+xHqPTecEx
dAb2NH/+fNaGTisGHq6uCPyLuroya1tywDqZPXs2C4mnvPfeezAvGMTKlSvp
HMLLIoF88esuqpDe3l4eAQVgIqykjGIXSsISQjG0oiuhu7uTZG2IMbQdHR2u
lt27d/Nc+oRP8WgzeCBv5oKdDx8+LK836yZ/opXp4q1wB6ORuBk0yGpxX5Uh
qZws25lRmweDriAd8EqDbI2zRXnz21gcGXt+ryQfffQRN6Jwf38/CjMQjAap
WbVq1SeffAK3Qg23XGW5U5geLH9m1WnGbjkt+COcyIQqI3mGeYuFeQuD5Qwz
wlqSV9Jze3s78w5vMp2IaVLgVr6w+hw5zwE2kYVZw511C8OlGTrwJ8cHDx7E
SoyCfxH6kTGCtJfnWjkdJXlrGP7LbP5K/CtJkiRJkiRJ8i2Vq1evAjXBWlYO
snosqAl8C+gCK4Jmg7OAoACoMIVyD7GJScxpajhQKGiQXz1Thq6JWk0dr8R2
sKxwE2SlTIZG6HV1dfmpv7yzLFCoZ/7jP/7jyJEjHodTLMt9UgwHREoPQFmG
4Ed44CLolPMWL5Og1SRwKI9O0ufX+/KmrYi40+VnHhKdPuVxlR1S169fB6/W
8Ee3HUU2dToxWA728ddc6MEUB/RWH5pYlqdGJ8bWPEXyleUOtfv376s/Z0Dg
TNaSJUswCLCZEUFkQNoRWSp54ao772SgYbSwvJn0YOjcDpKfM2cOswCPY/GY
kBxmAYdibUjoXBKslkOHDtkbdOnu3buY0RT0o6Oj0ARMBCGCyaqt4+KANYyS
tGQ4rFta8sSduUC+4GtyB11sGJZ5pwFUAmVYOQ5B2o71YC5oC6/k0rZt26BU
NHZqGLgZIB2428fCyNzCYA8cOMAAjVRk+MZ5qiorkEfPmzcPDTHja6+9Nn36
9MhyM2nSpNW5NDc3009bW5sLeHh4mKdgK/oMb5FePPPh8Dj4Dj3T244dOyB3
aM5JlL9165ZBmFkRjclwaLl//36Wky453zu3Z2JnLAZ1ovPoB9NhEzgaxsc+
pjQ8ceKE3K2lpUV+zYJhgCjGKqI3O2F1ceArxnP9qlDJE9SzQtyn9pzF/BxJ
yeeTJEmSJEmSJN9eEYDdu3fvwoULgKi9e/cC+Qz82759OzCMM26YgrbQLJiO
EphwaGgI9ChWNMuBGd6AiOaKF5zXhBHWC080kk0KFiC/BqqVI5fo1u/qEd0U
Sfl4nMWeGI4sUr8e2BVsybOsPBuULaScKCAr0cyslOqhWuRd9Mzjx4+B9A8f
Pgxw6HHNh3rTDGZ5MooYCzpERu5Kno8d4gnXKKcZ/1KpdwrEKPTvYBOAtAzI
+l+WFR4cHORg1apV7tGjJWZxJxEHIOrQE0wOSseYTGgEYcZ0mFYFyK0a+pto
w69lvMxWsWXLFgC8/hp3k2VFqTVoFIpt2rSJWWM5sRQjowWPjnLezpd+Rp13
Wok+mdybN2/G2LnKo2FhDITp7uvro2dmHzoDF0Yf5ojnssihZgzfHPIwCy7N
nDlT1w/MAms0NTXpY40hl+1Mn3Ao7g2HIOYNtotBoGPwyjVr1kBh6EraNWXK
FAt58+esWbOgpYwajsYCMAM8Y+/v7zebKLaypnNDQwNjoRPMdenSJVRlLenR
4xKPQA29XZFtHs1pwC92gK7SJ2rA8hgXrMrkHjTwFt5c0zminiW5MQjUbO3a
tdZHY6lAqOFxdMiy5yosjMG+//77KMPyRlVYIXNtNkjELIh+M2Hx+C/ixYIP
s8S/kiRJkiRJkiT/QnLt2jXgk5Fy4Ge3hhmjaAo4uEzZyRIekFu3btFGzwgt
QVwgt0hV8frrr5tjLSr2PksBaVRkSwjyFbFeEQoYt5ivQL5Wv81fd5L+rxCA
5eTJk/XlAYBBwsGk3LzDyRolw91WdsYdO3YM6AtXAuFDvqRLjFeWig2fihIx
L5icp4dDjR6A3xhc05WLoNXIc1wGph+plsoQj5SqcYGHQcswmt///vfnzp0z
EQcNwNVQMPQByWvYEN1GYH5ICgNh9qE8WbGbT/8mv1FE2GhAhGam+9BdFfnk
nQ43sh0/ftyIRPPjSZpUw2QRTjoEBE4RDjhMZJL8LHc5cRx+Q34xIxwknH1w
Adgct2zevJlOWJ+SbpgLc8TTeQQcwaIM3GWSTNrMnTuX58piuFHuYOoPVIU7
mIMxhKk0fQfcxzMsAFjV1atXdYbCvyRiJgOBi1mQDuYSJcKNATbhyTvvvMPY
ITj8zp49W4JM/w6BpcJb6WeKBw8e3Lt3T/8XpMnSDzTgzxW5cIwmDFb/F8fw
SlktQ6MxnNSqzZjCbDbuNaMxTzda0hc5NkUynImJCTdpcqmlpYUZv3v3Lr80
Y4xwXnq2fzM0+uHFd5NXxqoKL8y/UvL5JEmSJEmSJMm/kuhGgSP88pe/PHjw
YCSI4xfMduDAAeu92tjyxPxev34djgM+/Nvf/mZhWdCXbhdr7Fp7KHZLPZWC
BULbs2dPViS+iAdJPSy/Czgs38glkF65fbUo1AXYs7RxeQuYVaRlOlIzAX+E
6tUjw9CZ0fF0s9uBZsHkwHuwKAj2gw8+wG6AWwAteroxhxvL4Yg0gOTCRypF
nkbzK6KnpElHEme+1g4XGtNnMNZ6d96qVas+y6WaJzkBq1vNee3ate7EAai7
28tAO8ao/6i7uzu8TkuWLMGSZeNYl2rBggWxF0zBShBSM34Itj0PIYLNmc+h
UpTtZl0ZhQivYZlt2bJFh4uwP7xs7uxDzJQOK+EqJMvOrQUsCXVDWSwJKKTl
qKyhAL/A2vPmzYMmMDrabNq0yYwZe/fuZU5pwwqRyrmpkAO3LNHsjTfegKBF
FhQGzlrijaBb9w9WihQ08FNzsLA80Jlf+sdcVjDnl5cLlbA8B3A3i4NzXh8c
5032CI1tb29Hf1gbcwRxa2xsNFrYjV3e1ZALx/BQVvWiRYsYCwPnzMKFCznj
txReBPey8RTO8BTpEpaESaGhr+qtW7fq/cI1whhZIfzqqcRK0kxjDk1IwkDQ
wSWU5e/vSzq/0uavJEmSJEmSJMm/tkAZgJp37969cOECOA1ounLlSvCbn77D
+xBVmKUwWe4CALsCwMCBgHDgJQShqalpw4YNoDvIi5DMPTiyhqGhIXdUAXGD
i8mGonMFzPno0SOPdRt540gh4lJAKdgPUIoaVo42+QZq8AggIifFpX7kBxlK
FhxO9A+cPnTokB4QMK1EQGgKnuTYxBrSQMZroWqGCdE4duwY1oOffvjhhww2
uJhW0nQ88eTJk9Un80N+LRYGpwtzlSUaWDOXGTSFwu7duznT1tYGcXA3UE9P
D9jbbUrWU5MJRh1neQrjunnzZtm3WM3TG/b29jY3N5uAItrHQGIUnIRNwERY
DNEzSwVygfXA7ahk1nTUk6Xqg8PmlgnWrwfrMckkBzYzGaBT72phUmCXly9f
hnuaSYN1y+zDlGnmbizmC81hN4yLqywMWjKDrHNWjgYxgx8UZvbs2UblsWDc
9NTX19ff36+vFiVNYUEbFMPIdAipMfM8HTJeUy/qUKYTa0OjOWRqx44dHMBW
3KHGeuCYrixNjno+l3tRhl/OmKOGPq3XzGqnWyzpEKRarnOIFYOFIqFJFGuW
kKIP1DWKDmR1tR6eL+HkxQIRZGjODfrHJsagutppw1zXp5f5WpKCD5MkSZIk
SZIk3ykxmMpIMHeXRKSfroooi2w6Qc4vX758/vz5x48fd0MTuBpU1pSL1ZHc
q2KeQ445DyYUQkfuC11p5qkQ4Jk9LzY3RWI6BXZmCBkQFFgICtV9oPPLXS06
xdwOZgYSFEPVw4cPwz5M5MiBLh6xa1aEO0buBewQRcF0EhkqJvQFMNOnmQqQ
SEuelQIaOaM+2rDG4/BVWFhUExipE6PUIp4Q8otZeBb8ywZmw2CM/M6dOxe+
ABHjvPXRTM7gU2CR6Ll//36ogWwI45jqf/Xq1fqDIDsAbOhVGWBHtFg1r6+d
Fd5JaJFuLzVxPZickP7pc2BgAGrA1Mhq9SsF5acTnsV5pubixYvmMwkfpfu8
mBooGBzKnplihsCqgAibgp6BMyK3btEVJEVvqXycBYBWkKwlS5ZIZORNrBlW
NdNqh9/PhQ7NYD88PMwS+vTTT+mcNpgLQtTV1aX+rkn6oXPdbZyRp5jBxoyI
HDMc1cCA6BbfEFBADxoqwe755aGyfvThWTA1ztAzmjNSudVTVw7Lpr5q+ddN
S2h0JTPF4vHtM3y3UpRmsENo+5o1a7TDy/CvFHyYJEmSJEmSJPkOSkdHh0Fr
gKuZM2fKs0ZHRxcsWADw46qRUeBYgKXVo4D9IHxwoBuC6OS//uu/3AZFJ+bo
MFRp27ZtANcjuehv4pfbgdCNjY1ASlDrrl27AMMgXlMi8Es/gEk6gXkZe2ba
fICukYdRfJlfg7gMweJPkC3PnT17NlBfTc6fPy9oNEGHBMF8cVnOudzPIsGx
WpM8xf1cXMUIVkOD96HP0NAQfwKnaanDK3InZrkTjaHR4FmRmc9nYc9HpLEL
LDQsC+yAscNQ1q1bB0Nsb2/fvHkzpjCVpeFk3Hjo0KHr169z1d6CB2kfLOCz
XBWW5XIg5SyXWZ4BMthTxKRhCqZPVxpnmJ1PPvnEbPP0z+xDLszcHv5Q1kZE
J7Lq9G2xzOA+EnM3/XGXk8g6ZEbGxsbc1cgqZdTwFBP+m9SR5UczxsgBM0JL
SBCdcNK6YKyTjRs30qe0ncXDeTphQbIUrZQHn438kPBZ6IYlm41mNGs9S9pU
inTuxwG/DzAoHh1+LnMkWtiOX8wSWxetDeEyVgywpH9040HlRKNfS16MHOkn
tYoBpuNVxdTxQSBm3DX/wmnnsxR8mCRJkiRJkiT5ropUQn8TaLZa5AMEqYIt
rUJrlgYgmZtxwJ937tyBZfz2t7+1k0qeTw+yAwWgQxAsQLq/v78MHQO8geuA
9GDynp4esa5eA6DpF7mAgffv3w/+hA+KS/k1y8ErTwrgFhIHsgX0cuCGINRA
587OzlOnThlQp9/Np8MgLly4AOkTQ9JShG9WcL05TU1Ncsmy8vIFQLiuOh7U
0NDAr6V43VsEbwV4MxYG+Cz+pTyVhX0pIq3hXyGGrrlXCFQPwjfZOAwCq544
cYKr/LqF7fLlyxiHscOtmDWD/ewnapYZBcovbcDYDqSGG0KpDC9kss6cOWMV
7Ei5r1aYiDYwPtkflIrGO3fulBpXinSRBogeOHDA0gnYn+eiPJ23tbXRG32u
Xr3a+DfLV+lUtYyyGRFVmDNY4NixY1euXEEf1gyNGaa1kml8+PBhtKJbHqEf
ipNu4DKRCxrSA3azoDPrSsNCwVAMXgYt0m6sXvNasD6tnWedYiP3uMTa4F4T
EtIYTTjAvIb+0qfeVf7kt7m5WaZfH3H6YvIy5CjLi6BFaXLHW45HdVtc2vmV
JEmSJEmSJEnytQQyIsoSRxn+J6wC5YKEY2dTNc9kyEm5hlk4YB/z5s0zIz2d
gGx7e3vpEKgMzgxsP5LnMww+Evk36IQerEjLnwBdT8K8Vq1aRT+yP5iXUBb4
WvZ8ITwF6AttBKjTwDJM0LpqUYwYzA8NBP+jZDm6UqebGDI0lFiZZZ1xoX8Z
Iob+4QvQOAbIgbG5C4wNotaYXwX91rCwLw3HKvMvfhmawXKI5bbNLMFJyMu9
e/cYJpA+wjsreVp4Hjc4OLhlyxYoADYP0p2Vii8bsblkyRLrc5lsxKvGv8nQ
aWkUIkaYmJiAdLuEmFOp2dGjRyEycG3m4k9/+tP9+/dRNZ6FzhB2mpnLghuH
hoaw5PXr17dt2waHvXbtGj1s2rSJky4PQ0YlPnr6uMQqgj0Z3YfmDL+1tZUZ
57msirfffhutuAXaxS9taNDe3m7mFk5iNJYNE0djKyO/++67OuNoBn+X11vg
GP6lX5gDo171oGENiBtrBgXMNGi29qhJbUCvAuU0+hd7YpMHDx5w5uUJV1le
MjIw3pTQqtzhyNMKSXwtSfwrSZIkSZIkSfLdFECgxMH4OugVcFRwFf6FaCzh
ih33NjB5AgLWBdUDTemEZmNjY48ePQJVGtloCWb7AW9H1V2ey71AX64CaM2P
ISA3qhCMDWYGGMsgZF7Bv6ZMmSJiF2B7HigOqj9y5Ai/nZ2d4H+dIwDy3bt3
A6fhHbBIs1JkOZj0O7+BiLSE03ESvgAOHx8fD6yoZcIfFH4oOcuePXvM5pF9
TfQrCzO93vNbBh7GzrADhozRsHZXVxcTYZpKS6TBAmAu586dgzUEX4udfbr8
pI30U6Ot80UbCay51h8+fMi9VnnmgD/R1nSC9uzY6dNQRnQzw0ZsE6MfxsiM
bN++nbkYGBgI12FUl7O+M+cZi9GPUEgaMKIIuWRaGb5JL/k14FDiI4Nra2uD
is6dOxcdjDPESvTJVX1V9IZxWAAcG7HJr8q4CY5mDG3t2rXQWJqZE4PFNmnS
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
IYQQQrxLoNc3Pz+f/PmmYJzLY/tdg+Nsr2AJD9/VbBvri2wMfaSFcUxpzMIZ
DoNV9fb2Hj9+PDc3d7fHrl27IFAFBQVcGZmRKXxsTPZOX7tz5w4nXtGSbE3k
cCRlPa89efLkzMyM3RHnu6t94Ru2Q/C44eFhLuu8ffv2GzduoBzUn3fHXVAg
7xWOJJ8/d+6cG/xK1WQV/BJCCCGE2AgEW6WIYoVuJzrMHGGIDfRssWd2dnZk
ZIQZv1emPiIbZDwQRpipA6843tBEOtT09HRLSwtcrLS0lGkPoWBuxnh8bHQf
lFBfX295ObC/srKS2elxFVNt4F74iRJscS7jm2++oU+hTDra69eveYijEMFX
X311+fJlDlPEOSgEd8F+apelymeiDytZgw+FEEIIIUQ0wXzHzcXBXjHTejc2
NrIXGjjhofxrTZHVEXGJ54hRxF6+fBkKhfBp4bvChjvHkCFXqJDlk8ehqqqq
np4eaBST0ufn53N5ZRvZ6Fvti8MOuW3jG6Nrwg2UCYnDJZOTk4yjWWZFTmHz
PVpKTZFCwwkhhBBCiPVMsEwXCdIhpjOBK0thFxGYFXgjJmLmYr7vxxSJpkMX
m52dhWeVlZUVFRXxtMXFxc7OTloVnAtHd+7cefjw4b17937yySc41Nrayv1Q
LcatLO0G1/Cy5Icx6/nzzz/Dv3JzcysrKy9duoTKNDY2MgFI9OOk2gIpnS+E
EEIIIdYvgTvYMRUsQMJDl1RHbYmVwbLir8yNOEDR5ov5jIyKNDIy0tzc/NFH
H8HFsA0dgwddvXp1aWmJZlRbW3vnzp3BwUH87O7uxsmhCDQ4Rta40dbWxqgZ
U9C7q4MxR32fB45++umnKBw3Gh4e9mWtSZxpJPFTZ6DthBBCCCHEOiFwsnef
ggXLueGWpo7oGsdEbGWS9bkrUPuMjHV4/PgxI1mDHlCtW7duwb8S5/O0dRPm
IqCcrq4uGhlhbKu6urqiogK+hl85DNLSe/rquaGWqxNCCCGEEOmQzqwrU7AE
A7eSRMGvdcTvDit5XzMySpnxzMHd79YzmbyOPikjvrljVhP+4fCOgf+DobTz
QgghhBAbkHQ60lSwwDk30q+AWEUoRPy52nX5/3nr4PqXz9R8gmaXLFu463dp
2tPaaTQhhBBCCLHCpNOZTH/FKAW/3gHWmoglxido0aG0mPE1/plkJGi1XhpK
CCGEEEJkg1XM/a7g1zvGu/FC3ThaxgvXyEMhhBBCCBH2omArfMd3o68uotGb
jYdaRgghhBBCkLdv3wbLoR2M3+OvIybeDdbXoMQVIEsBNSGEEEIIsX5Zmf/P
KwqwoViVfIlrCnmoEEIIIYSIx+9BF5NNBq2XtGGxlBcbLQa0AR9ZCCGEEEKk
SjYsjLnm1Bfd4GyccJjCXkIIIYQQIiVoYbZYUrBCbLFa9UWFC7+HdzI8ZIuj
rXZFhBBCCCHE+sNGjnEhJHfV2njn8xJql2JeIjG+5ZJXuzrBsc9eH7wQQggh
hMgU7qq1vvVq3V/1/38RDNfF1sUnZP9wWBe1FUIIIYQQ653sLVYrNjhmYWvQ
bjZsRhEhhBBCCCHEO49vmKKJz9sofl+OYMbEwm06pLRLCCGEEEIIsUFww08+
lr02ppHFJPqcFXg0IYQQQgghhHiHiSlfq10pIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgjxrvH/AJmaEZI=
    "], {{0, 280.5}, {576., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 390.34221694423377`},
  ImageSizeRaw->{576., 280.5},
  PlotRange->{{0, 576.}, {0, 280.5}}]], "Output",
 CellLabel->
  "Out[127]=",ExpressionUUID->"cd251ade-7731-4eb0-bb15-d49db7c39f11"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scratch space", "Section",
 CellChangeTimes->{{3.924297111264571*^9, 
  3.924297112729621*^9}},ExpressionUUID->"2c4f218f-8580-40e9-aea4-\
3dd60c41b053"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "$GDALPath", "=", 
   "\"\</opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.924292505090035*^9, 3.924292512698382*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"77889eb2-ed94-4818-b736-9fa3ca54b9da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cGDALAllRegister", "=", 
  RowBox[{"ForeignFunctionLoad", "[", 
   RowBox[{"$GDALPath", ",", "\"\<GDALAllRegister\>\"", ",", 
    RowBox[{
     RowBox[{"{", "}"}], "->", "\"\<Void\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9242925177914147`*^9, 3.924292559029788*^9}, {
  3.92429285223564*^9, 3.924292852410872*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"a17e6ea0-f110-4bf9-aa53-d462ba784677"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ForeignFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GDALAllRegister\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"Void\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GDALAllRegister\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"Void\""}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"library: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib\"", 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ForeignFunction[
  "/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib", "GDALAllRegister", 
   DataStructure[
   "RawForeignFunction", {
    "FunctionPointer" -> OpaqueRawPointer[18816620352], 
     "Type" -> ({} -> "Void")}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.924292551539741*^9, 3.924292559337241*^9}, 
   3.9242928528113217`*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"988b0443-64c0-48d9-8334-a7e2fab5da13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RawMemoryExport", "[", "\"\<test\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9242928730339823`*^9, 3.924292878338501*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"c69017df-afad-4dab-9f6c-7b9466ac5f6b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ManagedObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                InterpretationBox[
                 RowBox[{
                   TagBox["RawPointer", "SummaryHead"], "[", 
                   
                   DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"4565bdfa0\"", "\"16\""], 
                    ShowStringCharacters -> False], 18628730784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"4565bdfa0\"", "\"16\""], 
                    ShowStringCharacters -> False], 18628730784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                 RawPointer[18628730784, "UnsignedInteger8"], Selectable -> 
                 False, Editable -> False, SelectWithContents -> True], 
                "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"active: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                InterpretationBox[
                 RowBox[{
                   TagBox["RawPointer", "SummaryHead"], "[", 
                   
                   DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"4565bdfa0\"", "\"16\""], 
                    ShowStringCharacters -> False], 18628730784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"4565bdfa0\"", "\"16\""], 
                    ShowStringCharacters -> False], 18628730784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                 RawPointer[18628730784, "UnsignedInteger8"], Selectable -> 
                 False, Editable -> False, SelectWithContents -> True], 
                "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"active: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"freeing function: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["RawMemoryFree", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"base value: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["RawPointer", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"4565bdfa0\"", "\"16\""], 
                    ShowStringCharacters -> False], 18628730784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox["\"type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"address: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"4565bdfa0\"", "\"16\""], 
                    ShowStringCharacters -> False], 18628730784, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   RawPointer[18628730784, "UnsignedInteger8"], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ManagedObject[
   RawPointer[18628730784, "UnsignedInteger8"], 
   RawPointer[18628730784, "UnsignedInteger8"], RawMemoryFree],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924292878553219*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"61ed29d7-6000-4af3-ad8e-3b3d322f75a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cGDALOpenEx", "=", 
  RowBox[{"ForeignFunctionLoad", "[", 
   RowBox[{"$GDALPath", ",", "\"\<GDALOpenEx\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<RawPointer\>\"", "::[", "\"\<UnsignedInteger8\>\"", "]"}],
        ",", "\[IndentingNewLine]", "\"\<CUnsignedInt\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<RawPointer\>\"", "::[", "\"\<UnsignedInteger8\>\"", "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<RawPointer\>\"", "::[", "\"\<UnsignedInteger8\>\"", "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<RawPointer\>\"", "::[", "\"\<UnsignedInteger8\>\"", "]"}]}], 
      "\[IndentingNewLine]", "}"}], "->", "tGDALDatasetH"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.924292849849447*^9, 3.92429290421243*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"bab658e6-9375-4062-987a-a2356e792e38"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ForeignFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GDALOpenEx\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"UnsignedInteger8\"", "]"}], ",", 
                    "\"CUnsignedInt\"", ",", 
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"UnsignedInteger8\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"UnsignedInteger8\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"UnsignedInteger8\"", "]"}]}], "}"}], "\[Rule]", 
                    "\"OpaqueRawPointer\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GDALOpenEx\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"UnsignedInteger8\"", "]"}], ",", 
                    "\"CUnsignedInt\"", ",", 
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"UnsignedInteger8\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"UnsignedInteger8\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"UnsignedInteger8\"", "]"}]}], "}"}], "\[Rule]", 
                    "\"OpaqueRawPointer\""}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"library: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib\"", 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ForeignFunction[
  "/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib", "GDALOpenEx", 
   DataStructure[
   "RawForeignFunction", {
    "FunctionPointer" -> OpaqueRawPointer[18820978912], "Type" -> ({
        TypeSpecifier["RawPointer"]["UnsignedInteger8"], "CUnsignedInt", 
        TypeSpecifier["RawPointer"]["UnsignedInteger8"], 
        TypeSpecifier["RawPointer"]["UnsignedInteger8"], 
        TypeSpecifier["RawPointer"]["UnsignedInteger8"]} -> 
      "OpaqueRawPointer")}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924292905518977*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"6bed711b-7cff-4730-8262-61e29143f978"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cGDALClose", "=", 
  RowBox[{"ForeignFunctionLoad", "[", 
   RowBox[{"$GDALPath", ",", "\"\<GDALClose\>\"", ",", 
    RowBox[{
     RowBox[{"{", "tGDALDatasetH", "}"}], "->", "\"\<CInt\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.924294218451632*^9, 3.924294237749858*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"451155fb-514a-45f8-89c3-00038c16dc6b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ForeignFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GDALClose\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"OpaqueRawPointer\"", "}"}], "\[Rule]", 
                    "\"CInt\""}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"library: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib\"", 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ForeignFunction[
  "/opt/homebrew/Cellar/gdal/3.8.5_2/lib/libgdal.dylib", "GDALClose", 
   DataStructure[
   "RawForeignFunction", {
    "FunctionPointer" -> OpaqueRawPointer[18820981656], 
     "Type" -> ({"OpaqueRawPointer"} -> "CInt")}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924294238384576*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"784fb152-87fe-47e5-be3b-98941c4f8b9b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"tGDALDatasetH", "=", "\"\<OpaqueRawPointer\>\""}], ";"}]], "Input",\

 CellChangeTimes->{{3.924292766653387*^9, 3.924292777175185*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"0f0e9df2-ba8b-417b-a9ac-7ab72bd80356"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$GDALConstants", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{"\"\<GDAL_OF_VECTOR\>\"", "->", "4"}], "\[IndentingNewLine]", 
    "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.92429295920254*^9, 3.924292975934227*^9}, 
   3.924293023707705*^9},
 CellLabel->
  "In[303]:=",ExpressionUUID->"957f2891-7dcf-4099-a329-7ab99ba7410e"],

Cell["\<\
GDALDatasetH GDALOpenEx(
\tconst char *pszFilename,
\tunsigned int nOpenFlags,
\tconst char *const *papszAllowedDrivers,
\tconst char *const *papszOpenOptions,
\tconst char *const *papszSiblingFiles
)\
\>", "Program",
 CellChangeTimes->{{3.9242928243297167`*^9, 
  3.924292843846224*^9}},ExpressionUUID->"92f1e0fa-f6f4-44cc-81d3-\
7c0ac08f86b3"],

Cell[BoxData[
 RowBox[{"cGDALAllRegister", "[", "]"}]], "Input",
 CellChangeTimes->{{3.924292561126458*^9, 3.9242925611588783`*^9}, 
   3.924292855512953*^9},
 CellLabel->
  "In[296]:=",ExpressionUUID->"1a2ab927-bda3-46b5-b1d1-b42ea015beb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "=", 
  RowBox[{"cGDALOpenEx", "[", 
   RowBox[{
   "\"\</Users/christopher/Library/CloudStorage/Dropbox/UChicago/projects/\
districtingDynamics/rawData/ma_2020_gen_2020_blocks/ma_2020_gen_2020_blocks.\
shp\>\"", ",", 
    RowBox[{"$GDALConstants", "[", "\"\<GDAL_OF_VECTOR\>\"", "]"}], ",", 
    RowBox[{"OpaqueRawPointer", "[", "0", "]"}], ",", 
    RowBox[{"OpaqueRawPointer", "[", "0", "]"}], ",", 
    RowBox[{"OpaqueRawPointer", "[", "0", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924292911488635*^9, 3.924292919487083*^9}, {
  3.9242930269177847`*^9, 3.924293030605209*^9}, {3.924294080902543*^9, 
  3.924294119146997*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"b2499f25-03e7-4fef-849b-0427ac33df58"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"31fa90d00\"", "\"16\""], 
                    ShowStringCharacters -> False], 13416074496, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox[
                    SubscriptBox["\"31fa90d00\"", "\"16\""], 
                    ShowStringCharacters -> False], 13416074496, Editable -> 
                    False], BaseForm[#, 16]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  OpaqueRawPointer[13416074496],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.924294085613763*^9, 3.924294088989744*^9}, 
   3.924294120536949*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"97e68518-8171-4c19-a397-09ef1c468428"]
}, Open  ]]
}, Closed]]
},
WindowSize->{808, 911},
WindowMargins->{{Automatic, 381}, {58, Automatic}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (March 16, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3c507c34-4be7-45d4-b04e-9526405292ee"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 175, 2, 29, "Input",ExpressionUUID->"e0f2d994-ad51-4345-950e-f8b730ac8c6c"],
Cell[CellGroupData[{
Cell[758, 26, 158, 3, 66, "Section",ExpressionUUID->"b4d5b2ba-9cad-4d52-bb03-c444437b6b46"],
Cell[919, 31, 315, 6, 29, "Input",ExpressionUUID->"b4a018b4-ed72-45de-a14b-9d041d4fee83"],
Cell[CellGroupData[{
Cell[1259, 41, 246, 4, 29, "Input",ExpressionUUID->"87db8e1a-53d4-472e-9cd2-72c4dcef0aa7"],
Cell[1508, 47, 22558, 395, 58, "Output",ExpressionUUID->"1ceddbd8-7852-43e2-9eb8-329c2393b5c4"]
}, Open  ]],
Cell[24081, 445, 239, 4, 29, "Input",ExpressionUUID->"3d7a9d41-0890-49fa-bf3c-32831cc78b84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24357, 454, 158, 3, 66, "Section",ExpressionUUID->"3e0e8f6b-c516-4b7e-81e6-e703d5595225"],
Cell[24518, 459, 224, 4, 29, "Input",ExpressionUUID->"83440d1b-3cdd-4c7d-ab90-184273e9d883"],
Cell[24745, 465, 209, 3, 29, "Input",ExpressionUUID->"9f70aa05-5ae3-4109-95a5-db9893bebdcd"],
Cell[CellGroupData[{
Cell[24979, 472, 243, 4, 29, "Input",ExpressionUUID->"8d6d82ba-6360-44ac-8efa-9eb8ebfe19ff"],
Cell[25225, 478, 112, 1, 33, "Output",ExpressionUUID->"e2ee0935-9584-4234-884c-c4458ecccca6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25374, 484, 86, 0, 53, "Subsection",ExpressionUUID->"c1255cd8-4fd2-4c10-8349-91f44801afab"],
Cell[CellGroupData[{
Cell[25485, 488, 300, 6, 90, "Input",ExpressionUUID->"ea2eed04-90ae-4c46-a0b9-3da40e35ef36"],
Cell[25788, 496, 19806, 387, 72, "Output",ExpressionUUID->"05163049-92e5-4e8b-b4dc-d3526c51823b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45631, 888, 161, 2, 29, "Input",ExpressionUUID->"21ee3eb0-a322-4e7f-b0bc-67211e8e1a5c"],
Cell[45795, 892, 23364, 454, 111, "Output",ExpressionUUID->"920f1337-f7a6-4c63-a09a-b82ce25b6824"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69196, 1351, 222, 3, 29, "Input",ExpressionUUID->"b9c103fe-b55e-4ff3-8ceb-301362257120"],
Cell[69421, 1356, 107, 1, 33, "Output",ExpressionUUID->"9a2643fd-627b-4cff-a8bb-a49687ce9910"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69565, 1362, 201, 4, 29, "Input",ExpressionUUID->"08fbebdc-0479-4ef1-8160-6e35325adc09"],
Cell[69769, 1368, 23063, 455, 111, "Output",ExpressionUUID->"e9fbcae0-4b5b-421d-8f63-d7c4bfddd6dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92869, 1828, 184, 4, 29, "Input",ExpressionUUID->"b597d422-c8f3-4571-908f-43e3f5bbb14a"],
Cell[93056, 1834, 108, 1, 33, "Output",ExpressionUUID->"45859e04-6358-4d49-9b84-b6e1d0ebb264"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93201, 1840, 238, 6, 29, "Input",ExpressionUUID->"a5c30808-a6b0-4bb5-9e57-95bc2d64e1f9"],
Cell[93442, 1848, 95, 0, 23, "EchoTiming",ExpressionUUID->"104a1ced-d7df-4f4d-b0c8-eec080d3fa81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93574, 1853, 108, 1, 29, "Input",ExpressionUUID->"dcc29899-af8b-4932-adb4-0f834f9f0974"],
Cell[93685, 1856, 7384, 139, 290, "Output",ExpressionUUID->"0e280fd9-1a44-446c-a6dc-31256db45168"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101106, 2000, 170, 3, 29, "Input",ExpressionUUID->"fb1e6485-f814-4158-a858-1c90e20aa589"],
Cell[101279, 2005, 197, 3, 33, "Output",ExpressionUUID->"bf59fe06-c4dd-4206-8428-97bfd3a68bd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101513, 2013, 242, 6, 29, "Input",ExpressionUUID->"61fdcc2e-4280-47b0-9e2a-c03c9b0f0ad7"],
Cell[101758, 2021, 95, 0, 23, "EchoTiming",ExpressionUUID->"819fa0c7-1ac3-4c94-85ee-ab69b542bcfa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101890, 2026, 179, 3, 29, "Input",ExpressionUUID->"3571b5dc-cb0a-473e-81d5-a7b2a0444855"],
Cell[102072, 2031, 107, 1, 33, "Output",ExpressionUUID->"94d1c795-fee4-4c92-aea3-a59b2eb1ea3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102216, 2037, 297, 7, 29, "Input",ExpressionUUID->"433a7975-7235-48d0-9027-5bd56b4e19e1"],
Cell[102516, 2046, 1738, 25, 217, "Output",ExpressionUUID->"cd7cddf0-a859-4f2f-9f75-580f73e4e0f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104291, 2076, 216, 3, 29, "Input",ExpressionUUID->"f4da7f87-d800-4d8c-9b30-e0c35eb66f5c"],
Cell[104510, 2081, 119, 1, 33, "Output",ExpressionUUID->"f2012ebb-d36a-4b63-b698-02f38047dafe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104666, 2087, 219, 5, 29, "Input",ExpressionUUID->"7a3df81b-5f27-4568-bdfd-2654591712df"],
Cell[104888, 2094, 110, 1, 33, "Output",ExpressionUUID->"ef5d3de9-0c22-42e8-8075-91a8327861cc"]
}, Open  ]],
Cell[105013, 2098, 156, 2, 29, "Input",ExpressionUUID->"5646de19-c233-46e8-a16b-6ce344ea9993"],
Cell[CellGroupData[{
Cell[105194, 2104, 222, 3, 29, "Input",ExpressionUUID->"9474026b-c392-4ad8-94e4-9397735f5ab7"],
Cell[105419, 2109, 43151, 839, 178, "Output",ExpressionUUID->"8852e89d-2456-4350-a1db-50469cb03a28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148607, 2953, 229, 3, 29, "Input",ExpressionUUID->"c5a95d07-c3b6-476e-aa81-ab352817add1"],
Cell[148839, 2958, 2977, 64, 45, "Output",ExpressionUUID->"de51948a-8a76-4deb-bc44-b0fd86a7f664"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151853, 3027, 220, 3, 29, "Input",ExpressionUUID->"be0cf20d-c73f-4175-a477-1af52ca028dd"],
Cell[152076, 3032, 108, 1, 33, "Output",ExpressionUUID->"d1b714ce-a444-4223-8052-e1c43f74a2ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152221, 3038, 252, 4, 29, "Input",ExpressionUUID->"72af52e0-5aa3-48d1-b5b5-ddd10d6e6277"],
Cell[152476, 3044, 2977, 64, 45, "Output",ExpressionUUID->"bf974236-cd4c-4dd0-ad9a-48a5adaaf9db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155490, 3113, 247, 4, 29, "Input",ExpressionUUID->"fc84ed1d-acc1-4add-81e3-2e2c93065557"],
Cell[155740, 3119, 107, 1, 33, "Output",ExpressionUUID->"4199c3fb-82fd-4e28-a31c-5c0ea5b2ff07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155884, 3125, 318, 6, 29, "Input",ExpressionUUID->"272d785e-362d-4191-9c68-5d70a1827bfe"],
Cell[156205, 3133, 113, 1, 33, "Output",ExpressionUUID->"9097708a-6426-4319-ace5-b8c78998858c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156355, 3139, 183, 3, 29, "Input",ExpressionUUID->"c4d22bce-3ef1-40fd-9d6c-109811b2ff96"],
Cell[156541, 3144, 43150, 839, 178, "Output",ExpressionUUID->"9240bdfb-1779-48c8-863c-4a0c00c11cc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199728, 3988, 204, 4, 29, "Input",ExpressionUUID->"2634c0d2-06b5-421c-91a0-8abd563dd4af"],
Cell[199935, 3994, 176, 3, 33, "Output",ExpressionUUID->"c47c1640-e67b-4b00-bd28-a75f9d909556"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200148, 4002, 173, 3, 29, "Input",ExpressionUUID->"584706c9-ff63-4c80-8628-1c23b372bea6"],
Cell[200324, 4007, 120, 1, 33, "Output",ExpressionUUID->"a296b3c2-793d-416c-ab0a-12c369d24063"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200481, 4013, 154, 2, 29, "Input",ExpressionUUID->"5013693d-c561-46bc-8c81-a1acb668096c"],
Cell[200638, 4017, 559, 9, 74, "Output",ExpressionUUID->"bfe91c8c-092a-4554-9ea7-788ba793fc29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201234, 4031, 162, 2, 29, "Input",ExpressionUUID->"5f278a34-6c12-44eb-b62e-06bef874b1f3"],
Cell[201399, 4035, 1270, 21, 94, "Output",ExpressionUUID->"04ae83f2-26f6-42d2-8ca9-81a45a7f6891"]
}, Open  ]],
Cell[202684, 4059, 405, 8, 49, "Input",ExpressionUUID->"ceabc400-fd83-4e1d-ac6e-59d34d6c2dd7"],
Cell[203092, 4069, 203, 4, 29, "Input",ExpressionUUID->"545f1ea7-0102-47ca-958c-b18ae4eb055a"],
Cell[CellGroupData[{
Cell[203320, 4077, 409, 10, 29, "Input",ExpressionUUID->"f97be724-db63-4204-8535-15fd7942a8bf"],
Cell[203732, 4089, 568, 9, 53, "Output",ExpressionUUID->"190ff503-2146-474b-b546-451badd2edde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204337, 4103, 180, 3, 29, "Input",ExpressionUUID->"1b37d2c3-c3c6-4a71-b8db-26e4204a1e59"],
Cell[204520, 4108, 114, 1, 33, "Output",ExpressionUUID->"6f79c202-fbf2-44ca-a4a3-550dc654d875"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204671, 4114, 592, 16, 70, "Input",ExpressionUUID->"3c7c1941-5e8d-43ba-874d-7534fb5a252b"],
Cell[205266, 4132, 172, 3, 33, "Output",ExpressionUUID->"474278ef-736d-4ae5-9b8e-2fac016e7866"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205475, 4140, 558, 16, 70, "Input",ExpressionUUID->"cfc98f80-735d-479d-b872-0b5b27570ec5"],
Cell[206036, 4158, 265, 7, 40, "Output",ExpressionUUID->"5b54515d-3610-411e-b6fb-9d7eb0034351"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206338, 4170, 558, 15, 70, "Input",ExpressionUUID->"f2c252b6-a4dd-413e-ba20-314c2c1c3e2f"],
Cell[206899, 4187, 171893, 2984, 386, "Output",ExpressionUUID->"b519ac91-3564-4f33-a2f9-54f4e6545b9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378829, 7176, 252, 5, 29, "Input",ExpressionUUID->"fb08a461-86e0-413e-b76e-50d64025985a"],
Cell[379084, 7183, 158974, 2771, 324, "Output",ExpressionUUID->"338c9d85-631d-43fc-a97c-01c286e3331a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538095, 9959, 386, 10, 29, "Input",ExpressionUUID->"bd7974a9-b762-4dff-af3f-e408612c7479"],
Cell[538484, 9971, 95, 0, 23, "EchoTiming",ExpressionUUID->"b58c624e-2a6e-4251-994b-a3499975c181"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538616, 9976, 109, 1, 29, "Input",ExpressionUUID->"85c8bb90-d4d4-47ba-a627-f2e9281196bc"],
Cell[538728, 9979, 7385, 139, 290, "Output",ExpressionUUID->"20e8b484-b5e5-44fb-9683-990bd83d4dcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546150, 10123, 356, 9, 29, "Input",ExpressionUUID->"e3388161-328f-4e12-a8c4-a091cdc4e730"],
Cell[546509, 10134, 17916, 520, 236, "Output",ExpressionUUID->"9cf91555-041c-4cf2-a7f5-82dc432208a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564462, 10659, 417, 12, 29, "Input",ExpressionUUID->"2f503503-fb9e-402a-ba90-8c3a8e7f439f"],
Cell[564882, 10673, 95, 0, 23, "EchoTiming",ExpressionUUID->"9d69689d-82a0-4366-b67b-6a30cfa4ace0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565014, 10678, 771, 22, 70, "Input",ExpressionUUID->"3dc84558-2a66-4086-a46f-a98f8aee58f2"],
Cell[565788, 10702, 95, 0, 23, "EchoTiming",ExpressionUUID->"069c19a2-8410-426f-bc55-f97a1418a6d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565920, 10707, 381, 10, 29, "Input",ExpressionUUID->"70dc1825-1fbc-4787-a9ac-35f608a23139"],
Cell[566304, 10719, 144046, 2367, 320, "Output",ExpressionUUID->"7652e4ab-dffc-4098-a7b6-95ab42260816"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[710399, 13092, 86, 0, 53, "Subsection",ExpressionUUID->"093a0e0a-2a69-4190-bc44-c5f51982c976"],
Cell[CellGroupData[{
Cell[710510, 13096, 407, 8, 111, "Input",ExpressionUUID->"b39ecbce-0635-4301-ba24-2b027ead5b4d"],
Cell[710920, 13106, 19807, 387, 72, "Output",ExpressionUUID->"459c489f-e22a-4bb8-8489-b38b7deef65e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[730764, 13498, 270, 6, 70, "Input",ExpressionUUID->"d7208f95-8231-4faf-a6c9-2db7d09b59dc"],
Cell[731037, 13506, 19809, 387, 72, "Output",ExpressionUUID->"08f8b22b-58af-47d0-be6f-65db030b50c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[750883, 13898, 344, 8, 90, "Input",ExpressionUUID->"f050c9d1-f8f4-45af-a6e0-d8cf9d214590"],
Cell[751230, 13908, 96, 0, 23, "EchoTiming",ExpressionUUID->"d8f75077-f823-45e2-9614-4b668e1234a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[751363, 13913, 249, 6, 29, "Input",ExpressionUUID->"5c81eae6-4dd3-4f52-9a5f-49dccd33ab55"],
Cell[751615, 13921, 112, 1, 33, "Output",ExpressionUUID->"ad707651-1f0e-46c1-94b8-6edb868502e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[751764, 13927, 313, 8, 29, "Input",ExpressionUUID->"fe033a19-3c27-4039-be4e-373d4546203c"],
Cell[752080, 13937, 10958, 200, 290, "Output",ExpressionUUID->"26891a3f-2b7c-4baf-bc48-902f9c51f7eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[763075, 14142, 317, 6, 29, "Input",ExpressionUUID->"0bb78c6f-8c8e-431f-bcdd-20eee09dc34d"],
Cell[763395, 14150, 23066, 455, 111, "Output",ExpressionUUID->"a0ef99b0-34f4-4238-9cfb-0d1d562e73b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[786498, 14610, 345, 9, 29, "Input",ExpressionUUID->"6972a773-0410-4ff2-9103-fcbe3bb9223e"],
Cell[786846, 14621, 96, 0, 23, "EchoTiming",ExpressionUUID->"b63acacb-6410-4d3e-b6b7-fda2e414b92f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[786979, 14626, 386, 10, 29, "Input",ExpressionUUID->"a336003d-a5d8-426d-9149-5b3b55ac06a7"],
Cell[787368, 14638, 97, 0, 23, "EchoTiming",ExpressionUUID->"ddd96938-311c-4094-83dc-7baf30ba062f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[787502, 14643, 136, 2, 29, "Input",ExpressionUUID->"e4681253-cc86-452a-860a-e934306b58bb"],
Cell[787641, 14647, 112, 1, 33, "Output",ExpressionUUID->"32e4b453-fae6-4b30-86b2-9d2e3b4bcfd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[787790, 14653, 109, 1, 29, "Input",ExpressionUUID->"3505fc68-20ec-4f05-97b2-1b4554f60c5a"],
Cell[787902, 14656, 11076, 203, 290, "Output",ExpressionUUID->"63c39cdd-e843-4b63-ae5b-f87918985baf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[799015, 14864, 353, 9, 29, "Input",ExpressionUUID->"2e59c4e7-3500-4447-9163-c99511cea6ab"],
Cell[799371, 14875, 32453, 944, 234, "Output",ExpressionUUID->"4844b0d5-5e0f-40f6-af43-b64812764f69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[831861, 15824, 216, 3, 29, "Input",ExpressionUUID->"34858067-1e38-413c-8c9a-2fec00f0bb67"],
Cell[832080, 15829, 137, 1, 33, "Output",ExpressionUUID->"fc2f6550-c6b6-47ae-882f-94485eb45f0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[832254, 15835, 305, 6, 29, "Input",ExpressionUUID->"720f0b1a-68d5-4e4c-8faf-43c5dc3c8432"],
Cell[832562, 15843, 110, 1, 33, "Output",ExpressionUUID->"70a7eedf-81a6-4420-ba5e-1cc5ade76674"]
}, Open  ]],
Cell[832687, 15847, 224, 3, 29, "Input",ExpressionUUID->"31c6e37b-22f1-42e8-9dcb-4fbfb1bd29bb"],
Cell[CellGroupData[{
Cell[832936, 15854, 222, 3, 29, "Input",ExpressionUUID->"e934dccb-c5b9-4a44-bff5-78ca47ad8d43"],
Cell[833161, 15859, 43621, 847, 178, "Output",ExpressionUUID->"91577cc8-37c1-4536-ae0a-d3cf738483e5"]
}, Open  ]],
Cell[876797, 16709, 580, 15, 29, "Input",ExpressionUUID->"05308e10-85f6-4870-93b2-6136ec047ffb"],
Cell[CellGroupData[{
Cell[877402, 16728, 229, 3, 29, "Input",ExpressionUUID->"11384dc7-e6cf-4d13-8a48-ee4a5fedf954"],
Cell[877634, 16733, 3192, 68, 45, "Output",ExpressionUUID->"8ec6f2b2-e5d4-4e04-96c5-acd4b9a11816"]
}, Open  ]],
Cell[CellGroupData[{
Cell[880863, 16806, 220, 3, 29, "Input",ExpressionUUID->"777f694d-48d0-4ba1-bfff-025cce3c87f2"],
Cell[881086, 16811, 352, 5, 33, "Output",ExpressionUUID->"ec524825-ab34-4862-80c3-c3a7130b5077"]
}, Open  ]],
Cell[CellGroupData[{
Cell[881475, 16821, 252, 4, 29, "Input",ExpressionUUID->"09e6bb8f-5281-4d13-b759-532371733a33"],
Cell[881730, 16827, 3167, 67, 45, "Output",ExpressionUUID->"01264e55-b4b0-41bf-bebb-cf46a9093f2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[884934, 16899, 247, 4, 29, "Input",ExpressionUUID->"410c2962-1592-4459-bb07-ea122a1ee545"],
Cell[885184, 16905, 248, 3, 33, "Output",ExpressionUUID->"70d25bd2-c6f5-411a-ba3c-02ca7fb27881"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885469, 16913, 318, 6, 29, "Input",ExpressionUUID->"06970083-d1c9-4205-b3b5-634a1955286c"],
Cell[885790, 16921, 277, 4, 33, "Output",ExpressionUUID->"dfe4620c-a37a-44c6-b1f3-eeee608e62be"]
}, Open  ]],
Cell[886082, 16928, 405, 8, 49, "Input",ExpressionUUID->"81f20685-effc-479f-b62b-f0a565ffd953"],
Cell[CellGroupData[{
Cell[886512, 16940, 409, 10, 29, "Input",ExpressionUUID->"7ea4a6f4-ace5-44fb-b3dd-e729346bf9b0"],
Cell[886924, 16952, 640, 10, 74, "Output",ExpressionUUID->"fe437f8c-4b8e-4108-ad70-b89e2d592b58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[887601, 16967, 301, 5, 29, "Input",ExpressionUUID->"d7900b2d-269e-40ea-b0d1-6e99b9104f97"],
Cell[887905, 16974, 180, 2, 33, "Output",ExpressionUUID->"25d435b3-9d46-4ad8-be93-18c0d6c2bd5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[888122, 16981, 417, 12, 29, "Input",ExpressionUUID->"10f96af2-57ac-4298-8825-abadb00c6c8b"],
Cell[888542, 16995, 96, 0, 23, "EchoTiming",ExpressionUUID->"3bf6646b-6181-4b68-9adc-f2b8b5747b19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[888675, 17000, 144, 3, 29, "Input",ExpressionUUID->"75315cbb-73c6-4bea-b411-d46229a3b8d6"],
Cell[888822, 17005, 116, 2, 33, "Output",ExpressionUUID->"25c438cf-aba2-41f5-a370-74ac746be74b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[888975, 17012, 381, 10, 29, "Input",ExpressionUUID->"e199b0e9-ffc3-4cd2-82b9-f1e7affd4410"],
Cell[889359, 17024, 351397, 5766, 407, "Output",ExpressionUUID->"cd251ade-7731-4eb0-bb15-d49db7c39f11"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1240817, 22797, 158, 3, 66, "Section",ExpressionUUID->"2c4f218f-8580-40e9-aea4-3dd60c41b053"],
Cell[1240978, 22802, 292, 8, 30, "Input",ExpressionUUID->"77889eb2-ed94-4818-b736-9fa3ca54b9da"],
Cell[CellGroupData[{
Cell[1241295, 22814, 431, 9, 30, "Input",ExpressionUUID->"a17e6ea0-f110-4bf9-aa53-d462ba784677"],
Cell[1241729, 22825, 4628, 102, 61, "Output",ExpressionUUID->"988b0443-64c0-48d9-8334-a7e2fab5da13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1246394, 22932, 230, 4, 30, "Input",ExpressionUUID->"c69017df-afad-4dab-9f6c-7b9466ac5f6b"],
Cell[1246627, 22938, 15563, 308, 89, "Output",ExpressionUUID->"61ed29d7-6000-4af3-ad8e-3b3d322f75a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262227, 23251, 941, 20, 157, "Input",ExpressionUUID->"bab658e6-9375-4062-987a-a2356e792e38"],
Cell[1263171, 23273, 6328, 133, 80, "Output",ExpressionUUID->"6bed711b-7cff-4730-8262-61e29143f978"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1269536, 23411, 390, 9, 30, "Input",ExpressionUUID->"451155fb-514a-45f8-89c3-00038c16dc6b"],
Cell[1269929, 23422, 4628, 101, 61, "Output",ExpressionUUID->"784fb152-87fe-47e5-be3b-98941c4f8b9b"]
}, Open  ]],
Cell[1274572, 23526, 253, 6, 30, "Input",ExpressionUUID->"0f0e9df2-ba8b-417b-a9ac-7ab72bd80356"],
Cell[1274828, 23534, 378, 9, 73, "Input",ExpressionUUID->"957f2891-7dcf-4099-a329-7ab99ba7410e"],
Cell[1275209, 23545, 355, 11, 152, "Program",ExpressionUUID->"92f1e0fa-f6f4-44cc-81d3-7c0ac08f86b3"],
Cell[1275567, 23558, 241, 5, 30, "Input",ExpressionUUID->"1a2ab927-bda3-46b5-b1d1-b42ea015beb3"],
Cell[CellGroupData[{
Cell[1275833, 23567, 755, 15, 115, "Input",ExpressionUUID->"b2499f25-03e7-4fef-849b-0427ac33df58"],
Cell[1276591, 23584, 3055, 67, 49, "Output",ExpressionUUID->"97e68518-8171-4c19-a397-09ef1c468428"]
}, Open  ]]
}, Closed]]
}
]
*)

